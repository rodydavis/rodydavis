---
interface SocialLink {
  link: string;
  icon: string;
}

interface Props {
  links: SocialLink[];
}

const { links } = Astro.props;

const socialSvgs = {
  email: "/social/email.svg",
  facebook: "/social/facebook.svg",
  github: "/social/github.svg",
  instagram: "/social/instagram.svg",
  linkedin: "/social/linkedin.svg",
  twitter: "/social/twitter.svg",
  youtube: "/social/youtube.svg",
  tiktok: "/social/tiktok.svg",
  rss: "/social/rss.svg",
};
---

<div class="links">
  {
    links.map(({ link, icon }) => {
      const svg = Object(socialSvgs)[icon];
      if (svg) {
        return (
          <a id="social-icon" href={link} target="_blank" rel="noopener">
            <img src={svg} alt={icon} />
          </a>
        );
      } else {
        return (
          <a id="social-icon" href={link} target="_blank" rel="noopener">
            <i class="material-icons">{icon}</i>
          </a>
        );
      }
    })
  }
</div>

<style>
  #social-icon,
  img {
    width: 1.5rem;
    height: 1.5rem;
    text-decoration: none;
    cursor: pointer;
  }
  #social-icon {
    padding: 0.25rem;
    border-radius: 50%;
  }
  #social-icon img {
    background-color: transparent;
  }
  .links {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }
  @media (prefers-color-scheme: dark) {
    #social-icon img {
      filter: invert(1);
    }
  }
</style>
