{
  "version": "https://jsonfeed.org/version/1",
  "title": "Rody Davis",
  "home_page_url": "https://rodydavis.com",
  "feed_url": "https://rodydavis.com/feed/feed.json",
  "description": "Rody Davis personal blog with all my apps, examples and crazy explorations.",
  "author": {
    "name": "Rody Davis",
    "url": ""
  },
  "items": [{
      "id": "https://rodydavis.com/posts/lit-monaco-editor/",
      "url": "https://rodydavis.com/posts/lit-monaco-editor/",
      "title": "Lit and Monaco Editor",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to wrap the <a href=\"https://microsoft.github.io/monaco-editor/\">Monaco Editor</a> that powers <a href=\"https://code.visualstudio.com/\">VSCode</a>.</p>\n<p><strong>TLDR</strong> You can find the final source <a href=\"https://github.com/rodydavis/lit-code-editor\">here</a>.</p>\n<p>To learn how to build an extension with VSCode and Lit check out the blog post <a href=\"https://rodydavis.com/posts/lit-vscode-extension/\">here</a>.</p>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-code-editor</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-code-editor<br><span class=\"token function\">npm</span> i lit monaco-editor<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">\"/lit-code-editor/\"</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Code Editor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/code-editor.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code-editor</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"token keyword\">function</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world! :)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br>      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code-editor</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>We are setting up the <code>lit-element</code> to have a slot which will be the code for the editor to start with. The language can be set with the type or adding an attribute to the <code>code-editor</code> component.</p>\n<h2 id=\"web-component\">Web Component <a class=\"direct-link\" href=\"#web-component\">#</a></h2>\n<p>Before we update our component we need to rename <code>my-element.ts</code> to <code>code-editor.ts</code></p>\n<p>Open up <code>code-editor.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRef<span class=\"token punctuation\">,</span> Ref<span class=\"token punctuation\">,</span> ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/directives/ref.js\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// -- Monaco Editor Imports --</span><br><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> monaco <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/min/vs/editor/editor.main.css\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> editorWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/editor/editor.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> jsonWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/json/json.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> cssWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/css/css.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> htmlWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/html/html.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> tsWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/typescript/ts.worker?worker\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// @ts-ignore</span><br>self<span class=\"token punctuation\">.</span>MonacoEnvironment <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">getWorker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">jsonWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"css\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"scss\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"less\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">cssWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"html\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"handlebars\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"razor\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">htmlWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"typescript\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tsWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">editorWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code-editor\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CodeEditor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">private</span> container<span class=\"token operator\">:</span> Ref<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  editor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span>IStandaloneCodeEditor<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> language<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> code<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      --editor-width: 100%;<br>      --editor-height: 100vh;<br>    }<br>    main {<br>      width: var(--editor-width);<br>      height: var(--editor-height);<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;style><br>        </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>styles<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>      &lt;/style><br>      &lt;main </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">>&lt;/main><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br>declare global <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HTMLElementTagNameMap</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"code-editor\"</span><span class=\"token operator\">:</span> CodeEditor<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Here we are just setting up some boilerplate to set up the <a href=\"https://vitejs.dev/guide/features.html#web-workers\">web workers with vite</a> and passing the reference from the container element to the template using the <a href=\"https://lit.dev/docs/templates/directives/#ref\">ref directive</a>.</p>\n<p>The styles from monaco editor are also passed as a style element load in the shadow root.</p>\n<p>Now let's add some helper methods for accessing the code and language provided:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">private</span> <span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">private</span> <span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> file<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">private</span> <span class=\"token function\">getLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">private</span> <span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"vs-dark\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> <span class=\"token string\">\"vs-light\"</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">private</span> <span class=\"token function\">isDark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>    window<span class=\"token punctuation\">.</span>matchMedia <span class=\"token operator\">&amp;&amp;</span><br>    window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>These methods are checking the slot for the script tag with the language provided or looking for a property set on <code>code-editor</code> and then returning the value.</p>\n<p>Now let's attach the editor to the container reference:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor <span class=\"token operator\">=</span> monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span>value<span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    language<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    theme<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    automaticLayout<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   window<br>    <span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span><span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Now the editor should be running and able to be interacted with:</p>\n<img width=\"100%\" src=\"/img/code-editor/light.png\">\n<p>When the system changes to dark mode it will <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\">switch</a> as well!</p>\n<img width=\"100%\" src=\"/img/code-editor/dark.png\">\n<p>To get and set the value from the editor we can add 2 helper methods:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Everything should work as expected now and the final code should look like the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRef<span class=\"token punctuation\">,</span> Ref<span class=\"token punctuation\">,</span> ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/directives/ref.js\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// -- Monaco Editor Imports --</span><br><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> monaco <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/min/vs/editor/editor.main.css\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> editorWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/editor/editor.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> jsonWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/json/json.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> cssWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/css/css.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> htmlWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/html/html.worker?worker\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> tsWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"monaco-editor/esm/vs/language/typescript/ts.worker?worker\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// @ts-ignore</span><br>self<span class=\"token punctuation\">.</span>MonacoEnvironment <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">getWorker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">jsonWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"css\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"scss\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"less\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">cssWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"html\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"handlebars\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"razor\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">htmlWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>label <span class=\"token operator\">===</span> <span class=\"token string\">\"typescript\"</span> <span class=\"token operator\">||</span> label <span class=\"token operator\">===</span> <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tsWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">editorWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code-editor\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CodeEditor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">private</span> container<span class=\"token operator\">:</span> Ref<span class=\"token operator\">&lt;</span>HTMLElement<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  editor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span>IStandaloneCodeEditor<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> theme<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> language<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> code<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      --editor-width: 100%;<br>      --editor-height: 100vh;<br>    }<br>    main {<br>      width: var(--editor-width);<br>      height: var(--editor-height);<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;style><br>        </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>styles<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>      &lt;/style><br>      &lt;main </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">>&lt;/main><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> file<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">getLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"vs-dark\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"vs-light\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">isDark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><br>      window<span class=\"token punctuation\">.</span>matchMedia <span class=\"token operator\">&amp;&amp;</span><br>      window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editor <span class=\"token operator\">=</span> monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span>value<span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>      value<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      language<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      automaticLayout<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    window<br>      <span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        monaco<span class=\"token punctuation\">.</span>editor<span class=\"token punctuation\">.</span><span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br>declare global <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HTMLElementTagNameMap</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"code-editor\"</span><span class=\"token operator\">:</span> CodeEditor<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"usage\">Usage <a class=\"direct-link\" href=\"#usage\">#</a></h2>\n<p>To use this component it can have the code provided by slots:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code-editor</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"token keyword\">function</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world! :)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code-editor</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Or for properties:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code-editor</span> <br>  <span class=\"token attr-name\">code</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console.log(<span class=\"token punctuation\">'</span>Hello World<span class=\"token punctuation\">'</span>);<span class=\"token punctuation\">\"</span></span> <br>  <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span><br>  <span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code-editor</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Or both:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code-editor</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>typescript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"token keyword\">function</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world! :)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code-editor</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>The theme can also be manually set:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code-editor</span> <span class=\"token attr-name\">theme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vs-light<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code-editor</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building with Lit you can read the docs <a href=\"https://lit.dev\">here</a>.</p>\n<p>The source for this example can be found <a href=\"https://github.com/rodydavis/lit-code-editor\">here</a>.</p>\n",
      "date_published": "2021-07-28T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/lit-vscode-extension/",
      "url": "https://rodydavis.com/posts/lit-vscode-extension/",
      "title": "Lit and VSCode Extensions",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to create a VSCode extension.</p>\n<p><strong>TLDR</strong> You can find the final source <a href=\"https://github.com/rodydavis/lit-vscode-extension\">here</a>.</p>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-vscode-extension</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-vscode-extension<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">\"/lit-vscode-extension/\"</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    outDir<span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      external<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^vscode</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        entryFileNames<span class=\"token operator\">:</span> <span class=\"token string\">\"[name].js\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Open <code>package.json</code> and update it with the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lit-vscode-extension\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lit VSCode Extension Example\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"publisher\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rodydavis\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/rodydavis/lit-vscode-extension\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"vscode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.47.0\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"categories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"Other\"</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"activationEvents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"onCommand:lit.start\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"onCommand:lit.reset\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"onWebviewPanel:lit\"</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./build/extension.js\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"contributes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"commands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lit.start\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Open Plugin\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lit\"</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lit.reset\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Reset\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lit\"</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc &amp;&amp; vite build\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"ext\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc src/extension.ts --outdir build --skipLibCheck --module commonjs\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"compile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &amp;&amp; npm run ext\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite preview\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"lit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.0.0-rc.2\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"@types/node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^15.12.4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"@types/vscode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.57.0\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"typescript\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.2.3\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"vite\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.3.5\"</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>After the <code>package.json</code> is updated run <code>npm i</code>.</p>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/my-element.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-element</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>This is child content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-element</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<h2 id=\"web-component\">Web Component <a class=\"direct-link\" href=\"#web-component\">#</a></h2>\n<p>Open up <code>src/my-element.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-element\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      display: block;<br>      border: solid 1px gray;<br>      padding: 16px;<br>      max-width: 800px;<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;h1>Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/h1><br>      &lt;button @click=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">modify</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> part=\"button\"><br>        Click Count: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>      &lt;/button><br>      &lt;slot>&lt;/slot><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">modify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> val<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> command <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> message<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>command <span class=\"token operator\">===</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token boolean\">false</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Here we are just modifying the example to include a message listener for communicating with the vscode extension, methods for updating the count, and updating the render method.</p>\n<p>VSCode communicates with the plugin via post messages because the UI will be loaded in an <code>iframe</code>.</p>\n<p>Now let's write the extension code in <code>src/extension.ts</code>. First start by adding top level declarations that will be referenced multiple times.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><br><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> vscode <span class=\"token keyword\">from</span> <span class=\"token string\">\"vscode\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token constant\">WEB_DIR</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">WEB_SCRIPT</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"main.js\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">TITLE</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"Lit Example\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">TAG</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"my-element\"</span><span class=\"token punctuation\">;</span><br><br><br><span class=\"token keyword\">const</span> possible <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>  <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"abcdefghijklmnopqrstuvwxyz\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"0123456789\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">function</span> <span class=\"token function\">getNonce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> char <span class=\"token operator\">=</span> possible<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> possible<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    text <span class=\"token operator\">+=</span> char<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>We also are creating a <code>getNonce</code> method that will be used for making sure the scripts we load are the ones we passed in.</p>\n<p>Now create a <code>Panel</code> that will contain the ui for our plugin:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Panel</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> currentPanel<span class=\"token operator\">:</span> Panel <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> readonly viewType <span class=\"token operator\">=</span> <span class=\"token string\">\"litExample\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">private</span> _disposables<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Disposable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">createOrShow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> column <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>activeTextEditor<br>      <span class=\"token operator\">?</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>activeTextEditor<span class=\"token punctuation\">.</span>viewColumn<br>      <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">reveal</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">const</span> panel <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">createWebviewPanel</span><span class=\"token punctuation\">(</span><br>      Panel<span class=\"token punctuation\">.</span>viewType<span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">TITLE</span><span class=\"token punctuation\">,</span><br>      column <span class=\"token operator\">||</span> vscode<span class=\"token punctuation\">.</span>ViewColumn<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span>extensionUri<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Panel</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">revive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">panel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Panel</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><br>    <span class=\"token parameter\"><span class=\"token keyword\">public</span> readonly panel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">public</span> readonly extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><br>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">onDidDispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">onDidChangeViewState</span><span class=\"token punctuation\">(</span><br>      <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span><span class=\"token function\">onDidReceiveMessage</span><span class=\"token punctuation\">(</span><br>      <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">case</span> <span class=\"token string\">\"alert\"</span><span class=\"token operator\">:</span><br>            vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> command<span class=\"token operator\">:</span> command <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        x<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> webview <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">;</span><br>    webview<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getHtmlForWebview</span><span class=\"token punctuation\">(</span>webview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">_getHtmlForWebview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">webview<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Webview</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> scriptPathOnDisk <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>Uri<span class=\"token punctuation\">.</span><span class=\"token function\">joinPath</span><span class=\"token punctuation\">(</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">WEB_DIR</span><span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">WEB_SCRIPT</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> scriptUri <span class=\"token operator\">=</span> webview<span class=\"token punctuation\">.</span><span class=\"token function\">asWebviewUri</span><span class=\"token punctuation\">(</span>scriptPathOnDisk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> nonce <span class=\"token operator\">=</span> <span class=\"token function\">getNonce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">const</span> slot <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;p>This is child content&lt;/p>\"</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;!DOCTYPE html><br>\t\t\t&lt;html lang=\"en\"><br>        &lt;head><br>          &lt;meta charset=\"UTF-8\"><br>          &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><br>          &lt;title></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TITLE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/title><br>        &lt;/head><br>        &lt;body class=\"vscode-light\"><br>          &lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TAG</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> nonce=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nonce<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" ><br>            </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>slot<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>          &lt;/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TAG</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">><br>          &lt;script nonce=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nonce<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" type=\"module\" src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>scriptUri<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/script><br>        &lt;/body><br>\t\t\t&lt;/html></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Notice how we are recreating the html and not using the <code>index.html</code>. This allows us to use the component for a deployed website but also the extension with separate app logic code.</p>\n<p>Everything else is just boilerplate for managing the panel state and disposing when it is finished.</p>\n<p>Now we can add the methods for loading our plugin and listening for the commands:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">activate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>ExtensionContext</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  context<span class=\"token punctuation\">.</span>subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><br>    vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">registerCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit.start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      Panel<span class=\"token punctuation\">.</span><span class=\"token function\">createOrShow</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  context<span class=\"token punctuation\">.</span>subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><br>    vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">registerCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit.reset\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>registerWebviewPanelSerializer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">registerWebviewPanelSerializer</span><span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>viewType<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">async</span> <span class=\"token function\">deserializeWebviewPanel</span><span class=\"token punctuation\">(</span><br>        <span class=\"token parameter\">webviewPanel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span><br>        state<span class=\"token operator\">:</span> any</span><br>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received state: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>state<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        webviewPanel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        Panel<span class=\"token punctuation\">.</span><span class=\"token function\">revive</span><span class=\"token punctuation\">(</span>webviewPanel<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">function</span> <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewOptions <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>    enableScripts<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    localResourceRoots<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>vscode<span class=\"token punctuation\">.</span>Uri<span class=\"token punctuation\">.</span><span class=\"token function\">joinPath</span><span class=\"token punctuation\">(</span>extensionUri<span class=\"token punctuation\">,</span> <span class=\"token constant\">WEB_DIR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Here we are loading the extension and passing messages when the <code>lit.reset</code> command. We are also returning the <code>getWebviewOptions</code> options which <code>enableScripts</code> is set to <code>true</code> so we can run the injected js.</p>\n<p>The final code should look like the follow:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> vscode <span class=\"token keyword\">from</span> <span class=\"token string\">\"vscode\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> <span class=\"token constant\">WEB_DIR</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">WEB_SCRIPT</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"main.js\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">TITLE</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"Lit Example\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> <span class=\"token constant\">TAG</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"my-element\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">activate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>ExtensionContext</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  context<span class=\"token punctuation\">.</span>subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><br>    vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">registerCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit.start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      Panel<span class=\"token punctuation\">.</span><span class=\"token function\">createOrShow</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  context<span class=\"token punctuation\">.</span>subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><br>    vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">registerCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit.reset\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>registerWebviewPanelSerializer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">registerWebviewPanelSerializer</span><span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>viewType<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">async</span> <span class=\"token function\">deserializeWebviewPanel</span><span class=\"token punctuation\">(</span><br>        <span class=\"token parameter\">webviewPanel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span><br>        state<span class=\"token operator\">:</span> any</span><br>      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Received state: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>state<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        webviewPanel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        Panel<span class=\"token punctuation\">.</span><span class=\"token function\">revive</span><span class=\"token punctuation\">(</span>webviewPanel<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">function</span> <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewOptions <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>    enableScripts<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    localResourceRoots<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>vscode<span class=\"token punctuation\">.</span>Uri<span class=\"token punctuation\">.</span><span class=\"token function\">joinPath</span><span class=\"token punctuation\">(</span>extensionUri<span class=\"token punctuation\">,</span> <span class=\"token constant\">WEB_DIR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">Panel</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> currentPanel<span class=\"token operator\">:</span> Panel <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> readonly viewType <span class=\"token operator\">=</span> <span class=\"token string\">\"litExample\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">private</span> _disposables<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Disposable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">createOrShow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> column <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>activeTextEditor<br>      <span class=\"token operator\">?</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>activeTextEditor<span class=\"token punctuation\">.</span>viewColumn<br>      <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      Panel<span class=\"token punctuation\">.</span>currentPanel<span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">reveal</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">const</span> panel <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">createWebviewPanel</span><span class=\"token punctuation\">(</span><br>      Panel<span class=\"token punctuation\">.</span>viewType<span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">TITLE</span><span class=\"token punctuation\">,</span><br>      column <span class=\"token operator\">||</span> vscode<span class=\"token punctuation\">.</span>ViewColumn<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">,</span><br>      <span class=\"token function\">getWebviewOptions</span><span class=\"token punctuation\">(</span>extensionUri<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Panel</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">revive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">panel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Panel</span><span class=\"token punctuation\">(</span>panel<span class=\"token punctuation\">,</span> extensionUri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><br>    <span class=\"token parameter\"><span class=\"token keyword\">public</span> readonly panel<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>WebviewPanel<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">public</span> readonly extensionUri<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Uri</span><br>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">onDidDispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">onDidChangeViewState</span><span class=\"token punctuation\">(</span><br>      <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span><span class=\"token function\">onDidReceiveMessage</span><span class=\"token punctuation\">(</span><br>      <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">case</span> <span class=\"token string\">\"alert\"</span><span class=\"token operator\">:</span><br>            vscode<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> command<span class=\"token operator\">:</span> command <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">public</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    Panel<span class=\"token punctuation\">.</span>currentPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_disposables<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        x<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> webview <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panel<span class=\"token punctuation\">.</span>webview<span class=\"token punctuation\">;</span><br>    webview<span class=\"token punctuation\">.</span>html <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getHtmlForWebview</span><span class=\"token punctuation\">(</span>webview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">_getHtmlForWebview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">webview<span class=\"token operator\">:</span> vscode<span class=\"token punctuation\">.</span>Webview</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> scriptPathOnDisk <span class=\"token operator\">=</span> vscode<span class=\"token punctuation\">.</span>Uri<span class=\"token punctuation\">.</span><span class=\"token function\">joinPath</span><span class=\"token punctuation\">(</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>extensionUri<span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">WEB_DIR</span><span class=\"token punctuation\">,</span><br>      <span class=\"token constant\">WEB_SCRIPT</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> scriptUri <span class=\"token operator\">=</span> webview<span class=\"token punctuation\">.</span><span class=\"token function\">asWebviewUri</span><span class=\"token punctuation\">(</span>scriptPathOnDisk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> nonce <span class=\"token operator\">=</span> <span class=\"token function\">getNonce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">const</span> slot <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;p>This is child content&lt;/p>\"</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">const</span> htmlSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;!DOCTYPE html><br>    &lt;html lang=\"en\"><br>      &lt;head><br>        &lt;meta charset=\"UTF-8\"><br>        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><br>        &lt;title></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TITLE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/title><br>      &lt;/head><br>      &lt;body class=\"vscode-light\"><br>        &lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TAG</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> nonce=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nonce<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" ><br>          </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>slot<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>        &lt;/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TAG</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">><br>        &lt;script nonce=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nonce<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" type=\"module\" src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>scriptUri<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/script><br>      &lt;/body><br>    &lt;/html></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> htmlSource<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> possible <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>  <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"abcdefghijklmnopqrstuvwxyz\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token string\">\"0123456789\"</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">function</span> <span class=\"token function\">getNonce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> char <span class=\"token operator\">=</span> possible<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> possible<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    text <span class=\"token operator\">+=</span> char<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"running\">Running <a class=\"direct-link\" href=\"#running\">#</a></h2>\n<p>Make sure to install the dependencies by running <code>npm i</code>.</p>\n<p>To build the extension run <code>npm run compile</code>.</p>\n<p>To open the extension and debug hit <code>F5</code>.</p>\n<img width=\"100%\" src=\"/img/vscode/final.png\">\n<p>To run the commands to open the extension run <code>lit: open plugin</code> or <code>lit: reset</code>:</p>\n<img width=\"100%\" src=\"/img/vscode/commands.png\">\n<p>To debug the extension when it is open run <code>Developer: Open Webview Developer Tools</code> from the command pallet.</p>\n<img width=\"100%\" src=\"/img/vscode/tools.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building a vscode extension you can read more <a href=\"https://code.visualstudio.com/api\">here</a> and for Lit you can read the docs <a href=\"https://lit.dev\">here</a>.</p>\n",
      "date_published": "2021-06-23T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/lit-draggable-dom/",
      "url": "https://rodydavis.com/posts/lit-draggable-dom/",
      "title": "Draggable DOM with Lit",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to create a interactive dom with CSS transforms and slots.</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/lit-draggable-dom\">here</a> and an online <a href=\"https://rodydavis.github.io/lit-draggable-dom/\">demo</a>.</p>\n<div id=\"playground\" hidden></div>\n<script>\n  addFiles('lit-draggable-dom', 'draggable-dom.ts')\n</script>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-draggable-dom</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-draggable-dom<br><span class=\"token function\">npm</span> i lit<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">\"/lit-draggable-dom/\"</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Draggable DOM<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/draggable-dom.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>draggable-dom</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span><br>        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://lit.dev/images/logo.svg<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Lit Logo<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>500<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>333<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">--dx</span><span class=\"token punctuation\">:</span> 59.4909px<span class=\"token punctuation\">;</span> <span class=\"token property\">--dy</span><span class=\"token punctuation\">:</span> 32.8429px</span><span class=\"token punctuation\">\"</span></span></span><br>      <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>110<span class=\"token punctuation\">\"</span></span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">--dx</span><span class=\"token punctuation\">:</span> 230.057px<span class=\"token punctuation\">;</span> <span class=\"token property\">--dy</span><span class=\"token punctuation\">:</span> 33.6257px</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rect</span><br>          <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token property\">stroke-width</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span> <span class=\"token property\">stroke</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><br>        <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span><br>          <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>40<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><br>          <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>draggable-dom</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<p>We are setting up the <code>lit-element</code> to have a few slots which can be any valid HTML or SVG Elements.</p>\n<p>It is optional to set the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/--*\">css custom properties</a> <code>--dx</code> and <code>--dy</code> as this is just the initial positions on the canvas.</p>\n<h2 id=\"web-component\">Web Component <a class=\"direct-link\" href=\"#web-component\">#</a></h2>\n<p>Before we update our component we need to rename <code>my-element.ts</code> to <code>draggable-dom.ts</code></p>\n<p>Open up <code>draggable-dom.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>type DragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"canvas\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">;</span><br>type SupportedNode <span class=\"token operator\">=</span> HTMLElement <span class=\"token operator\">|</span> SVGElement<span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"draggable-dom\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CSSCanvas</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span> root<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#children\"</span><span class=\"token punctuation\">)</span> container<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span> canvas<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLCanvasElement<span class=\"token punctuation\">;</span><br>  dragType<span class=\"token operator\">:</span> DragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span><br>  offset<span class=\"token operator\">:</span> Offset <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  pointerMap<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span>number<span class=\"token punctuation\">,</span> PointerData<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      --offset-x: 0;<br>      --offset-y: 0;<br>      --grid-background-color: white;<br>      --grid-color: black;<br>      --grid-size: 40px;<br>      --grid-dot-size: 1px;<br>    }<br>    main {<br>      overflow: hidden;<br>    }<br>    canvas {<br>      background-size: var(--grid-size) var(--grid-size);<br>      background-image: radial-gradient(<br>        circle,<br>        var(--grid-color) var(--grid-dot-size),<br>        var(--grid-background-color) var(--grid-dot-size)<br>      );<br>      background-position: var(--offset-x) var(--offset-y);<br>      z-index: 0;<br>    }<br>    .full-size {<br>      width: 100%;<br>      height: 100%;<br>      position: fixed;<br>    }<br>    .child {<br>      --dx: 0px;<br>      --dy: 0px;<br>      position: fixed;<br>      flex-shrink: 1;<br>      z-index: var(--layer, 0);<br>      transform: translate(var(--dx), var(--dy));<br>    }<br>    @media (prefers-color-scheme: dark) {<br>      main {<br>        --grid-background-color: black;<br>        --grid-color: grey;<br>      }<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;main class=\"full-size\"><br>        &lt;canvas class=\"full-size\">&lt;/canvas><br>        &lt;div id=\"children\" class=\"full-size\">&lt;/div><br>      &lt;/main><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Offset</span> <span class=\"token punctuation\">{</span><br>  x<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br>  y<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PointerData</span> <span class=\"token punctuation\">{</span><br>  id<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br>  startPos<span class=\"token operator\">:</span> Offset<span class=\"token punctuation\">;</span><br>  currentPos<span class=\"token operator\">:</span> Offset<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Here we are just setting up some boilerplate to render a <code>main</code> element with a <code>canvas</code> element as a background and the <code>div</code> element to contain the canvas elements.</p>\n<p>We are also making sure to clip and only render what is visible.</p>\n<p>The <code>Offset</code> and <code>PointerData</code> interfaces will be used for storing the location of each pointer interacting with the screen.</p>\n<p>When the user has dark mode enabled for the system it will change the colors of the canvas grid.</p>\n<p>Now let's add the slot children to the canvas by adding the following to the class:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span> <span class=\"token operator\">||</span> node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> node <span class=\"token keyword\">as</span> SupportedNode<span class=\"token punctuation\">;</span><br>            child<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--layer\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                <span class=\"token comment\">// Pointer Down for Child</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                <span class=\"token comment\">// Pointer Move for Child</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// Pointer Down for Canvas</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// Pointer Move for Canvas</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token comment\">// Pointer Up for Canvas</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>The order of the slots defines what renders on top of each other. For each item in the slot it sets<code>--layer</code> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/z-index\"><code>z-index</code></a> to the current index.</p>\n<p>Currently nothing is happening when we interact with the elements but things should be rendering.</p>\n<img width=\"100%\" src=\"/img/draggable-dom/canvas.png\">\n<p>Now let's add the event handlers for the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\">pointer events</a> by appending the following to the class:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> PointerEvent<span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> DragType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">===</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token keyword\">as</span> Element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pointerMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>            id<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">,</span><br>            startPos<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>            currentPos<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span><br>    event<span class=\"token operator\">:</span> PointerEvent<span class=\"token punctuation\">,</span><br>    type<span class=\"token operator\">:</span> DragType<span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">onMove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><br><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">===</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> saved <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pointerMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>saved<span class=\"token punctuation\">.</span>currentPos <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        saved<span class=\"token punctuation\">.</span>currentPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">const</span> delta <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>            x<span class=\"token operator\">:</span> saved<span class=\"token punctuation\">.</span>currentPos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> current<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><br>            y<span class=\"token operator\">:</span> saved<span class=\"token punctuation\">.</span>currentPos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> current<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        <span class=\"token function\">onMove</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token function\">handleUp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> PointerEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token keyword\">as</span> Element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">releasePointerCapture</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>For each event we want to check if the current event <code>canvas</code> or <code>element</code> so if we start moving an element it doesn't move the canvas and vice versa.</p>\n<p>When we have a pointer interact with the screen we will add it to the pointer map (since it can be multi touch) and start tracking the offset.</p>\n<p>The delta is calculated to move the elements but a global offset is used for the canvas background.</p>\n<p>We are setting the pointer capture events so if the mouse is not perfectly on the item it won't lose tracking.</p>\n<p>Now let's add methods for moving the canvas and elements by appending the following to the class:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">moveCanvas</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--offset-x\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--offset-y\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token operator\">:</span> SupportedNode<span class=\"token punctuation\">,</span> delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> getNumber <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token string\">\"--dx\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> fallback<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> saved <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">return</span> fallback<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dy<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dx\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dy<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>For the canvas it will set a global offset for the CSS <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/background-position\"><code>background-position</code></a> and update the saved offset.</p>\n<p>For the element we want to transform by the delta so the animation is smooth thanks to hardware acceleration. After the transform it will store the offset as CSS custom properties.</p>\n<p>Now let's add the event handlers to the canvas and elements by adjusting the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span> <span class=\"token operator\">||</span> node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> node <span class=\"token keyword\">as</span> SupportedNode<span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--layer\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveCanvas</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span> <span class=\"token operator\">||</span> node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleUp</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Everything should work as expected now and the final code should look like the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>type DragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"canvas\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">;</span><br>type SupportedNode <span class=\"token operator\">=</span> HTMLElement <span class=\"token operator\">|</span> SVGElement<span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"draggable-dom\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DraggableDOM</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span> root<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#children\"</span><span class=\"token punctuation\">)</span> container<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span> canvas<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLCanvasElement<span class=\"token punctuation\">;</span><br>  dragType<span class=\"token operator\">:</span> DragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span><br>  offset<span class=\"token operator\">:</span> Offset <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  pointerMap<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span>number<span class=\"token punctuation\">,</span> PointerData<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      --offset-x: 0;<br>      --offset-y: 0;<br>      --grid-background-color: white;<br>      --grid-color: black;<br>      --grid-size: 40px;<br>      --grid-dot-size: 1px;<br>    }<br>    main {<br>      overflow: hidden;<br>    }<br>    canvas {<br>      background-size: var(--grid-size) var(--grid-size);<br>      background-image: radial-gradient(<br>        circle,<br>        var(--grid-color) var(--grid-dot-size),<br>        var(--grid-background-color) var(--grid-dot-size)<br>      );<br>      background-position: var(--offset-x) var(--offset-y);<br>      z-index: 0;<br>    }<br>    .full-size {<br>      width: 100%;<br>      height: 100%;<br>      position: fixed;<br>    }<br>    .child {<br>      --dx: 0px;<br>      --dy: 0px;<br>      position: fixed;<br>      flex-shrink: 1;<br>      z-index: var(--layer, 0);<br>      transform: translate(var(--dx), var(--dy));<br>    }<br>    @media (prefers-color-scheme: dark) {<br>      main {<br>        --grid-background-color: black;<br>        --grid-color: grey;<br>      }<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"render\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;main class=\"full-size\"><br>        &lt;canvas class=\"full-size\">&lt;/canvas><br>        &lt;div id=\"children\" class=\"full-size\">&lt;/div><br>      &lt;/main><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> PointerEvent<span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> DragType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">===</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token keyword\">as</span> Element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pointerMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>        id<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">,</span><br>        startPos<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        currentPos<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span><br>    event<span class=\"token operator\">:</span> PointerEvent<span class=\"token punctuation\">,</span><br>    type<span class=\"token operator\">:</span> DragType<span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">onMove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><br>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">===</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> saved <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pointerMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>saved<span class=\"token punctuation\">.</span>currentPos <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      saved<span class=\"token punctuation\">.</span>currentPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">const</span> delta <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>        x<span class=\"token operator\">:</span> saved<span class=\"token punctuation\">.</span>currentPos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> current<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><br>        y<span class=\"token operator\">:</span> saved<span class=\"token punctuation\">.</span>currentPos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> current<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">onMove</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">handleUp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> PointerEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dragType <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token keyword\">as</span> Element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">releasePointerCapture</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">moveCanvas</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> delta<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--offset-x\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--offset-y\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token operator\">:</span> SupportedNode<span class=\"token punctuation\">,</span> delta<span class=\"token operator\">:</span> Offset</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> getNumber <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token operator\">:</span> <span class=\"token string\">\"--dx\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> fallback<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">const</span> saved <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyValue</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">return</span> fallback<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dy<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dx\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--dy\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dy<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span> <span class=\"token operator\">||</span> node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> node <span class=\"token keyword\">as</span> SupportedNode<span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--layer\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"element\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        child<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"draggable\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleDown</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">delta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveCanvas</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SVGElement</span> <span class=\"token operator\">||</span> node <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">moveElement</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleUp</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Offset</span> <span class=\"token punctuation\">{</span><br>  x<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br>  y<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PointerData</span> <span class=\"token punctuation\">{</span><br>  id<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span><br>  startPos<span class=\"token operator\">:</span> Offset<span class=\"token punctuation\">;</span><br>  currentPos<span class=\"token operator\">:</span> Offset<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building with Lit you can read the docs <a href=\"https://lit.dev\">here</a>. There is also an example on the Lit playground <a href=\"https://lit.dev/playground/#project=\">here</a>.</p>\n<p>The source for this example can be found <a href=\"https://github.com/rodydavis/lit-draggable-dom\">here</a>.</p>\n",
      "date_published": "2021-06-22T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/lit-sheet-music/",
      "url": "https://rodydavis.com/posts/lit-sheet-music/",
      "title": "Lit Sheet Music",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to render <a href=\"https://www.musicxml.com/\">musicxml</a> from a src attribute or inline xml using <a href=\"https://github.com/opensheetmusicdisplay/opensheetmusicdisplay\">opensheetmusicdisplay</a>.</p>\n<img width=\"100%\" src=\"https://media.giphy.com/media/Qe0sYiS7fpdRjOisK4/giphy.gif\">\n<p>Now any sheet music can be rendered based on the browser width as an svg or canvas (and will resize when the viewport changes).</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/lit-sheet-music\">here</a> and an online <a href=\"https://rodydavis.github.io/lit-sheet-music/\">demo</a>.</p>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-sheet-music</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-sheet-music<br><span class=\"token function\">npm</span> i lit opensheetmusicdisplay<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">\"/lit-sheet-music/\"</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    lib<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      entry<span class=\"token operator\">:</span> <span class=\"token string\">\"src/lit-sheet-music.ts\"</span><span class=\"token punctuation\">,</span><br>      formats<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Sheet Music<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/sheet-music.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sheet-music</span><br>      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://raw.githubusercontent.com/opensheetmusicdisplay/opensheetmusicdisplay/develop/demo/BrahWiMeSample.musicxml<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sheet-music</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>If local <a href=\"https://www.musicxml.com/\">musicxml</a> is intended to be used update <code>index.html</code> with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Sheet Music<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/sheet-music.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sheet-music</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> standalone<span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span><span class=\"token operator\">?</span><span class=\"token operator\">></span><br>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> score<span class=\"token operator\">-</span>partwise <span class=\"token constant\">PUBLIC</span><br>            <span class=\"token string\">\"-//Recordare//DTD MusicXML Partwise//EN\"</span><br>            <span class=\"token string\">\"http://www.musicxml.org/dtds/partwise.dtd\"</span><span class=\"token operator\">></span><br>          <span class=\"token operator\">&lt;</span>score<span class=\"token operator\">-</span>partwise<span class=\"token operator\">></span><br>            <span class=\"token operator\">&lt;</span>part<span class=\"token operator\">-</span>list<span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span>score<span class=\"token operator\">-</span>part id<span class=\"token operator\">=</span><span class=\"token string\">\"P1\"</span><span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>part<span class=\"token operator\">-</span>name<span class=\"token operator\">></span>Voice<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>part<span class=\"token operator\">-</span>name<span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>score<span class=\"token operator\">-</span>part<span class=\"token operator\">></span><br>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>part<span class=\"token operator\">-</span>list<span class=\"token operator\">></span><br>            <span class=\"token operator\">&lt;</span>part id<span class=\"token operator\">=</span><span class=\"token string\">\"P1\"</span><span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span>measure number<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span> implicit<span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span><span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>attributes<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>divisions<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>divisions<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>fifths<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fifths<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>mode<span class=\"token operator\">></span>major<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mode<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>time<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>beats<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beats<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>beat<span class=\"token operator\">-</span>type<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beat<span class=\"token operator\">-</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>time<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>clef<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>sign<span class=\"token operator\">></span><span class=\"token constant\">G</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>sign<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>line<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>line<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>clef<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>directive<span class=\"token operator\">></span>Langsam<span class=\"token punctuation\">,</span> innig<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>directive<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>attributes<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">G</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span>eighth<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>notations<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>dynamics<span class=\"token operator\">></span><br>                      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dynamics<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>notations<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>syllabic<span class=\"token operator\">></span>single<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>syllabic<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>text<span class=\"token operator\">></span><span class=\"token constant\">W</span><span class=\"token operator\">&amp;</span>auml<span class=\"token punctuation\">;</span>rst<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>measure<span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span>measure number<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">F</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span>eighth<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>dot<span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>syllabic<span class=\"token operator\">></span>single<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>syllabic<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>text<span class=\"token operator\">></span>du<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">E</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>alter<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>alter<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span><span class=\"token number\">16</span>th<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>syllabic<span class=\"token operator\">></span>single<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>syllabic<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>text<span class=\"token operator\">></span>nicht<span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">E</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>alter<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>alter<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span>eighth<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>syllabic<span class=\"token operator\">></span>begin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>syllabic<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>text<span class=\"token operator\">></span>heil<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">B</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>alter<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>alter<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span><span class=\"token number\">16</span>th<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>beam number<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span>begin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beam<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>beam number<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token operator\">></span>begin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beam<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>notations<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>slur type<span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span> number<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>notations<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>syllabic<span class=\"token operator\">></span>end<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>syllabic<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>text<span class=\"token operator\">></span>ger<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>extend<span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span>note<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>pitch<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>step<span class=\"token operator\">></span><span class=\"token constant\">G</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>step<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>octave<span class=\"token operator\">></span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>octave<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>pitch<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>duration<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>duration<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>type<span class=\"token operator\">></span><span class=\"token number\">16</span>th<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>type<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>stem<span class=\"token operator\">></span>up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>stem<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>beam number<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span>end<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beam<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>beam number<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token operator\">></span>end<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>beam<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>notations<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>slur type<span class=\"token operator\">=</span><span class=\"token string\">\"stop\"</span> number<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>notations<span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span>lyric<span class=\"token operator\">></span><br>                    <span class=\"token operator\">&lt;</span>extend<span class=\"token operator\">/</span><span class=\"token operator\">></span><br>                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>lyric<span class=\"token operator\">></span><br>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>note<span class=\"token operator\">></span><br>              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>measure<span class=\"token operator\">></span><br>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>part<span class=\"token operator\">></span><br>          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>score<span class=\"token operator\">-</span>partwise<span class=\"token operator\">></span><br>      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sheet-music</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>We are passing a src attribute to the web component for this example but we can also add a script tag with the type attribute set to <code>text/xml</code> with the contents containing the json.</p>\n<h2 id=\"web-component\">Web Component <a class=\"direct-link\" href=\"#web-component\">#</a></h2>\n<p>Before we update our component we need to rename <code>my-element.ts</code> to <code>sheet-music.ts</code></p>\n<p>Open up <code>sheet-music.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IOSMDOptions<span class=\"token punctuation\">,</span> OpenSheetMusicDisplay <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"opensheetmusicdisplay\"</span><span class=\"token punctuation\">;</span><br><br>type BackendType <span class=\"token operator\">=</span> <span class=\"token string\">\"svg\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">;</span><br>type DrawingType <span class=\"token operator\">=</span> <span class=\"token string\">\"compact\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sheet-music\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SheetMusic</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  _zoom <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span><br><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> allowDrop <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> src <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span> canvas<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span><br><br>  controller<span class=\"token operator\">?</span><span class=\"token operator\">:</span> OpenSheetMusicDisplay<span class=\"token punctuation\">;</span><br>  options<span class=\"token operator\">:</span> IOSMDOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>    autoResize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    backend<span class=\"token operator\">:</span> <span class=\"token string\">\"canvas\"</span> <span class=\"token keyword\">as</span> BackendType<span class=\"token punctuation\">,</span><br>    drawingParameters<span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span> <span class=\"token keyword\">as</span> DrawingType<span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    main {<br>      overflow-x: auto;<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;main>&lt;/main></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">renderMusic</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span>zoom <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_zoom<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Check if src attribute is set and prefer it over the slot</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Check if slot children exist and return the xml</span><br>    <span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentElement<span class=\"token operator\">?.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><br>      <span class=\"token string\">'script[type=\"text/xml\"]'</span><br>    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLScriptElement<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> elem<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Return nothing if neither is found</span><br>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenSheetMusicDisplay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Check for any music and update if found</span><br>    <span class=\"token keyword\">const</span> music <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>music<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderMusic</span><span class=\"token punctuation\">(</span>music<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br>declare global <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HTMLElementTagNameMap</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token string\">\"sheet-music\"</span><span class=\"token operator\">:</span> SheetMusic<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Run <code>npm run dev</code> and the following should appear if all went well:</p>\n<img width=\"100%\" src=\"/img/sheet-music/finished.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building with Lit you can read the docs <a href=\"https://lit.dev\">here</a>.</p>\n<p>The source for this example can be found <a href=\"https://github.com/rodydavis/lit-sheet-music\">here</a>.</p>\n<img width=\"100%\" src=\"https://media.giphy.com/media/KbTUp85em6hdmmgTfK/giphy.gif\">\n",
      "date_published": "2021-06-03T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/lit-html-table/",
      "url": "https://rodydavis.com/posts/lit-html-table/",
      "title": "JSON to HTML Table with Lit",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to create a HTML <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\">Table</a> from json url or inline json.</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/lit-html-table\">here</a> and an online <a href=\"https://rodydavis.github.io/lit-html-table/\">demo</a>.</p>\n<div id=\"playground\" hidden></div>\n<script>\n  addFiles('lit-html-table', 'lit-html-table.ts')\n</script>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-html-table</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-html-table<br><span class=\"token function\">npm</span> i lit<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">'/lit-html-table/'</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    lib<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      entry<span class=\"token operator\">:</span> <span class=\"token string\">\"src/lit-html-table.ts\"</span><span class=\"token punctuation\">,</span><br>      formats<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSON to Lit HTML Table<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/lit-html-table.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lit-html-table</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://jsonplaceholder.typicode.com/posts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token comment\">&lt;!-- &lt;span slot=\"title\" style=\"color: red;\">Title&lt;/span> --></span><br>    <span class=\"token comment\">&lt;!-- &lt;script type=\"application/json\"><br>      [<br>        {<br>          \"id\": \"0\",<br>          \"name\": \"First Item\"<br>        }<br>      ]<br>    &lt;/script> --></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lit-html-table</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<p>We are passing a src attribute to the web component for this example but we can also add a script tag with the type attribute set to <code>application/json</code> with the contents containing the json.</p>\n<p>If any table header cell needed to be replaced an element can be provided with the slot name set to the key in the json object.</p>\n<h2 id=\"web-component\">Web Component <a class=\"direct-link\" href=\"#web-component\">#</a></h2>\n<p>Before we update our component we need to rename <code>my-element.ts</code> to <code>lit-html-table.ts</code></p>\n<p>Open up <code>lit-html-table.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>type ObjectData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit-html-table\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LitHtmlTable</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> src <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br><br>  data<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ObjectData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    tr {<br>      text-align: var(--table-tr-text-align, left);<br>      vertical-align: var(--table-tr-vertical-align, top);<br>      padding: var(--table-tr-padding, 10px);<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Check if data is loaded</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;slot name=\"loading\">Loading...&lt;/slot></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// Check if items are not empty</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;slot name=\"empty\">No Items Found!&lt;/slot></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// Convert JSON to HTML Table</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;table><br>        &lt;thead><br>          &lt;tr><br>            </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\b([a-z])</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><br>                val<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;th><br>                &lt;slot name=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/slot><br>              &lt;/th></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>          &lt;/tr><br>        &lt;/thead><br>        &lt;tbody><br>          </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> html`<br>              <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">></span><br>                $<span class=\"token punctuation\">{</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                  <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;td></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>row<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/td></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>              &lt;/tr><br>            </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tbody<span class=\"token operator\">></span><br>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">></span><br>    `<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Download the latest json and update it locally</span><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> _data<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// If a src attribute is set prefer it over any slots</span><br>      _data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// If no src attribute is set then grab the inline json in the slot</span><br>      <span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentElement<span class=\"token operator\">?.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><br>        <span class=\"token string\">'script[type=\"application/json\"]'</span><br>      <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLScriptElement<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span> _data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>_data <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>We have defined a few <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/--*\">CSS Custom Properties</a> to style the table cell but many more can be added here.</p>\n<p>If everything goes well run the command <code>npm run dev</code> and the follow should appear:</p>\n<img width=\"100%\" src=\"/img/json-to-table/finished.png\">\n<h2 id=\"editing\">Editing <a class=\"direct-link\" href=\"#editing\">#</a></h2>\n<p>What if we wanted to support editing of any cell? With Lit and Web Components we can progressively enhance the experience without changing the html.</p>\n<p>At the top of the class add the following boolean property:</p>\n<pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> editable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Now update the <code>tbody</code> tag in the render method:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>tbody<span class=\"token operator\">></span><br>  $<span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;tr><br>        </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">return</span> html`<span class=\"token operator\">&lt;</span>td<span class=\"token operator\">></span><br>            $<span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>editable<br>              <span class=\"token operator\">?</span> html`<span class=\"token operator\">&lt;</span>input<br>                  value<span class=\"token operator\">=</span><span class=\"token string\">\"${row[1]}\"</span><br>                  type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><br>                  @input<span class=\"token operator\">=</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>                    <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>                    <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>                    current<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current<span class=\"token punctuation\">;</span><br>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><br>                      <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input-cell\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>                        detail<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>                          index<span class=\"token operator\">:</span> index<span class=\"token punctuation\">,</span><br>                          data<span class=\"token operator\">:</span> current<span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                  <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">}<br>                /></span><span class=\"token template-punctuation string\">`</span></span><br>              <span class=\"token operator\">:</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>row<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><br>          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;<br>        })}<br>      &lt;/tr><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><br><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tbody<span class=\"token operator\">></span></code></pre>\n<p>By checking to see if the <code>editable</code> and if <code>true</code> return an input with an event listener to update the data and dispatch an <code>input</code> event.</p>\n<p>Add the <code>editable</code> attribute to the <code>index.html</code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lit-html-table</span> <span class=\"token attr-name\">editable</span><span class=\"token punctuation\">></span></span><br>...<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lit-html-table</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>After a reload the table should look like this and any cell can be edited.</p>\n<img width=\"100%\" src=\"/img/json-to-table/editor.png\">\n<p>An event listener can be added just before the closing <code>body</code> tag in <code>index.html</code> to grab the latest values or cell information:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lit-html-table'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  elem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input-cell'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Index and data for the individual cell</span><br>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// New array of json items</span><br>    <span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>This can be taken farther by checking for the type of the value and returning a color, number or checkbox input.</p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building with Lit you can read the docs <a href=\"https://lit.dev\">here</a>. There is also an example on the Lit playground <a href=\"https://lit.dev/playground/#project=W3sibmFtZSI6ImxpdC1odG1sLXRhYmxlLnRzIiwiY29udGVudCI6ImltcG9ydCB7IGh0bWwsIGNzcywgTGl0RWxlbWVudCB9IGZyb20gXCJsaXRcIjtcbmltcG9ydCB7IGN1c3RvbUVsZW1lbnQsIHByb3BlcnR5IH0gZnJvbSBcImxpdC9kZWNvcmF0b3JzLmpzXCI7XG5cbnR5cGUgT2JqZWN0RGF0YSA9IHsgW2tleTogc3RyaW5nXTogYW55IH07XG5cbkBjdXN0b21FbGVtZW50KFwibGl0LWh0bWwtdGFibGVcIilcbmV4cG9ydCBjbGFzcyBMaXRIdG1sVGFibGUgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgQHByb3BlcnR5KCkgc3JjID0gXCJcIjtcblxuICBkYXRhPzogT2JqZWN0RGF0YVtdO1xuXG4gIHN0YXRpYyBzdHlsZXMgPSBjc3NgXG4gICAgdHIge1xuICAgICAgdGV4dC1hbGlnbjogdmFyKC0tdGFibGUtdHItdGV4dC1hbGlnbiwgbGVmdCk7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdmFyKC0tdGFibGUtdHItdmVydGljYWwtYWxpZ24sIHRvcCk7XG4gICAgICBwYWRkaW5nOiB2YXIoLS10YWJsZS10ci1wYWRkaW5nLCAxMHB4KTtcbiAgICB9XG4gIGA7XG5cbiAgcmVuZGVyKCkge1xuICAgIC8vIENoZWNrIGlmIGRhdGEgaXMgbG9hZGVkXG4gICAgaWYgKCF0aGlzLmRhdGEpIHtcbiAgICAgIHJldHVybiBodG1sYDxzbG90IG5hbWU9XCJsb2FkaW5nXCI-TG9hZGluZy4uLjwvc2xvdD5gO1xuICAgIH1cbiAgICAvLyBDaGVjayBpZiBpdGVtcyBhcmUgbm90IGVtcHR5XG4gICAgaWYgKHRoaXMuZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBodG1sYDxzbG90IG5hbWU9XCJlbXB0eVwiPk5vIEl0ZW1zIEZvdW5kITwvc2xvdD5gO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0IEpTT04gdG8gSFRNTCBUYWJsZVxuICAgIHJldHVybiBodG1sYFxuICAgICAgPHRhYmxlPlxuICAgICAgICA8dGhlYWQ-XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgJHtPYmplY3Qua2V5cyh0aGlzLmRhdGFbMF0pLm1hcCgoa2V5KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBrZXkucmVwbGFjZSgvXFxiKFthLXpdKS9nLCAoXywgdmFsKSA9PlxuICAgICAgICAgICAgICAgIHZhbC50b1VwcGVyQ2FzZSgpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIHJldHVybiBodG1sYDx0aD5cbiAgICAgICAgICAgICAgICA8c2xvdCBuYW1lPVwiJHtrZXl9XCI-JHtuYW1lfTwvc2xvdD5cbiAgICAgICAgICAgICAgPC90aD5gO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgPC90aGVhZD5cbiAgICAgICAgPHRib2R5PlxuICAgICAgICAgICR7dGhpcy5kYXRhLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGh0bWxgXG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAke09iamVjdC52YWx1ZXMoaXRlbSkubWFwKCh2YWwpID0-IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBodG1sYDx0ZD4ke3ZhbH08L3RkPmA7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvdHI-XG4gICAgICAgICAgICBgO1xuICAgICAgICAgIH0pfVxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICBgO1xuICB9XG5cbiAgYXN5bmMgZmlyc3RVcGRhdGVkKCkge1xuICAgIGF3YWl0IHRoaXMuZmV0Y2hEYXRhKCk7XG4gIH1cblxuICBhc3luYyBmZXRjaERhdGEoKSB7XG4gICAgbGV0IF9kYXRhOiBhbnk7XG4gICAgaWYgKHRoaXMuc3JjLmxlbmd0aCA-IDApIHtcbiAgICAgIF9kYXRhID0gYXdhaXQgZmV0Y2godGhpcy5zcmMpLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVsZW0gPSB0aGlzLnBhcmVudEVsZW1lbnQ_LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICdzY3JpcHRbdHlwZT1cImFwcGxpY2F0aW9uL2pzb25cIl0nXG4gICAgICApIGFzIEhUTUxTY3JpcHRFbGVtZW50O1xuICAgICAgaWYgKGVsZW0pIF9kYXRhID0gSlNPTi5wYXJzZShlbGVtLmlubmVySFRNTCk7XG4gICAgfVxuICAgIF9kYXRhID8_PSBbXTtcbiAgICB0aGlzLmRhdGEgPSB0aGlzLnRyYW5zZm9ybShfZGF0YSk7XG4gICAgdGhpcy5yZXF1ZXN0VXBkYXRlKCk7XG4gIH1cblxuICB0cmFuc2Zvcm0oZGF0YTogYW55KSB7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbn1cbiJ9LHsibmFtZSI6ImluZGV4Lmh0bWwiLCJjb250ZW50IjoiPCFET0NUWVBFIGh0bWw-XG48aHRtbCBsYW5nPVwiZW5cIj5cblxuPGhlYWQ-XG4gIDxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiIC8-XG4gIDxsaW5rIHJlbD1cImljb25cIiB0eXBlPVwiaW1hZ2Uvc3ZnK3htbFwiIGhyZWY9XCIvc3JjL2Zhdmljb24uc3ZnXCIgLz5cbiAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjBcIiAvPlxuICA8dGl0bGU-SlNPTiB0byBMaXQgSFRNTCBUYWJsZTwvdGl0bGU-XG4gIDxzY3JpcHQgdHlwZT1cIm1vZHVsZVwiIHNyYz1cIi4vbGl0LWh0bWwtdGFibGUuanNcIj48L3NjcmlwdD5cbjwvaGVhZD5cblxuPGJvZHk-XG4gIDxsaXQtaHRtbC10YWJsZSBzcmM9XCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHNcIj5cbiAgICA8IS0tIDxzcGFuIHNsb3Q9XCJ0aXRsZVwiIHN0eWxlPVwiY29sb3I6IHJlZDtcIj5UaXRsZTwvc3Bhbj4gLS0-XG4gICAgPCEtLSA8c2NyaXB0IHR5cGU9XCJhcHBsaWNhdGlvbi9qc29uXCI-XG4gICAgICBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMFwiLFxuICAgICAgICAgIFwibmFtZVwiOiBcIkZpcnN0IEl0ZW1cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgPC9zY3JpcHQ-IC0tPlxuICA8L2xpdC1odG1sLXRhYmxlPlxuXG48L2JvZHk-XG5cbjwvaHRtbD4ifV0\">here</a>.</p>\n<p>The source for this example can be found <a href=\"https://github.com/rodydavis/lit-html-table\">here</a>.</p>\n",
      "date_published": "2021-06-02T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/lit-rich-text-editor/",
      "url": "https://rodydavis.com/posts/lit-rich-text-editor/",
      "title": "Building a Rich Text Editor with Lit",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to create a rich text editor.</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/lit-html-editor\">here</a> and an online <a href=\"https://rodydavis.github.io/lit-html-editor/\">demo</a>.</p>\n<div id=\"playground\" hidden></div>\n<script>\n  addFiles('lit-html-editor', 'rich-text-editor.ts', 'master')\n</script>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Node &gt;= 12</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by navigating in terminal to the location of the project and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init @vitejs/app --template lit-element-ts</code></pre>\n<p>Then enter a project name <code>lit-rich-text-editor</code> and now open the project in vscode and install the dependencies:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lit-rich-text-editor<br><span class=\"token function\">npm</span> i @material/mwc-icon-button<br><span class=\"token function\">npm</span> i -D @types/node<br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Update the <code>vite.config.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">'/lit-rich-text-editor/'</span><span class=\"token punctuation\">,</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    lib<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      entry<span class=\"token operator\">:</span> <span class=\"token string\">\"src/lit-rich-text-editor.ts\"</span><span class=\"token punctuation\">,</span><br>      formats<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h2 id=\"template\">Template <a class=\"direct-link\" href=\"#template\">#</a></h2>\n<p>Open up the <code>index.html</code> and update it with the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/favicon.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://fonts.googleapis.com/css?family=Material+Icons&amp;display=block<span class=\"token punctuation\">\"</span></span><br>      <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Lit Rich Text Editor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/lit-rich-text-editor.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token selector\">lit-rich-text-editor</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">--editor-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">--editor-height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>lit-rich-text-editor</span><span class=\"token punctuation\">></span></span><br>     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Headline 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>This is a paragraph.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token style-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token style language-css\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><br>            <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>font</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#ffffff<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Styled Text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>font</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><br>          <span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do<br>          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad<br>          minim veniam, quis nostrud exercitation ullamco laboris nisi ut<br>          aliquip ex ea commodo consequat. Duis aute irure dolor in<br>          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla<br>          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in<br>          culpa qui officia deserunt mollit anim id est laborum.<br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lit-rich-text-editor</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<p>The important things to take away are the styles added to remove the body padding and send size <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/--*\">CSS Custom Properties</a> to the editor to take up the full viewport.</p>\n<p>Inside the <code>lit-rich-text-editor</code> tags there is a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\"><code>template</code></a> passed as a slot to provide html that will not be rendered but can be accessed.</p>\n<p>There is also an import for the <a href=\"https://fonts.google.com/icons\">Material Icons</a> so it can be used in the editor later.</p>\n<h2 id=\"editor\">Editor <a class=\"direct-link\" href=\"#editor\">#</a></h2>\n<p>The next thing to create is the editor itself. Open up <code>src/lit-rich-text-editor.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitElement<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> customElement<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit-element\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">\"@material/mwc-icon-button\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit-rich-text-editor\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LitRichTextEditor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> content<span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> root<span class=\"token operator\">:</span> Element <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    :host {<br>      --editor-width: 600px;<br>      --editor-height: 600px;<br>      --editor-background: #f1f1f1;<br>      --editor-toolbar-height: 33px;<br>      --editor-toolbar-background: black;<br>      --editor-toolbar-on-background: white;<br>      --editor-toolbar-on-active-background: #a4a4a4;<br>    }<br>    main {<br>      width: var(--editor-width);<br>      height: var(--editor-height);<br>      display: grid;<br>      grid-template-areas:<br>        \"toolbar toolbar\"<br>        \"editor editor\";<br>      grid-template-rows: var(--editor-toolbar-height) auto;<br>      grid-template-columns: auto auto;<br>    }<br>    #editor-actions {<br>      grid-area: toolbar;<br>      width: var(--editor-width);<br>      height: var(--editor-toolbar-height);<br>      background-color: var(--editor-toolbar-background);<br>      color: var(--editor-toolbar-on-background);<br>      overscroll-behavior: contain;<br>      overflow-y: auto;<br>      -ms-overflow-style: none;<br>      scrollbar-width: none;<br>    }<br>    #editor-actions::-webkit-scrollbar {<br>      display: none;<br>    }<br>    #editor {<br>      width: var(--editor-width);<br>      grid-area: editor;<br>      background-color: var(--editor-background);<br>    }<br>    #toolbar {<br>      width: 1090px;<br>      height: var(--editor-toolbar-height);<br>    }<br>    [contenteditable] {<br>      outline: 0px solid transparent;<br>    }<br>    #toolbar > mwc-icon-button {<br>      color: var(--editor-toolbar-on-background);<br>      --mdc-icon-size: 20px;<br>      --mdc-icon-button-size: 30px;<br>      cursor: pointer;<br>    }<br>    #toolbar > .active {<br>      color: var(--editor-toolbar-on-active-background);<br>    }<br>    select {<br>      margin-top: 5px;<br>      height: calc(var(--editor-toolbar-height) - 10px);<br>    }<br>    input[type=\"color\"] {<br>      height: calc(var(--editor-toolbar-height) - 15px);<br>      -webkit-appearance: none;<br>      border: none;<br>      width: 22px;<br>    }<br>    input[type=\"color\"]::-webkit-color-swatch-wrapper {<br>      padding: 0;<br>    }<br>    input[type=\"color\"]::-webkit-color-swatch {<br>      border: none;<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;main><br>      &lt;input id=\"bg\" type=\"color\" style=\"display:none\" /><br>      &lt;input id=\"fg\" type=\"color\" style=\"display:none\" /><br>      &lt;div id=\"editor-actions\"><br>        &lt;div id=\"toolbar\"><br>        &lt;/div><br>      &lt;/div><br>      &lt;div id=\"editor\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/div><br>    &lt;/main> </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">async</span> <span class=\"token function\">firstUpdated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentElement<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lit-rich-text-editor template\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> elem<span class=\"token operator\">?.</span>innerHTML <span class=\"token operator\">??</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"defaultParagraphSeparator\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"br\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectionchange\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    root<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contenteditable\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>root <span class=\"token operator\">=</span> root<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>With everything updated run <code>npm run dev</code> and the following should appear in the browser:</p>\n<img width=\"100%\" src=\"/img/rich-text/editor-start.png\">\n<p>Nothing special is happening yet, but the template is being read and passed into the element, parsed and setting the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable\"><code>contenteditable</code></a> attribute to <code>true</code>.</p>\n<p>This is a way to access the slots and use the nodes to hold data that are not used for rendering. Doing it this way allows for a transformation of the HTML source into a format that can be used.</p>\n<h2 id=\"toolbar\">Toolbar <a class=\"direct-link\" href=\"#toolbar\">#</a></h2>\n<p>At the bottom of the class before the last <code>}</code> add the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">renderToolbar</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">command</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> val<span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// TODO: Selection does not work on Safari iOS</span><br>    <span class=\"token keyword\">const</span> selection <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shadowRoot<span class=\"token operator\">?.</span>getSelection<br>      <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shadowRoot<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>      <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> tags<span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selection<span class=\"token operator\">?.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"Range\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// @ts-ignore</span><br>      <span class=\"token keyword\">let</span> parentNode <span class=\"token operator\">=</span> selection<span class=\"token operator\">?.</span>baseNode<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parentNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">const</span> parentTagName <span class=\"token operator\">=</span> parentNode<span class=\"token operator\">?.</span>tagName<span class=\"token operator\">?.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parentTagName<span class=\"token punctuation\">)</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>parentTagName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>parentNode <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token function\">checkNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          parentNode <span class=\"token operator\">=</span> parentNode<span class=\"token operator\">?.</span>parentNode<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">const</span> commands<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      icon<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>      command<span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      active<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span><br>      type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>      values<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> font<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      command_value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_clear\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"removeFormat\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_bold\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">,</span><br>        active<span class=\"token operator\">:</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_italic\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"italic\"</span><span class=\"token punctuation\">,</span><br>        active<span class=\"token operator\">:</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_underlined\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"underline\"</span><span class=\"token punctuation\">,</span><br>        active<span class=\"token operator\">:</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_align_left\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"justifyleft\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_align_center\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"justifycenter\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_align_right\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"justifyright\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_list_numbered\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"insertorderedlist\"</span><span class=\"token punctuation\">,</span><br>        active<span class=\"token operator\">:</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ol\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_list_bulleted\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"insertunorderedlist\"</span><span class=\"token punctuation\">,</span><br>        active<span class=\"token operator\">:</span> tags<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_quote\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"formatblock\"</span><span class=\"token punctuation\">,</span><br>        command_value<span class=\"token operator\">:</span> <span class=\"token string\">\"blockquote\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_indent_decrease\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"outdent\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_indent_increase\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"indent\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"add_link\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function-variable function\">command</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">const</span> newLink <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write the URL here\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newLink <span class=\"token operator\">&amp;&amp;</span> newLink <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">&amp;&amp;</span> newLink <span class=\"token operator\">!=</span> <span class=\"token string\">\"http://\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createlink\"</span><span class=\"token punctuation\">,</span> newLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span> icon<span class=\"token operator\">:</span> <span class=\"token string\">\"link_off\"</span><span class=\"token punctuation\">,</span> command<span class=\"token operator\">:</span> <span class=\"token string\">\"unlink\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_color_text\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function-variable function\">command</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shadowRoot<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><br>            <span class=\"token string\">\"#fg\"</span><br>          <span class=\"token punctuation\">)</span><span class=\"token operator\">!</span> <span class=\"token keyword\">as</span> HTMLInputElement<span class=\"token punctuation\">;</span><br>          input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">const</span> val <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>            <span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"forecolor\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          input<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        type<span class=\"token operator\">:</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"border_color\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function-variable function\">command</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shadowRoot<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><br>            <span class=\"token string\">\"#bg\"</span><br>          <span class=\"token punctuation\">)</span><span class=\"token operator\">!</span> <span class=\"token keyword\">as</span> HTMLInputElement<span class=\"token punctuation\">;</span><br>          input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">const</span> val <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>            <span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"backcolor\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          input<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        type<span class=\"token operator\">:</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"formatblock\"</span><span class=\"token punctuation\">,</span><br>        values<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Normal Text\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"--\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 1\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h1\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 2\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h2\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 3\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h3\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 4\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h4\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 5\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h5\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Heading 6\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"h6\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Paragraph\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"p\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Pre-Formatted\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"pre\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"text_format\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"fontname\"</span><span class=\"token punctuation\">,</span><br>        values<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Font Name\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"--\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">checkFonts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>            name<span class=\"token operator\">:</span> f<span class=\"token punctuation\">,</span><br>            value<span class=\"token operator\">:</span> f<span class=\"token punctuation\">,</span><br>            font<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"format_size\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"fontsize\"</span><span class=\"token punctuation\">,</span><br>        values<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Font Size\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"--\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Very Small\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Small\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Normal\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Medium Large\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Large\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"5\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Very Large\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"6\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Maximum\"</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"7\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"undo\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"undo\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"redo\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"redo\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"content_cut\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"content_copy\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span><br>        icon<span class=\"token operator\">:</span> <span class=\"token string\">\"content_paste\"</span><span class=\"token punctuation\">,</span><br>        command<span class=\"token operator\">:</span> <span class=\"token string\">\"paste\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> html`<br>          $<span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>values<br>            <span class=\"token operator\">?</span> html` <span class=\"token operator\">&lt;</span>select<br>                id<span class=\"token operator\">=</span><span class=\"token string\">\"${n.icon}\"</span><br>                @change<span class=\"token operator\">=</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                  <span class=\"token keyword\">const</span> val <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>val <span class=\"token operator\">===</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"removeFormat\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>command <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token function\">command</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                  <span class=\"token punctuation\">}</span><br>                <span class=\"token punctuation\">}</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>              ><br>                </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><br>                  <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> &lt;option value=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token punctuation\">.</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/option></span><span class=\"token template-punctuation string\">`</span></span><br>                <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>              &lt;/select></span><span class=\"token template-punctuation string\">`</span></span><br>            <span class=\"token operator\">:</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> &lt;mwc-icon-button<br>                icon=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token punctuation\">.</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"<br>                class=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>n<span class=\"token punctuation\">.</span>active <span class=\"token operator\">?</span> <span class=\"token string\">\"active\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"inactive\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"<br>                @click=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> n<span class=\"token punctuation\">.</span>command <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token function\">command</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>command_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                    n<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                  <span class=\"token punctuation\">}</span><br>                <span class=\"token punctuation\">}</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>              >&lt;/mwc-icon-button></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><br>        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">;<br>      })}<br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This takes an array of objects that we can map to <code>mwc-icon-button</code> or <code>select</code> depending on the passed values. This will also set up the event listeners and execute the command for the given action.</p>\n<p>Inside the <code>&lt;div id=&quot;toolbar&quot;&gt;</code> tag add the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\">$<span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderToolbar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre>\n<p>This will listen for the callback and fire the command on the document and log it to the console.</p>\n<p>And finally at the bottom of the file add the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">checkFonts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> fontCheck <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><br>    <span class=\"token punctuation\">[</span><br>      <span class=\"token comment\">// Windows 10</span><br>      <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial Black\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Bahnschrift\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Calibri\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Cambria\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Cambria Math\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Candara\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Comic Sans MS\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Consolas\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Constantia\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Corbel\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Courier New\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Ebrima\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Franklin Gothic Medium\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Gabriola\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Gadugi\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Georgia\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"HoloLens MDL2 Assets\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Impact\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Ink Free\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Javanese Text\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Leelawadee UI\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Lucida Console\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Lucida Sans Unicode\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Malgun Gothic\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Marlett\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft Himalaya\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft JhengHei\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft New Tai Lue\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft PhagsPa\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft Sans Serif\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft Tai Le\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft YaHei\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft Yi Baiti\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"MingLiU-ExtB\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Mongolian Baiti\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"MS Gothic\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"MV Boli\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Myanmar Text\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Nirmala UI\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Palatino Linotype\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe MDL2 Assets\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe Print\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe Script\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe UI\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe UI Historic\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe UI Emoji\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Segoe UI Symbol\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"SimSun\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Sitka\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Sylfaen\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Symbol\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Tahoma\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Trebuchet MS\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Verdana\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Webdings\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Wingdings\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Yu Gothic\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token comment\">// macOS</span><br>      <span class=\"token string\">\"American Typewriter\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Andale Mono\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial Black\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial Narrow\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial Rounded MT Bold\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Arial Unicode MS\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Avenir\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Avenir Next\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Avenir Next Condensed\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Baskerville\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Big Caslon\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Bodoni 72\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Bodoni 72 Oldstyle\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Bodoni 72 Smallcaps\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Bradley Hand\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Brush Script MT\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Chalkboard\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Chalkboard SE\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Chalkduster\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Charter\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Cochin\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Comic Sans MS\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Copperplate\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Courier\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Courier New\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Didot\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"DIN Alternate\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"DIN Condensed\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Futura\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Geneva\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Georgia\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Gill Sans\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Helvetica\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Helvetica Neue\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Herculanum\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Hoefler Text\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Impact\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Lucida Grande\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Luminari\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Marker Felt\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Menlo\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Microsoft Sans Serif\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Monaco\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Noteworthy\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Optima\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Palatino\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Papyrus\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Phosphate\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Rockwell\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Savoye LET\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"SignPainter\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Skia\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Snell Roundhand\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Tahoma\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Times\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Trattatello\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Trebuchet MS\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Verdana\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"Zapfino\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> fontAvailable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// @ts-ignore</span><br>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> font <span class=\"token keyword\">of</span> fontCheck<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// @ts-ignore</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>fonts<span class=\"token punctuation\">.</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">12px \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>font<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      fontAvailable<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token comment\">// @ts-ignore</span><br>  <span class=\"token keyword\">return</span> fontAvailable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Following this great suggestion <a href=\"https://stackoverflow.com/a/62755574/7303311\">here</a> the document checks to see all the avaliable fonts for the browser and given document.</p>\n<h2 id=\"running\">Running <a class=\"direct-link\" href=\"#running\">#</a></h2>\n<p>If everything went well when the command <code>npm run dev</code> is run the following should appear in the viewport:</p>\n<img width=\"100%\" src=\"/img/rich-text/editor-finish.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building with Lit you can read the docs <a href=\"https://lit.dev\">here</a>. There is also an example on the Lit playground <a href=\"https://lit.dev/playground/#project=\">here</a>.</p>\n<p>The source for this example can be found <a href=\"https://github.com/rodydavis/lit-html-editor\">here</a>.</p>\n",
      "date_published": "2021-05-25T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/figma-and-lit/",
      "url": "https://rodydavis.com/posts/figma-and-lit/",
      "title": "Lit and Figma",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it to create a figma plugin.</p>\n<p><strong>TLDR</strong> You can find the final source <a href=\"https://github.com/rodydavis/figma_lit_example\">here</a>.</p>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Vscode</li>\n<li>Figma Desktop</li>\n<li>Node</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by creating a empty directory and naming it with <code>snake_case</code> whatever we want.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> figma_lit_example<br><span class=\"token builtin class-name\">cd</span> figma_lit_example</code></pre>\n<h3 id=\"web-setup\">Web Setup <a class=\"direct-link\" href=\"#web-setup\">#</a></h3>\n<p>Now we are in the <code>figma_lit_example</code> directory and can setup Figma and Lit. Let's start with node.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init -y</code></pre>\n<p>This will setup the basics for a node project and install the packages we need. Now lets add some config files. Now open the <code>package.json</code> and replace it with the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"figma_lit_example\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lit Figma Plugin\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"lit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.0.0-rc.1\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"@figma/plugin-typings\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.23.0\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"html-webpack-inline-source-plugin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.0.0-beta.2\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"html-webpack-plugin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.3.0\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"css-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^5.2.4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"ts-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^8.0.0\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"typescript\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.2.4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"url-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.1.1\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.44.1\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"webpack-cli\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.6.0\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx webpack --mode=development --watch\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"copy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mkdir -p lit-plugin &amp;&amp; cp ./manifest.json ./lit-plugin/manifest.json &amp;&amp; cp ./dist/ui.html ./lit-plugin/ui.html &amp;&amp; cp ./dist/code.js ./lit-plugin/code.js\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx webpack --mode=production &amp;&amp; npm run copy\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"zip\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &amp;&amp; zip -r lit-plugin.zip lit-plugin\"</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"browserslist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"last 1 Chrome versions\"</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will add everything we need and add the scripts we need for development and production. Then run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i</code></pre>\n<p>This will install everything we need to get started. Now we need to setup some config files.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> tsconfig.json<br><span class=\"token function\">touch</span> webpack.config.ts</code></pre>\n<p>This will create 2 files. Now open up <code>tsconfig.json</code> and paste the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es2017\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esNext\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2017\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom.iterable\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"typeRoots\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./node_modules/@types\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./node_modules/@figma\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"inlineSources\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noUnusedLocals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noImplicitReturns\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noFallthroughCasesInSwitch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./packages\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"importHelpers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-lit-plugin\"</span><span class=\"token punctuation\">,</span><br>        <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token property\">\"no-unknown-tag-name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unclosed-tag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unknown-property\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unintended-mixed-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-invalid-boolean-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-expressionless-property-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-noncallable-event-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-boolean-in-attribute-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-complex-attribute-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-nullable-attribute-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-incompatible-type-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-invalid-directive-binding\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-incompatible-property-type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unknown-property-converter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-invalid-attribute-name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-invalid-tag-name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unknown-attribute\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unknown-event\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-unknown-slot\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span><br>          <span class=\"token property\">\"no-invalid-css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"references\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>This is a basic typescript config. Now open up <code>webpack.config.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> HtmlWebpackInlineSourcePlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-webpack-inline-source-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  mode<span class=\"token operator\">:</span> argv<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"production\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span><br>  devtool<span class=\"token operator\">:</span> argv<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"inline-source-map\"</span><span class=\"token punctuation\">,</span><br>  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    ui<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/ui.ts\"</span><span class=\"token punctuation\">,</span><br>    code<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/code.ts\"</span><span class=\"token punctuation\">,</span><br>    app<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/my-app.ts\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token punctuation\">{</span> test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> use<span class=\"token operator\">:</span> <span class=\"token string\">\"ts-loader\"</span><span class=\"token punctuation\">,</span> exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span> test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"style-loader\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> loader<span class=\"token operator\">:</span> <span class=\"token string\">\"css-loader\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">{</span> test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(png|jpg|gif|webp|svg)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> loader<span class=\"token operator\">:</span> <span class=\"token string\">\"url-loader\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"[name].js\"</span><span class=\"token punctuation\">,</span><br>    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>      template<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ui.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      filename<span class=\"token operator\">:</span> <span class=\"token string\">\"ui.html\"</span><span class=\"token punctuation\">,</span><br>      inject<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>      inlineSource<span class=\"token operator\">:</span> <span class=\"token string\">\".(js|css)$\"</span><span class=\"token punctuation\">,</span><br>      chunks<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ui\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackInlineSourcePlugin</span><span class=\"token punctuation\">(</span>HtmlWebpackPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>Now we need to create the ui for the plugin:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> ui.html</code></pre>\n<p>Open up <code>/src/ui.html</code> and add the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-app</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-app</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<p>Now we need a manifest file for the figma plugin:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> manifest.json</code></pre>\n<p>Open <code>manifest.json</code> and add the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"figma_lit_example\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"973668777853442323\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"code.js\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"ui\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ui.html\"</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Now we need to create our web component:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> src<br><span class=\"token builtin class-name\">cd</span> src<br><span class=\"token function\">touch</span> my-app.ts<br><span class=\"token function\">touch</span> code.ts<br><span class=\"token function\">touch</span> ui.ts<br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n<p>Open <code>/src/ui.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./my-app\"</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>Open <code>/src/my-app.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-app\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> amount <span class=\"token operator\">=</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#count\"</span><span class=\"token punctuation\">)</span> countInput<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLInputElement<span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;div><br>        &lt;h2>Rectangle Creator&lt;/h2><br>        &lt;p>Count: &lt;input id=\"count\" value=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>amount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" />&lt;/p><br>        &lt;button id=\"create\" @click=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>create<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">>Create&lt;/button><br>        &lt;button id=\"cancel\" @click=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cancel<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">>Cancel&lt;/button><br>      &lt;/div><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>countInput<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create-rectangles\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cancel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">private</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> Object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> pluginMessage<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> type<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>content <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    parent<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Open <code>code.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> options<span class=\"token operator\">:</span> ShowUIOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>  width<span class=\"token operator\">:</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span><br>  height<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>figma<span class=\"token punctuation\">.</span><span class=\"token function\">showUI</span><span class=\"token punctuation\">(</span>__html__<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>figma<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">msg</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">case</span> <span class=\"token string\">'create-rectangles'</span><span class=\"token operator\">:</span><br>      <span class=\"token keyword\">const</span> nodes<span class=\"token operator\">:</span> SceneNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> msg<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> figma<span class=\"token punctuation\">.</span><span class=\"token function\">createRectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">150</span><span class=\"token punctuation\">;</span><br>        rect<span class=\"token punctuation\">.</span>fills <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'SOLID'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> r<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> g<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        figma<span class=\"token punctuation\">.</span>currentPage<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        nodes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      figma<span class=\"token punctuation\">.</span>currentPage<span class=\"token punctuation\">.</span>selection <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">;</span><br>      figma<span class=\"token punctuation\">.</span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">scrollAndZoomIntoView</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span><br>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  figma<span class=\"token punctuation\">.</span><span class=\"token function\">closePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h2 id=\"building-the-plugin\">Building the Plugin <a class=\"direct-link\" href=\"#building-the-plugin\">#</a></h2>\n<p>Now that we have all the code in place we can build the plugin and test it in Figma.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build</code></pre>\n<h4 id=\"step-1\">Step 1 <a class=\"direct-link\" href=\"#step-1\">#</a></h4>\n<p>Download and open the desktop version of Figma.</p>\n<p><a href=\"https://www.figma.com/downloads/\">https://www.figma.com/downloads/</a></p>\n<h4 id=\"step-2\">Step 2 <a class=\"direct-link\" href=\"#step-2\">#</a></h4>\n<p>Open the menu and navigate to “Plugins &gt; Manage plugins”</p>\n<img width=\"100%\" src=\"/img/figma/manage-plugin.png\">\n<h4 id=\"step-3\">Step 3 <a class=\"direct-link\" href=\"#step-3\">#</a></h4>\n<p>Click on the plus icon to add a local plugin.</p>\n<img width=\"100%\" src=\"/img/figma/add-plugin.png\">\n<p>Click on the box to link to an existing plugin to navigate to the <code>lit-plugin</code> folder that was created after the build process in your source code and select <code>manifest.json</code>.</p>\n<img width=\"100%\" src=\"/img/figma/create-plugin.png\">\n<h4 id=\"step-4\">Step 4 <a class=\"direct-link\" href=\"#step-4\">#</a></h4>\n<p>To run the plugin navigate to “Plugins &gt; Development &gt; figma_lit_example” to launch your plugin.</p>\n<img width=\"100%\" src=\"/img/figma/run-lit-plugin.png\">\n<h4 id=\"step-5\">Step 5 <a class=\"direct-link\" href=\"#step-5\">#</a></h4>\n<p>Now your plugin should launch and you can create 5 rectangles on the canvas.</p>\n<img width=\"100%\" src=\"/img/figma/plugin-overview.png\">\n<p>If everything worked you will have 5 new rectangles on the canvas focused by figma.</p>\n<img width=\"100%\" src=\"/img/figma/rectangles.png\">\n<h2 id=\"wasm-support\">WASM Support <a class=\"direct-link\" href=\"#wasm-support\">#</a></h2>\n<p>If there is a heavy computation that could benefit from running in <a href=\"https://webassembly.org/\">WebAssembly</a> the following will ensure that it is hardware accelerated when possible.</p>\n<p>Let's add <a href=\"https://www.assemblyscript.org/\">AssemblyScript</a> and some dependencies that will be used for loading the WASM into the figma ui.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i @assemblyscript/loader<br><span class=\"token function\">npm</span> i --D assemblyscript js-inline-wasm<br>npx asinit <span class=\"token builtin class-name\">.</span></code></pre>\n<p>Confirm yes to the prompt to have it generate the project files and add the following to the scripts in <code>package.json</code>:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"asbuild:untouched\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"asc assembly/index.ts --target debug\"</span>,<br><span class=\"token string\">\"asbuild:optimized\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"asc assembly/index.ts --target release\"</span>,<br><span class=\"token string\">\"asbuild\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"npm run asbuild:untouched &amp;&amp; npm run asbuild:optimized\"</span>,<br><span class=\"token string\">\"inlinewasm\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"inlinewasm build/optimized.wasm --output src/wasm.ts\"</span>,</code></pre>\n<p>The code that will be used for the WASM is in <code>/assembly/index.ts</code> and it should show the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// The entry file of your WebAssembly module.</span><br><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token operator\">:</span> i32<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> i32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> i32 <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now let's build the wasm module:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run asbuild</code></pre>\n<p>For the wasm build to be ignored for git add the following to .gitignore:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">build</code></pre>\n<p>This will generate the wasm and wat files in the build directory, but for figma to load them into the ui it needs to be inlined so run the following command to generate the js from the wasm file:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run inlinewasm</code></pre>\n<p>This should generate <code>src/wasm.ts</code> with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> encoded <span class=\"token operator\">=</span> <span class=\"token string\">'AGFzbQEAAAABBwFgAn9/AX8DAgEABQMBAAAHEAIDYWRkAAAGbWVtb3J5AgAKCQEHACAAIAFqCwAmEHNvdXJjZU1hcHBpbmdVUkwULi9vcHRpbWl6ZWQud2FzbS5tYXA='</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> <span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> decoded<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        bytes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> decoded<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/wasm\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>Now open up the <code>/src/my-app.ts</code> and update with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-app\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> amount <span class=\"token operator\">=</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;-- Pass in a value for the number of rectangles to create</span><br>  @<span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#count\"</span><span class=\"token punctuation\">)</span> countInput<span class=\"token operator\">!</span><span class=\"token operator\">:</span> HTMLInputElement<span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;div><br>        &lt;h2>Rectangle Creator&lt;/h2><br>        &lt;!-- Pass in the amount to the input value --><br>        &lt;p>Count: &lt;input id=\"count\" value=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>amount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" />&lt;/p><br>        ...<br>      &lt;/div><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token operator\">...</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will let us pass in the amount of boxes to create externally.</p>\n<p>Now open <code>/src/ui.ts</code> and update it with the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./my-app\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> wasm <span class=\"token keyword\">from</span> <span class=\"token string\">\"./wasm\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;-- Our WASM file to load</span><br><br>WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span>wasm <span class=\"token keyword\">as</span> Promise<span class=\"token operator\">&lt;</span>Response<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// @ts-ignore</span><br>  <span class=\"token keyword\">const</span> value<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"return from wasm\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-app'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span> <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">;</span><br>  elem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'amount'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>Now when we build the plugin and run it in figma the amount of boxes will be the result of calling into wasm!</p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to learn more about building a plugin in Figma you can read more <a href=\"https://www.figma.com/plugin-docs/intro/\">here</a> and for Lit you can read the docs <a href=\"https://lit.dev\">here</a>.</p>\n",
      "date_published": "2021-05-09T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/flutter-and-lit/",
      "url": "https://rodydavis.com/posts/flutter-and-lit/",
      "title": "Lit and Flutter",
      "content_html": "<p>In this article I will go over how to set up a <a href=\"https://lit.dev\">Lit</a> web component and use it inline in the Flutter widget tree.</p>\n<p><strong>TLDR</strong> You can find the final source <a href=\"https://github.com/rodydavis/flutter_hybrid_template\">here</a>.</p>\n<p>The reason you would want this integration is so you can take an existing web app, or just a single part of it and embed it in the widget tree.</p>\n<p>With it wrapped in Flutter you can call device APIs from event listeners on your web component.</p>\n<p>For example you may have an app that handles purchases, and now you can call the in app purchase API or other device specific features not available on the web.</p>\n<p>You also get a cross platform app that can be delivered to both Google Play and the App Store.</p>\n<p>The web component will receive new code each time you update your site, so you do not have to ship an update each time the web component changes.</p>\n<h2 id=\"prerequisites\">Prerequisites <a class=\"direct-link\" href=\"#prerequisites\">#</a></h2>\n<ul>\n<li>Flutter SDK</li>\n<li>Xcode and Command Line Tools</li>\n<li>Android SDK</li>\n<li>Vscode</li>\n<li>Node</li>\n<li>Typescript</li>\n</ul>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>We can start off by creating a empty directory and naming it with <code>snake_case</code> whatever we want.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> flutter_lit_example<br><span class=\"token builtin class-name\">cd</span> flutter_lit_example</code></pre>\n<h3 id=\"web-setup\">Web Setup <a class=\"direct-link\" href=\"#web-setup\">#</a></h3>\n<p>Now we are in the <code>flutter_lit_example</code> directory and can setup Flutter and Lit. Let's start with node.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init -y<br><span class=\"token function\">npm</span> i lit<br><span class=\"token function\">npm</span> i -D typescript vite @types/node</code></pre>\n<p>This will setup the basics for a node project and install the packages we need. Now lets add some config files.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> tsconfig.json<br><span class=\"token function\">touch</span> vite.config.ts</code></pre>\n<p>This will create 2 files. Now open up <code>tsconfig.json</code> and paste the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token string\">\"es2017\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"dom.iterable\"</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>      <span class=\"token string\">\"vite/client\"</span><br>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"emitDeclarationOnly\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./types\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noUnusedLocals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noUnusedParameters\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noImplicitReturns\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"noFallthroughCasesInSwitch\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"src/**/*.ts\"</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This is a basic typescript config. Now open up <code>vite.config.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// https://vitejs.dev/config/</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>  base<span class=\"token operator\">:</span> <span class=\"token string\">\"/flutter_lit_example/\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// TODO: Name of your github repo</span><br>  build<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>    outDir<span class=\"token operator\">:</span> <span class=\"token string\">\"build/web\"</span><span class=\"token punctuation\">,</span><br>    rollupOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// external: /^lit-element/,</span><br>      output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        entryFileNames<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">assets/[name].js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>        chunkFileNames<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">assets/[name].js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>        assetFileNames<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">assets/[name].[ext]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>        main<span class=\"token operator\">:</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token comment\">// TODO: Create a new module for each component you want to embed</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Now we need to create our web component:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> src<br><span class=\"token builtin class-name\">cd</span> src<br><span class=\"token function\">touch</span> my-app.ts<br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n<p>Open <code>my-app.ts</code> and paste the following:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> LitElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit\"</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customElement<span class=\"token punctuation\">,</span> property <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lit/decorators.js\"</span><span class=\"token punctuation\">;</span><br><br>@<span class=\"token function\">customElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-app\"</span><span class=\"token punctuation\">)</span><br><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LitElement</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">static</span> styles <span class=\"token operator\">=</span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    p {<br>      color: blue;<br>    }<br>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><br>  @<span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>  name <span class=\"token operator\">=</span> <span class=\"token string\">\"Somebody\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div><br>      &lt;p>Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/p><br>      &lt;slot>&lt;/slot><br>    &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>We need to create a <code>index.html</code> for our web app.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> index.html</code></pre>\n<p>Open <code>index.html</code> and paste the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/src/my-app.ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><br>      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token selector\">my-app</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span><br>        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-app</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-app</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"flutter-setup\">Flutter Setup <a class=\"direct-link\" href=\"#flutter-setup\">#</a></h3>\n<p>Now that we have the basics setup for web we can move on to flutter. Let's create the project with the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter create --platforms<span class=\"token operator\">=</span>ios,android <span class=\"token builtin class-name\">.</span><br>flutter packages get</code></pre>\n<p>Open up <code>pubspec.yaml</code> and update it with the following:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> flutter_lit_example<br><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> A hybrid Flutter app.<br><span class=\"token key atrule\">publish_to</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span><br><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 1.0.0+1<br><br><span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\">=2.7.0 &lt;3.0.0\"</span><br><br><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br>  <span class=\"token key atrule\">flutter_inappwebview</span><span class=\"token punctuation\">:</span> ^5.3.2<br><br><span class=\"token key atrule\">dev_dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter_test</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">uses-material-design</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre>\n<p>Make sure to get the packages again:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter packages get</code></pre>\n<p>Now we need to create the file that will wrap the web component.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> lib<br><span class=\"token function\">touch</span> web_component.dart<br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n<p>Open <code>web_component.dart</code> and paste the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_inappwebview/flutter_inappwebview.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">WebComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">WebComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    Key key<span class=\"token punctuation\">,</span><br>    <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span><br>    <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bundle<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attributes <span class=\"token operator\">=</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>slot <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events <span class=\"token operator\">=</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> String name<span class=\"token punctuation\">,</span> bundle<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> String<span class=\"token operator\">></span> attributes<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> String slot<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>EventCallback<span class=\"token operator\">></span> events<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _WebComponentState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_WebComponentState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_WebComponentState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>WebComponent<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  InAppWebViewController controller<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> List<span class=\"token operator\">&lt;</span>EventCallback<span class=\"token operator\">>></span> _events <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  String <span class=\"token keyword\">get</span> source <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token string\">'''&lt;!DOCTYPE html><br>&lt;html lang=\"en\"><br>  &lt;head><br>    &lt;meta charset=\"UTF-8\" /><br>    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><br>    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><br>    &lt;style><br>      body {<br>        padding: 0;<br>        margin: 0;<br>      }<br>      ${widget.name} {<br>        width: 100%;<br>        height: 100vh;<br>      }<br>    &lt;/style><br>  &lt;script type=\"module\" crossorigin src=\"${widget.bundle}\">&lt;/script><br>&lt;/head><br>  &lt;body><br>    &lt;${widget.name} ${widget.attributes.entries.map((e) => '${e.key}=\"${e.value}\"').join(' ')}><br>      ${widget.slot}<br>    &lt;/${widget.name}><br>    &lt;script><br>    window.addEventListener(\"flutterInAppWebViewPlatformReady\", (event) => {<br>      ${widget.events.join('\\n')}<br>    });<br>    &lt;/script><br>  &lt;/body><br>&lt;/html> <br>'''</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_setup</span><span class=\"token punctuation\">(</span>InAppWebViewController controller<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controller <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setupEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_setupEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> event <span class=\"token keyword\">in</span> _events<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeJavaScriptHandler</span><span class=\"token punctuation\">(</span>handlerName<span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> event <span class=\"token keyword\">in</span> widget<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">_addEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_addEvent</span><span class=\"token punctuation\">(</span>EventCallback event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    controller<span class=\"token punctuation\">.</span><span class=\"token function\">addJavaScriptHandler</span><span class=\"token punctuation\">(</span><br>      handlerName<span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">,</span><br>      callback<span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">.</span>onPressed<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _events<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    _events<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">didUpdateWidget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">covariant</span> WebComponent oldWidget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">.</span>events <span class=\"token operator\">!=</span> widget<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">_setupEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">.</span>slot <span class=\"token operator\">!=</span> widget<span class=\"token punctuation\">.</span>slot <span class=\"token operator\">||</span><br>        oldWidget<span class=\"token punctuation\">.</span>bundle <span class=\"token operator\">!=</span> widget<span class=\"token punctuation\">.</span>bundle <span class=\"token operator\">||</span><br>        oldWidget<span class=\"token punctuation\">.</span>name <span class=\"token operator\">!=</span> widget<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      controller<span class=\"token punctuation\">.</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">didUpdateWidget</span><span class=\"token punctuation\">(</span>oldWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">InAppWebView</span><span class=\"token punctuation\">(</span><br>      initialData<span class=\"token punctuation\">:</span> <span class=\"token function\">InAppWebViewInitialData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      onWebViewCreated<span class=\"token punctuation\">:</span> _setup<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">EventCallback</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">EventCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onPressed<span class=\"token punctuation\">,</span><br>    <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> String query<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> <span class=\"token keyword\">dynamic</span> <span class=\"token keyword\">Function</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">dynamic</span><span class=\"token operator\">></span> args<span class=\"token punctuation\">)</span> onPressed<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  String <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _source<span class=\"token punctuation\">;</span><br><br>  String <span class=\"token keyword\">get</span> _prefix <span class=\"token operator\">=</span><span class=\"token operator\">></span> query <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> query<span class=\"token punctuation\">.</span>isNotEmpty<br>      <span class=\"token operator\">?</span> <span class=\"token string\">'document.querySelector(\"$query\")'</span><br>      <span class=\"token punctuation\">:</span> <span class=\"token string\">'document.body'</span><span class=\"token punctuation\">;</span><br><br>  String <span class=\"token keyword\">get</span> _source <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><br>        <span class=\"token string\">'$_prefix.addEventListener(\"$event\", (e) => {'</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'  window.flutter_inappwebview.callHandler(\"$query\", e);'</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">'}, false);'</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Open <code>main.dart</code> and paste it with th following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'web_component.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">const</span> WEBSITE_URL <span class=\"token operator\">=</span> <span class=\"token string\">'https://rodydavis.github.io/flutter_lit_example/'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> BUNDLE_PATH <span class=\"token operator\">=</span> <span class=\"token string\">'assets/main.js'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  WidgetsFlutterBinding<span class=\"token punctuation\">.</span><span class=\"token function\">ensureInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Flutter Hybrid App'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      debugShowCheckedModeBanner<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>      title<span class=\"token punctuation\">:</span> title<span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span>primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Builder</span><span class=\"token punctuation\">(</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">WebComponent</span><span class=\"token punctuation\">(</span><br>          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-app'</span><span class=\"token punctuation\">,</span><br>          bundle<span class=\"token punctuation\">:</span> <span class=\"token string\">'$WEBSITE_URL/$BUNDLE_PATH'</span><span class=\"token punctuation\">,</span><br>          attributes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          slot<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;button id=\"my-button\">Talk back!&lt;/button>'</span><span class=\"token punctuation\">,</span><br>          events<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>            <span class=\"token function\">EventCallback</span><span class=\"token punctuation\">(</span><br>              event<span class=\"token punctuation\">:</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><br>              query<span class=\"token punctuation\">:</span> <span class=\"token string\">'#my-button'</span><span class=\"token punctuation\">,</span><br>              onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                ScaffoldMessenger<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><br>                    <span class=\"token punctuation\">.</span><span class=\"token function\">showSnackBar</span><span class=\"token punctuation\">(</span><span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Clicked!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>You will need to update <code>WEBSITE_URL</code> to have the url of the website where you will be deploying and <code>BUNDLE_URL</code> to the relative path to the js bundle.</p>\n<p>This will ensure auto updates with a new version rolls out and the cache it stale. This will also allow for offline support after the first time it is downloaded.</p>\n<h2 id=\"running\">Running <a class=\"direct-link\" href=\"#running\">#</a></h2>\n<p>Now we can run our application but it requires a few steps to get it all setup.</p>\n<p>To test and build our web app locally we will use <a href=\"https://github.com/vitejs/vite\">vite</a> and render the <code>index.html</code></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i<br><span class=\"token function\">npm</span> run dev</code></pre>\n<p>You should see the following:</p>\n<pre class=\"language-html\"><code class=\"language-html\">vite v2.2.3 dev server running at:<br><br>Local:    http://localhost:3000/flutter_lit_example/<br>Network:  http://192.168.1.143:3000/flutter_lit_example/<br><br>ready in 311ms.</code></pre>\n<p>We can open the link <code>http://localhost:3000/flutter_lit_example/</code> to see our running web app and hot reload changes from <code>my-app.ts</code>.</p>\n<p>If you want to learn more about Lit you can read the docs <a href=\"https://lit.dev\">here</a>.</p>\n<p>Once you are happy with how it looks we can move on to Flutter to wrap it in a native app. This will give us access to native code if we wanted to use the in app purchase api or push notifications.</p>\n<p>Kill the terminal and run the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter packages get<br>flutter build ios<br>flutter build appbundle<br>flutter run</code></pre>\n<p>This should select a running device or prompt you to select one. Now that it is running on the device you can see we have two way communication with the Flutter app and the web component.</p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to find the source code you can check it out <a href=\"https://github.com/rodydavis/flutter_hybrid_template\">here</a> otherwise thanks for reading and let me know if you have any questions!</p>\n",
      "date_published": "2021-05-04T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/the-perfect-brisket/",
      "url": "https://rodydavis.com/posts/the-perfect-brisket/",
      "title": "The Perfect Brisket",
      "content_html": "<p>This is a living document meant to be updated each time I improve on the perfect smoked brisket recipe. I don't get to cook it often but when I do I go all out.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-start.jpeg\">\n<p>Be prepared to take 4-6hrs to smoke the meat.</p>\n<h2 id=\"ingredients\">Ingredients <a class=\"direct-link\" href=\"#ingredients\">#</a></h2>\n<ul>\n<li>13-16lb Whole Beef Brisket</li>\n<li>Classic Yellow Mustard</li>\n<li>Dry Rub (Mr. P's Rub-a-butt)</li>\n<li>Large Cutting Board</li>\n<li>Very Sharp Knife</li>\n<li>Smoker (Akorn)</li>\n<li>Apple Wood Chips</li>\n<li>Charcoal Briquettes</li>\n<li>Meat Thermometer</li>\n<li>Aluminum Foil</li>\n</ul>\n<img width=\"100%\" src=\"/img/cooking/brisket-prep.jpeg\">\n<p>First you need to source the brisket. I usually like to go to a local butcher shop and look for some good deals. This last time I went it was at $6.99/lb but I have gotten it as low as $3.99/lb. To cook for a big family and have leftovers you get get a 13-16lb brisket (This is usually what they already have in stock).</p>\n<h2 id=\"prepare-the-meat\">Prepare The Meat <a class=\"direct-link\" href=\"#prepare-the-meat\">#</a></h2>\n<p>After you have the meat out of the packaging you can place it on a cutting board and start to pat dry the meat. This will take quite a few paper towels to dry all the blood and moisture.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-raw.jpeg\">\n<p>After the meat is dry you can grab a very sharp curved knife to be used to trim the fat. The goal of the trimming is to remove most of the hard fat in the thick areas.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-trim.jpeg\">\n<p>You shouldn't have to trim that much unless you are preparing for a competition but in this case I am preparing for a group of people and need more meat. As you are trimming the fat you want to make sure to only cut the thick hard parts and not into the meat (it's ok if this is not perfect, you can use the trimmings for other stuff).</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-trimmed.jpeg\">\n<h2 id=\"season-the-meat\">Season The Meat <a class=\"direct-link\" href=\"#season-the-meat\">#</a></h2>\n<p>With the meat trimmed it is now time to put the dry rub on the brisket. You will need to grab the mustard and whichever seasoning you chose. Be prepared to get very messy at this step, and id you have a helping hand that would be even better (Gloves also work).</p>\n<p>Start of with lines of mustard on the meat so that you have a nice even coat to rub in. Don't worry if you do not like mustard like myself, it will cook out and is only used to keep the seasoning on the meat.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-mustard.jpeg\">\n<p>Now add the seasoning and rub it in with your hands or barbecue brush and repeat on the opposite side. You want to get a nice thick coat.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-rub.jpeg\">\n<p>After you finish the meat make sure you leave it out for 20 min to bring it up to room temperature while you prepare the grill.</p>\n<h2 id=\"prepare-the-smoker\">Prepare The Smoker <a class=\"direct-link\" href=\"#prepare-the-smoker\">#</a></h2>\n<p>While the prepared meat is sitting you will need to prepare the grill. You need to light the coals but not all of them. I like to like the center of them and then control the airflow. Keep in mind you will need to keep the smoker under 250F throughout the duration of the cook.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-grill.jpeg\">\n<p>Another thing I like to use is a diffuser to provide indirect heat and allow just the smoke to cook it. If you do not have this it is not a problem. You can also add the apple wood chips inside a aluminum pouch at this time.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-diffuse.jpeg\">\n<p>This may take about 20-30 min to bring the grill up to the right temperature before putting the meat on.</p>\n<h2 id=\"cook-the-meat\">Cook the Meat <a class=\"direct-link\" href=\"#cook-the-meat\">#</a></h2>\n<p>Now that the meat is room temperature and the grill is warm or close to the right temperature, grab the meat and place it on the smoker.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-smoker.jpeg\">\n<p>Once you have placed the meat on the grate you can put in the temperature sensor sideways in the thickest side of the meat.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-temperature.jpeg\">\n<p>Now comes the fun part... waiting. You will need to come out every 30-60 min to make sure the meat is not getting too hot/cold and make micro adjustments to the vents.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-closed.jpeg\">\n<p>The internal temperature you are shooting for is 190F and it will take awhile for it to come up. When the meat is at 150F or it's been 3 hours and the skin is getting brown, you can wrap the meat in foil to lock in the juices.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-mid.jpeg\">\n<p>The foil should cover all sides of the meat, and around this time you can add more wood chips to increase the smoke.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-foil.jpeg\">\n<h2 id=\"enjoy\">Enjoy <a class=\"direct-link\" href=\"#enjoy\">#</a></h2>\n<p>Regardless of how it turned out it should still smell amazing and taste even better. If you made sure to come check on it often and not let it get to hot it should still be nice and juicy.</p>\n<img width=\"100%\" src=\"/img/cooking/brisket-done.jpeg\">\n<p>It will be really tempting to eat it right away, but you need to let the meat rest for 20 min before eating.</p>\n<p>Let me know how it turned out by mentioning me on <a href=\"https://twitter.com/rodydavis\">twitter</a> or <a href=\"https://instagram.com/rodydavisjr\">instagram</a>.</p>\n",
      "date_published": "2020-12-23T16:00:00-08:00"
    },{
      "id": "https://rodydavis.com/posts/flutter-multi-touch-canvas/",
      "url": "https://rodydavis.com/posts/flutter-multi-touch-canvas/",
      "title": "Multi-touch Canvas with Flutter",
      "content_html": "<p>If you ever wanted to create a canvas in <a href=\"https://flutter.dev\">Flutter</a> that needs to be panned in any direction and allow zoom then you also probably tried to create a <a href=\"https://api.flutter.dev/flutter/gestures/MultiDragGestureRecognizer-class.html\">MultiGestureRecognizer</a> or under a <a href=\"https://api.flutter.dev/flutter/widgets/GestureDetector-class.html\">GestureDetector</a> added onPanUpdate and onScaleUpdate and received an error because both can not work at the same time. Even if you have to GestureDetectors then you will still find it does not work how you want and one will always win.</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/flutter_multi_touch_canvas\">here</a> and an online <a href=\"https://rodydavis.github.io/flutter_multi_touch_canvas/\">demo</a>.</p>\n<iframe class=\"demo\" src=\"https://dartpad.dev/embed-flutter.html?id=e1ead4f4e314691ac8497b004ee679a5&split=80&theme=dark&null_safety=false&split=50&ga_id=flutter-multi-touch-canvas&run=true\"></iframe>\n<p>This is the canvas rendering logic used in <a href=\"https://widget.studio\">https://widget.studio</a></p>\n<h2 id=\"multi-touch-goal\">Multi Touch Goal <a class=\"direct-link\" href=\"#multi-touch-goal\">#</a></h2>\n<ul>\n<li>Pan the canvas with two or more fingers</li>\n<li>Zoom the canvas with two fingers only (Pinch/Zoom)</li>\n<li>Single finger will interact with canvas object and detect selection</li>\n<li>Bonus trackpad support with similar results</li>\n</ul>\n<p>In order to achieve this we need to use a Listener for the trackpad events and raw touch interactions and  <a href=\"https://api.flutter.dev/flutter/widgets/RawKeyboardListener-class.html\">RawKeyboardListener</a> for keyboard shortcuts.</p>\n<h2 id=\"part-1---project-setup\">Part 1 - Project Setup <a class=\"direct-link\" href=\"#part-1---project-setup\">#</a></h2>\n<p>Open your terminal and type the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> flutter_multi_touch<br><span class=\"token builtin class-name\">cd</span> flutter_multi_touch<br>flutter create <span class=\"token builtin class-name\">.</span><br>code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>The last line is optional and if you have VSCode installed. The command will open the directory inside VSCode.</p>\n<h2 id=\"part-2---boilerplate\">Part 2 - Boilerplate <a class=\"direct-link\" href=\"#part-2---boilerplate\">#</a></h2>\n<ul>\n<li>Remove all comments</li>\n<li>Remove extra empty lines</li>\n<li>Update UI</li>\n</ul>\n<p>Right now when you run the project you will have this UI.</p>\n<p>Create a new file located at <code>ui/home/screen.dart</code> and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update <code>main.dart</code> with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'ui/home/screen.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      debugShowCheckedModeBanner<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>        visualDensity<span class=\"token punctuation\">:</span> VisualDensity<span class=\"token punctuation\">.</span>adaptivePlatformDensity<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      darkTheme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyWith</span><span class=\"token punctuation\">(</span><br>        visualDensity<span class=\"token punctuation\">:</span> VisualDensity<span class=\"token punctuation\">.</span>adaptivePlatformDensity<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>You will now have a black screen when you run the application.</p>\n<h2 id=\"part-3---creating-the-controller\">Part 3 - Creating the Controller <a class=\"direct-link\" href=\"#part-3---creating-the-controller\">#</a></h2>\n<p>Now we want to create a class that will act as our controller on the canvas.<br>\nCreate a new file at <code>src/controllers/canvas.dart</code> and add the following to start:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/// Control the canvas and the objects on it</span><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasController</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// Controller for the stream output</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// Reference to the stream to update the UI</span><br>  Stream<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// Emit a new event to rebuild the UI</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CanvasController val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// Stop the stream and finish</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>\t<span class=\"token comment\">// Start the stream</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update the home screen with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>              children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                  top<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>                  left<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>                  width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>                  height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><br>              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Here we are just adding the basics to rebuild when the controller changes or the screen is finished. We are using a stateful widget here because we want to dispose of the controller and load it only once. We are also using a stack because thats all we need under the hood. After a quick hot restart you should have the following view.</p>\n<h2 id=\"part-4---adding-canvas-objects\">Part 4 - Adding Canvas Objects <a class=\"direct-link\" href=\"#part-4---adding-canvas-objects\">#</a></h2>\n<p>Now we need to create the class for the objects that will be stored on the canvas. Create a new file at <code>src/classes/canvas_object.dart</code> and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:ui'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasObject</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> double dx<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> double dy<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> double width<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> double height<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> T child<span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  CanvasObject<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token function\">copyWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    double dx<span class=\"token punctuation\">,</span><br>    double dy<span class=\"token punctuation\">,</span><br>    double width<span class=\"token punctuation\">,</span><br>    double height<span class=\"token punctuation\">,</span><br>    T child<span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> CanvasObject<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>      dx<span class=\"token punctuation\">:</span> dx <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span><br>      dy<span class=\"token punctuation\">:</span> dy <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span><br>      width<span class=\"token punctuation\">:</span> width <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span><br>      height<span class=\"token punctuation\">:</span> height <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><br>      child<span class=\"token punctuation\">:</span> child <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Size <span class=\"token keyword\">get</span> size <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  Offset <span class=\"token keyword\">get</span> offset <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  Rect <span class=\"token keyword\">get</span> rect <span class=\"token operator\">=</span><span class=\"token operator\">></span> offset <span class=\"token operator\">&amp;</span> size<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>We are using a generic here to not depend on flutter or material in the class. Update the controller with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/// Control the canvas and the objects on it</span><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasController</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">/// Controller for the stream output</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reference to the stream to update the UI</span><br>  Stream<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Emit a new event to rebuild the UI</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CanvasController val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Stop the stream and finish</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Start the stream</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// -- Canvas Objects --</span><br><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> _objects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current Objects on the canvas</span><br>  List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> objects <span class=\"token operator\">=</span><span class=\"token operator\">></span> _objects<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">,</span> CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Remove an object from the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token keyword\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>We are just adding the objects to the canvas and removing them if needed. Update the home screen with the following to use these new objects:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>              children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> object <span class=\"token keyword\">in</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">)</span><br>                  <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                    top<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span><br>                    left<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span><br>                    width<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span><br>                    height<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><br>                    child<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><br>              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>The UI is thee same as before but now is dynamic and we have access to the Stack children and position of each child.</p>\n<h2 id=\"part-5---capture-the-input\">Part 5 - Capture the Input <a class=\"direct-link\" href=\"#part-5---capture-the-input\">#</a></h2>\n<p>We need to capture the input of the MultiGestureRecognizer, GestureDetector and RawKeyboardListener. Update the canvas controller with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/// Control the canvas and the objects on it</span><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasController</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">/// Controller for the stream output</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reference to the stream to update the UI</span><br>  Stream<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Emit a new event to rebuild the UI</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CanvasController val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Stop the stream and finish</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    focusNode<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Start the stream</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// -- Canvas Objects --</span><br><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> _objects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current Objects on the canvas</span><br>  List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> objects <span class=\"token operator\">=</span><span class=\"token operator\">></span> _objects<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">,</span> CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Remove an object from the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Focus node for listening for keyboard shortcuts</span><br>  <span class=\"token keyword\">final</span> focusNode <span class=\"token operator\">=</span> <span class=\"token function\">FocusNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Raw events from keys pressed</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> RawKeyEvent key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called every time a new finger touches the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when any of the fingers update position</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when a finger is removed from the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Checks if the shift key on the keyboard is pressed</span><br>  bool shiftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Scale of the canvas</span><br>  double <span class=\"token keyword\">get</span> scale <span class=\"token operator\">=</span><span class=\"token operator\">></span> _scale<span class=\"token punctuation\">;</span><br>  double _scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>double value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _scale <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Max possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double maxScale <span class=\"token operator\">=</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/// Min possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double minScale <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">/// How much to scale the canvas in increments</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double scaleAdjust <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current offset of the canvas</span><br>  Offset <span class=\"token keyword\">get</span> offset <span class=\"token operator\">=</span><span class=\"token operator\">></span> _offset<span class=\"token punctuation\">;</span><br>  Offset _offset <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>Offset value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _offset <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token keyword\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update the home screen with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Listener</span><span class=\"token punctuation\">(</span><br>              behavior<span class=\"token punctuation\">:</span> HitTestBehavior<span class=\"token punctuation\">.</span>opaque<span class=\"token punctuation\">,</span><br>              onPointerSignal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>details <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  GestureBinding<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>pointerSignalResolver<br>                      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">.</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                        double zoomDelta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                        _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> zoomDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                        _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span><br>                            _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span><br>                    <span class=\"token punctuation\">}</span><br>                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerMove<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerUp<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerCancel<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">RawKeyboardListener</span><span class=\"token punctuation\">(</span><br>                autofocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                focusNode<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">,</span><br>                onKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>                  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> object <span class=\"token keyword\">in</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">)</span><br>                      <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                        top<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span><br>                        left<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span><br>                        width<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span><br>                        height<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><br>                        child<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                      <span class=\"token punctuation\">)</span><br>                  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>All we are doing now is just mapping the inputs of the UI to the actions in the controller. Feel free to look through the comments if you are curious how each one works. Running the application should still just show the red square.</p>\n<h2 id=\"part-5---canvas-offset-and-scale\">Part 5 - Canvas Offset and Scale <a class=\"direct-link\" href=\"#part-5---canvas-offset-and-scale\">#</a></h2>\n<p>Now we want to start moving the canvas. Let’s first tackle the offset as scale will take a different approach. Update the home screen with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Listener</span><span class=\"token punctuation\">(</span><br>              behavior<span class=\"token punctuation\">:</span> HitTestBehavior<span class=\"token punctuation\">.</span>opaque<span class=\"token punctuation\">,</span><br>              onPointerSignal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>details <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  GestureBinding<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>pointerSignalResolver<br>                      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">.</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                        double zoomDelta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                        _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> zoomDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                        _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span><br>                            _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span><br>                    <span class=\"token punctuation\">}</span><br>                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerMove<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerUp<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerCancel<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">RawKeyboardListener</span><span class=\"token punctuation\">(</span><br>                autofocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                focusNode<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">,</span><br>                onKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>                    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> object <span class=\"token keyword\">in</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">)</span><br>                        AnimatedPositioned<span class=\"token punctuation\">.</span><span class=\"token function\">fromRect</span><span class=\"token punctuation\">(</span><br>                          duration<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>milliseconds<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          rect<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span><br>                            _controller<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span><br>                            _controller<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          child<span class=\"token punctuation\">:</span> <span class=\"token function\">FittedBox</span><span class=\"token punctuation\">(</span><br>                            fit<span class=\"token punctuation\">:</span> BoxFit<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">,</span><br>                            child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">fromSize</span><span class=\"token punctuation\">(</span><br>                              size<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span><br>                              child<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">)</span><br>                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">extension</span> RectUtils <span class=\"token keyword\">on</span> Rect <span class=\"token punctuation\">{</span><br>  Rect <span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span>Offset offset<span class=\"token punctuation\">,</span> double scale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> top <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTWH</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now when you use your trackpad to pan with two fingers you will see the red square move. We now need to add finger support too. You may notice the FittedBox and that will come in as soon as we add scaling.</p>\n<p>Now if we move the square off the screen we may need to bring it back. We can add a reset button to the AppBar. Add the following to the canvas controller:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double _scaleDefault <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> Offset _offsetDefault <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">=</span> _scaleDefault<span class=\"token punctuation\">;</span><br>    offset <span class=\"token operator\">=</span> _offsetDefault<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update the home screen with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>              actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                  tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Reset the Scale and Offset'</span><span class=\"token punctuation\">,</span><br>                  icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Listener</span><span class=\"token punctuation\">(</span><br>              behavior<span class=\"token punctuation\">:</span> HitTestBehavior<span class=\"token punctuation\">.</span>opaque<span class=\"token punctuation\">,</span><br>              onPointerSignal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>details <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  GestureBinding<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>pointerSignalResolver<br>                      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">.</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                        double zoomDelta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                        _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> zoomDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                        _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span><br>                            _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span><br>                    <span class=\"token punctuation\">}</span><br>                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerMove<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerUp<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerCancel<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">RawKeyboardListener</span><span class=\"token punctuation\">(</span><br>                autofocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                focusNode<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">,</span><br>                onKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>                    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> object <span class=\"token keyword\">in</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">)</span><br>                        AnimatedPositioned<span class=\"token punctuation\">.</span><span class=\"token function\">fromRect</span><span class=\"token punctuation\">(</span><br>                          duration<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>milliseconds<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          rect<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span><br>                            _controller<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span><br>                            _controller<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          child<span class=\"token punctuation\">:</span> <span class=\"token function\">FittedBox</span><span class=\"token punctuation\">(</span><br>                            fit<span class=\"token punctuation\">:</span> BoxFit<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">,</span><br>                            child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">fromSize</span><span class=\"token punctuation\">(</span><br>                              size<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span><br>                              child<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">)</span><br>                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">extension</span> RectUtils <span class=\"token keyword\">on</span> Rect <span class=\"token punctuation\">{</span><br>  Rect <span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span>Offset offset<span class=\"token punctuation\">,</span> double scale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> top <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTWH</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now when you press the reset button the canvas animates back to the default offset and scale.</p>\n<p>While we are here we can add actions for zoom in/out and connect them to the controller. Add the following to the canvas controller:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">+=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">-=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br></code></pre>\n<p>Add the following to the AppBar actions:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">\t\t\t\t  <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                  tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom In'</span><span class=\"token punctuation\">,</span><br>                  icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomIn<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                  tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom Out'</span><span class=\"token punctuation\">,</span><br>                  icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomOut<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br></code></pre>\n<p>Now when you run the application you can easily zoom in/out.</p>\n<h2 id=\"part-6---keyboard-shortcuts\">Part 6 - Keyboard Shortcuts <a class=\"direct-link\" href=\"#part-6---keyboard-shortcuts\">#</a></h2>\n<p>Now we need to capture the keyboard events so we can move the canvas with the arrow keys and scale with +/- keys. Update the controller with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/// Control the canvas and the objects on it</span><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasController</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">/// Controller for the stream output</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reference to the stream to update the UI</span><br>  Stream<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Emit a new event to rebuild the UI</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CanvasController val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Stop the stream and finish</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    focusNode<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Start the stream</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// -- Canvas Objects --</span><br><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> _objects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current Objects on the canvas</span><br>  List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> objects <span class=\"token operator\">=</span><span class=\"token operator\">></span> _objects<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">,</span> CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Remove an object from the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Focus node for listening for keyboard shortcuts</span><br>  <span class=\"token keyword\">final</span> focusNode <span class=\"token operator\">=</span> <span class=\"token function\">FocusNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Raw events from keys pressed</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> RawKeyEvent key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Scale keys</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>minus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>equal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// Directional Keys</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span>offsetAdjust<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>offsetAdjust<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowUp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> offsetAdjust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>offsetAdjust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    _shiftPressed <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>isShiftPressed<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">/// Update Controller Instance</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called every time a new finger touches the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when any of the fingers update position</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when a finger is removed from the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Checks if the shift key on the keyboard is pressed</span><br>  bool <span class=\"token keyword\">get</span> shiftPressed <span class=\"token operator\">=</span><span class=\"token operator\">></span> _shiftPressed<span class=\"token punctuation\">;</span><br>  bool _shiftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Scale of the canvas</span><br>  double <span class=\"token keyword\">get</span> scale <span class=\"token operator\">=</span><span class=\"token operator\">></span> _scale<span class=\"token punctuation\">;</span><br>  double _scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>double value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _scale <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Max possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double maxScale <span class=\"token operator\">=</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Min possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double minScale <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// How much to scale the canvas in increments</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double scaleAdjust <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// How much to shift the canvas in increments</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double offsetAdjust <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current offset of the canvas</span><br>  Offset <span class=\"token keyword\">get</span> offset <span class=\"token operator\">=</span><span class=\"token operator\">></span> _offset<span class=\"token punctuation\">;</span><br>  Offset _offset <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>Offset value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _offset <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double _scaleDefault <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> Offset _offsetDefault <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reset the canvas zoom and offset</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">=</span> _scaleDefault<span class=\"token punctuation\">;</span><br>    offset <span class=\"token operator\">=</span> _offsetDefault<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Zoom in the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">+=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Zoom out the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">-=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token keyword\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now when you run the application you can control the zoom and pan with just a keyboard. This could be useful for a fallback input that would work on a TV for example…</p>\n<p>If you want to see if it is actually scaling proportionally then add the following the home screen:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>              actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom In'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomIn<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom Out'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomOut<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Reset the Scale and Offset'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Listener</span><span class=\"token punctuation\">(</span><br>              behavior<span class=\"token punctuation\">:</span> HitTestBehavior<span class=\"token punctuation\">.</span>opaque<span class=\"token punctuation\">,</span><br>              onPointerSignal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>details <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  GestureBinding<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>pointerSignalResolver<br>                      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">.</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                        double zoomDelta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                        _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> zoomDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                        _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span><br>                            _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span><br>                    <span class=\"token punctuation\">}</span><br>                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerMove<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerUp<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerCancel<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">RawKeyboardListener</span><span class=\"token punctuation\">(</span><br>                autofocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                focusNode<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">,</span><br>                onKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>                    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> object <span class=\"token keyword\">in</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">)</span><br>                        AnimatedPositioned<span class=\"token punctuation\">.</span><span class=\"token function\">fromRect</span><span class=\"token punctuation\">(</span><br>                          duration<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>milliseconds<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          rect<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span><br>                            _controller<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span><br>                            _controller<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          child<span class=\"token punctuation\">:</span> <span class=\"token function\">FittedBox</span><span class=\"token punctuation\">(</span><br>                            fit<span class=\"token punctuation\">:</span> BoxFit<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">,</span><br>                            child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">fromSize</span><span class=\"token punctuation\">(</span><br>                              size<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span><br>                              child<span class=\"token punctuation\">:</span> object<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">)</span><br>                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">extension</span> RectUtils <span class=\"token keyword\">on</span> Rect <span class=\"token punctuation\">{</span><br>  Rect <span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span>Offset offset<span class=\"token punctuation\">,</span> double scale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> top <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTWH</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br></code></pre>\n<p>You can zoom and the blocks all scale correctly and pan around.</p>\n<p>Just press the reset button to start over.</p>\n<h2 id=\"part-7---multi-touch-input\">Part 7 - Multi Touch Input <a class=\"direct-link\" href=\"#part-7---multi-touch-input\">#</a></h2>\n<p>Now time for the fingers. For this you will need a touchscreen device to test. You can plug in your phone or if you have a touch screen computer you can run the web version. Update the controller with following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:math'</span> <span class=\"token operator\">as</span> math<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../classes/rect_points.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">/// Control the canvas and the objects on it</span><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CanvasController</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">/// Controller for the stream output</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reference to the stream to update the UI</span><br>  Stream<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Emit a new event to rebuild the UI</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>CanvasController val<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Stop the stream and finish</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    focusNode<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Start the stream</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// -- Canvas Objects --</span><br><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> _objects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current Objects on the canvas</span><br>  List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> objects <span class=\"token operator\">=</span><span class=\"token operator\">></span> _objects<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Add an object to the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">,</span> CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Remove an object from the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Focus node for listening for keyboard shortcuts</span><br>  <span class=\"token keyword\">final</span> focusNode <span class=\"token operator\">=</span> <span class=\"token function\">FocusNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Raw events from keys pressed</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> RawKeyEvent key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Scale keys</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>minus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>equal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token comment\">// Directional Keys</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span>offsetAdjust<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>offsetAdjust<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowUp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> offsetAdjust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isKeyPressed</span><span class=\"token punctuation\">(</span>LogicalKeyboardKey<span class=\"token punctuation\">.</span>arrowDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>offsetAdjust<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    _shiftPressed <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>isShiftPressed<span class=\"token punctuation\">;</span><br>    _metaPressed <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>isMetaPressed<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">/// Update Controller Instance</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Trigger Shift Press</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">shiftSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _shiftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Trigger Meta Press</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">metaSelect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _metaPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">final</span> Map<span class=\"token operator\">&lt;</span>int<span class=\"token punctuation\">,</span> Offset<span class=\"token operator\">></span> _pointerMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Number of inputs currently on the screen</span><br>  int <span class=\"token keyword\">get</span> touchCount <span class=\"token operator\">=</span><span class=\"token operator\">></span> _pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Marquee selection on the canvas</span><br>  RectPoints <span class=\"token keyword\">get</span> marquee <span class=\"token operator\">=</span><span class=\"token operator\">></span> _marquee<span class=\"token punctuation\">;</span><br>  RectPoints _marquee<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Dragging a canvas object</span><br>  bool <span class=\"token keyword\">get</span> isMovingCanvasObject <span class=\"token operator\">=</span><span class=\"token operator\">></span> _isMovingCanvasObject<span class=\"token punctuation\">;</span><br>  bool _isMovingCanvasObject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">final</span> List<span class=\"token operator\">&lt;</span>int<span class=\"token operator\">></span> _selectedObjects <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  List<span class=\"token operator\">&lt;</span>int<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> selectedObjectsIndices <span class=\"token operator\">=</span><span class=\"token operator\">></span> _selectedObjects<span class=\"token punctuation\">;</span><br>  List<span class=\"token operator\">&lt;</span>CanvasObject<span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> selectedObjects <span class=\"token operator\">=</span><span class=\"token operator\">></span><br>      _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  bool <span class=\"token function\">isObjectSelected</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Called every time a new input touches the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">final</span> pt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>offsetVal <span class=\"token operator\">/</span> scale<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _marquee <span class=\"token operator\">=</span> <span class=\"token function\">RectPoints</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">/// Update Controller Instance</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when any of the inputs update position</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">,</span> Offset offsetVal<span class=\"token punctuation\">,</span> Offset globalVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_marquee <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Update New Widget Rect</span><br>      <span class=\"token keyword\">final</span> _pts <span class=\"token operator\">=</span> _marquee<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> a <span class=\"token operator\">=</span> _pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span><br>      _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> b <span class=\"token operator\">=</span> _pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> delta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> scale<span class=\"token punctuation\">;</span><br>      _pts<span class=\"token punctuation\">.</span>end <span class=\"token operator\">=</span> _pts<span class=\"token punctuation\">.</span>end <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">;</span><br>      _marquee <span class=\"token operator\">=</span> _pts<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _rect <span class=\"token operator\">=</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromPoints</span><span class=\"token punctuation\">(</span>_pts<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> _pts<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> _objects<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_rect<span class=\"token punctuation\">.</span><span class=\"token function\">overlaps</span><span class=\"token punctuation\">(</span>_objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>touchCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Widget Move</span><br>      _isMovingCanvasObject <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> a <span class=\"token operator\">=</span> _pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span><br>      _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> b <span class=\"token operator\">=</span> _pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_selectedObjects<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> idx <span class=\"token keyword\">in</span> _selectedObjects<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">final</span> widget <span class=\"token operator\">=</span> _objects<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">final</span> delta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> scale<span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">final</span> _newOffset <span class=\"token operator\">=</span> widget<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">;</span><br>        _objects<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> widget<span class=\"token punctuation\">.</span><span class=\"token function\">copyWith</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">:</span> _newOffset<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">:</span> _newOffset<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>touchCount <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Scale and Rotate Update</span><br>      _isMovingCanvasObject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _rectA <span class=\"token operator\">=</span> <span class=\"token function\">_getRectFromPoints</span><span class=\"token punctuation\">(</span>_pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _rectB <span class=\"token operator\">=</span> <span class=\"token function\">_getRectFromPoints</span><span class=\"token punctuation\">(</span>_pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _delta <span class=\"token operator\">=</span> _rectB<span class=\"token punctuation\">.</span>center <span class=\"token operator\">-</span> _rectA<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _newOffset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>_delta <span class=\"token operator\">/</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      offset <span class=\"token operator\">=</span> _newOffset<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> aDistance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_rectA<span class=\"token punctuation\">.</span>topLeft <span class=\"token operator\">-</span> _rectA<span class=\"token punctuation\">.</span>bottomRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>distance<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> bDistance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_rectB<span class=\"token punctuation\">.</span>topLeft <span class=\"token operator\">-</span> _rectB<span class=\"token punctuation\">.</span>bottomRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>distance<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> change <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bDistance <span class=\"token operator\">/</span> aDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      scale <span class=\"token operator\">=</span> scale <span class=\"token operator\">*</span> change<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Pan Update</span><br>      _isMovingCanvasObject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _rectA <span class=\"token operator\">=</span> <span class=\"token function\">_getRectFromPoints</span><span class=\"token punctuation\">(</span>_pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _rectB <span class=\"token operator\">=</span> <span class=\"token function\">_getRectFromPoints</span><span class=\"token punctuation\">(</span>_pointerMap<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _delta <span class=\"token operator\">=</span> _rectB<span class=\"token punctuation\">.</span>center <span class=\"token operator\">-</span> _rectA<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">;</span><br>      offset <span class=\"token operator\">=</span> offset <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>_delta <span class=\"token operator\">/</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    _pointerMap<span class=\"token punctuation\">[</span>pointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offsetVal<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">/// Update Controller Instance</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Called when a input is removed from the screen</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>int pointer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _pointerMap<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>touchCount <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      _isMovingCanvasObject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_marquee <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      _marquee <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>      _shiftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">/// Update Controller Instance</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">selectObject</span><span class=\"token punctuation\">(</span>int i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_metaPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        _selectedObjects<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">final</span> item <span class=\"token operator\">=</span> _objects<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        _objects<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Checks if the shift key on the keyboard is pressed</span><br>  bool <span class=\"token keyword\">get</span> shiftPressed <span class=\"token operator\">=</span><span class=\"token operator\">></span> _shiftPressed<span class=\"token punctuation\">;</span><br>  bool _shiftPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Checks if the meta key on the keyboard is pressed</span><br>  bool <span class=\"token keyword\">get</span> metaPressed <span class=\"token operator\">=</span><span class=\"token operator\">></span> _metaPressed<span class=\"token punctuation\">;</span><br>  bool _metaPressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Scale of the canvas</span><br>  double <span class=\"token keyword\">get</span> scale <span class=\"token operator\">=</span><span class=\"token operator\">></span> _scale<span class=\"token punctuation\">;</span><br>  double _scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>double value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;=</span> minScale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          value <span class=\"token operator\">=</span> minScale<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">>=</span> maxScale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          value <span class=\"token operator\">=</span> maxScale<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        _scale <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Max possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double maxScale <span class=\"token operator\">=</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Min possible scale</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double minScale <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// How much to scale the canvas in increments</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double scaleAdjust <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// How much to shift the canvas in increments</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double offsetAdjust <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Current offset of the canvas</span><br>  Offset <span class=\"token keyword\">get</span> offset <span class=\"token operator\">=</span><span class=\"token operator\">></span> _offset<span class=\"token punctuation\">;</span><br>  Offset _offset <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">set</span> <span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>Offset value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _offset <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> double _scaleDefault <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> Offset _offsetDefault <span class=\"token operator\">=</span> Offset<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/// Reset the canvas zoom and offset</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">=</span> _scaleDefault<span class=\"token punctuation\">;</span><br>    offset <span class=\"token operator\">=</span> _offsetDefault<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Zoom in the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">+=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">/// Zoom out the canvas</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scale <span class=\"token operator\">-=</span> scaleAdjust<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token keyword\">Function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Rect <span class=\"token function\">_getRectFromPoints</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>Offset<span class=\"token operator\">></span> offsets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offsets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromPoints</span><span class=\"token punctuation\">(</span>offsets<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> offsets<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">final</span> dxs <span class=\"token operator\">=</span> offsets<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> e<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> dys <span class=\"token operator\">=</span> offsets<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> e<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    double left <span class=\"token operator\">=</span> <span class=\"token function\">_minFromList</span><span class=\"token punctuation\">(</span>dxs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    double top <span class=\"token operator\">=</span> <span class=\"token function\">_minFromList</span><span class=\"token punctuation\">(</span>dys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    double bottom <span class=\"token operator\">=</span> <span class=\"token function\">_maxFromList</span><span class=\"token punctuation\">(</span>dys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    double right <span class=\"token operator\">=</span> <span class=\"token function\">_maxFromList</span><span class=\"token punctuation\">(</span>dxs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTRB</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  double <span class=\"token function\">_minFromList</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>double<span class=\"token operator\">></span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    double value <span class=\"token operator\">=</span> double<span class=\"token punctuation\">.</span>infinity<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> item <span class=\"token keyword\">in</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      value <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  double <span class=\"token function\">_maxFromList</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>double<span class=\"token operator\">></span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    double value <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>double<span class=\"token punctuation\">.</span>infinity<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> item <span class=\"token keyword\">in</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      value <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Add a new file <code>src/classes/rect_points.dart</code> and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:ui'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">RectPoints</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">RectPoints</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  Offset start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">;</span><br><br>  Rect <span class=\"token keyword\">get</span> rect <span class=\"token operator\">=</span><span class=\"token operator\">></span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromPoints</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update the <code>main.dart</code> with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'ui/home/screen.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      debugShowCheckedModeBanner<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>        accentColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span><br>        visualDensity<span class=\"token punctuation\">:</span> VisualDensity<span class=\"token punctuation\">.</span>adaptivePlatformDensity<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      darkTheme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyWith</span><span class=\"token punctuation\">(</span><br>        visualDensity<span class=\"token punctuation\">:</span> VisualDensity<span class=\"token punctuation\">.</span>adaptivePlatformDensity<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Update the home screen with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/gestures.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/canvas_object.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/controllers/canvas.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> <span class=\"token function\">CanvasController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_dummyData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">CanvasObject</span><span class=\"token punctuation\">(</span><br>        dx<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        dy<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span><br>        width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>        height<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> StreamBuilder<span class=\"token operator\">&lt;</span>CanvasController<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><br>        stream<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">,</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>snapshot<span class=\"token punctuation\">.</span>hasData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>              appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">final</span> instance <span class=\"token operator\">=</span> snapshot<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>            appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>              actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Selection'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>select_all<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    color<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>shiftPressed<br>                        <span class=\"token operator\">?</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>accentColor<br>                        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>shiftSelect<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Meta Key'</span><span class=\"token punctuation\">,</span><br>                    color<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>metaPressed<br>                        <span class=\"token operator\">?</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>accentColor<br>                        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>metaSelect<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom In'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomIn<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Zoom Out'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>zoom_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>zoomOut<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token function\">FocusScope</span><span class=\"token punctuation\">(</span><br>                  canRequestFocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span><br>                    tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Reset the Scale and Offset'</span><span class=\"token punctuation\">,</span><br>                    icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    onPressed<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            body<span class=\"token punctuation\">:</span> <span class=\"token function\">Listener</span><span class=\"token punctuation\">(</span><br>              behavior<span class=\"token punctuation\">:</span> HitTestBehavior<span class=\"token punctuation\">.</span>opaque<span class=\"token punctuation\">,</span><br>              onPointerSignal<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>details <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                  GestureBinding<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>pointerSignalResolver<br>                      <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">is</span> PointerScrollEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">.</span>shiftPressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                        double zoomDelta <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">.</span>dy <span class=\"token operator\">/</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                        _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> _controller<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">+</span> zoomDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>                        _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span><br>                            _controller<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>scrollDelta<span class=\"token punctuation\">;</span><br>                      <span class=\"token punctuation\">}</span><br>                    <span class=\"token punctuation\">}</span><br>                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>                <span class=\"token punctuation\">}</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerMove<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">updateTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">addTouch</span><span class=\"token punctuation\">(</span><br>                  details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>localPosition<span class=\"token punctuation\">,</span><br>                  details<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerUp<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              onPointerCancel<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                _controller<span class=\"token punctuation\">.</span><span class=\"token function\">removeTouch</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>pointer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">RawKeyboardListener</span><span class=\"token punctuation\">(</span><br>                autofocus<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                focusNode<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">,</span><br>                onKey<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">rawKeyEvent</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>                    children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>                      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><br>                        Positioned<span class=\"token punctuation\">.</span><span class=\"token function\">fromRect</span><span class=\"token punctuation\">(</span><br>                          rect<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span><br>                            _controller<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span><br>                            _controller<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>                            decoration<span class=\"token punctuation\">:</span> <span class=\"token function\">BoxDecoration</span><span class=\"token punctuation\">(</span><br>                                border<span class=\"token punctuation\">:</span> Border<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><br>                              color<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span><span class=\"token function\">isObjectSelected</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><br>                                  <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>grey<br>                                  <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>transparent<span class=\"token punctuation\">,</span><br>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            child<span class=\"token punctuation\">:</span> <span class=\"token function\">GestureDetector</span><span class=\"token punctuation\">(</span><br>                              onTapDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span><span class=\"token function\">selectObject</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                              child<span class=\"token punctuation\">:</span> <span class=\"token function\">FittedBox</span><span class=\"token punctuation\">(</span><br>                                fit<span class=\"token punctuation\">:</span> BoxFit<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">,</span><br>                                child<span class=\"token punctuation\">:</span> SizedBox<span class=\"token punctuation\">.</span><span class=\"token function\">fromSize</span><span class=\"token punctuation\">(</span><br>                                  size<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span><br>                                  child<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span><br>                                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instance<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>marquee <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><br>                        Positioned<span class=\"token punctuation\">.</span><span class=\"token function\">fromRect</span><span class=\"token punctuation\">(</span><br>                          rect<span class=\"token punctuation\">:</span> instance<span class=\"token punctuation\">.</span>marquee<span class=\"token punctuation\">.</span>rect<br>                              <span class=\"token punctuation\">.</span><span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">,</span> instance<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>                            color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blueAccent<span class=\"token punctuation\">.</span><span class=\"token function\">withOpacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">extension</span> RectUtils <span class=\"token keyword\">on</span> Rect <span class=\"token punctuation\">{</span><br>  Rect <span class=\"token function\">adjusted</span><span class=\"token punctuation\">(</span>Offset offset<span class=\"token punctuation\">,</span> double scale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> left <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> top <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> width <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTWH</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now you can move any object on the canvas just by clicking and dragging. You can zoom with 2 fingers and pan with 2 or 3 fingers. If you hold down the shift key then you can use a marquee to select multiple and if you hold down the meta/command key then you can select multiple by tapping each.</p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you are on a device without a keyboard you can tap the new icons to turn on the keyboard key actions. When the object is selected there is a grey border.</p>\n<p>Now you can add any widget to the canvas and pan and zoom!</p>\n",
      "date_published": "2020-06-09T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/push-notifications-flutter-web/",
      "url": "https://rodydavis.com/posts/push-notifications-flutter-web/",
      "title": "How To Send Push Notifications on Flutter Web (FCM)",
      "content_html": "<p>If you are using Firebase then you are probably familiar with Firebase Cloud Messaging. The setup on Flutter web is very different than mobile and other plugins you are probably used to.</p>\n<img width=\"100%\" src=\"/img/firebase/banner.png\">\n<h2 id=\"setting-up\">Setting Up <a class=\"direct-link\" href=\"#setting-up\">#</a></h2>\n<p>Open your web/index.html and look for the following script. If you do not have one you can add it now in the <body> tag.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><br><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"serviceWorker\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/flutter_service_worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n<p>We need to modify it to support the FCM service worker. The important thing we need to do is comment out the flutter_service_worker.js so that we will not get 404 errors when registering the FCM service worker.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><br><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"serviceWorker\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// navigator.serviceWorker.register(\"/flutter_service_worker.js\");</span><br>    navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/firebase-messaging-sw.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre>\n<p>Now create a new file called firebase-messaging-sw.js in the web folder with the following contents:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">importScripts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.gstatic.com/firebasejs/7.5.0/firebase-app.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token function\">importScripts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.gstatic.com/firebasejs/7.5.0/firebase-messaging.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>firebase<span class=\"token punctuation\">.</span><span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>    apiKey<span class=\"token operator\">:</span> <span class=\"token string\">\"API_KEY\"</span><span class=\"token punctuation\">,</span><br>    authDomain<span class=\"token operator\">:</span> <span class=\"token string\">\"AUTH_DOMAIN\"</span><span class=\"token punctuation\">,</span><br>    databaseURL<span class=\"token operator\">:</span> <span class=\"token string\">\"DATABASE_URL\"</span><span class=\"token punctuation\">,</span><br>    projectId<span class=\"token operator\">:</span> <span class=\"token string\">\"PROJECT_ID\"</span><span class=\"token punctuation\">,</span><br>    storageBucket<span class=\"token operator\">:</span> <span class=\"token string\">\"STORAGE_BUCKET\"</span><span class=\"token punctuation\">,</span><br>    messagingSenderId<span class=\"token operator\">:</span> <span class=\"token string\">\"MESSAGING_SENDER_ID\"</span><span class=\"token punctuation\">,</span><br>    appId<span class=\"token operator\">:</span> <span class=\"token string\">\"APP_ID\"</span><span class=\"token punctuation\">,</span><br>    measurementId<span class=\"token operator\">:</span> <span class=\"token string\">\"MEASUREMENT_ID\"</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">const</span> messaging <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>messaging<span class=\"token punctuation\">.</span><span class=\"token function\">setBackgroundMessageHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">const</span> promiseChain <span class=\"token operator\">=</span> clients<br>        <span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>            type<span class=\"token operator\">:</span> <span class=\"token string\">\"window\"</span><span class=\"token punctuation\">,</span><br>            includeUncontrolled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowClients</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> windowClients<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">const</span> windowClient <span class=\"token operator\">=</span> windowClients<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>                windowClient<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> registration<span class=\"token punctuation\">.</span><span class=\"token function\">showNotification</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New Message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> promiseChain<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notificationclick'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notification received: '</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Make sure to replace the config keys with your firebase keys.</p>\n<h2 id=\"helper-methods\">Helper Methods <a class=\"direct-link\" href=\"#helper-methods\">#</a></h2>\n<p>Create a new dart file wherever you like named firebase_messaging.dart with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:firebase/firebase.dart'</span> <span class=\"token operator\">as</span> firebase<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">FBMessaging</span> <span class=\"token punctuation\">{</span><br>  FBMessaging<span class=\"token punctuation\">.</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">static</span> FBMessaging _instance <span class=\"token operator\">=</span> FBMessaging<span class=\"token punctuation\">.</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">static</span> FBMessaging <span class=\"token keyword\">get</span> instance <span class=\"token operator\">=</span><span class=\"token operator\">></span> _instance<span class=\"token punctuation\">;</span><br>  firebase<span class=\"token punctuation\">.</span>Messaging _mc<span class=\"token punctuation\">;</span><br>  String _token<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">final</span> _controller <span class=\"token operator\">=</span> StreamController<span class=\"token operator\">&lt;</span>Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token operator\">>></span><span class=\"token punctuation\">.</span><span class=\"token function\">broadcast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  Stream<span class=\"token operator\">&lt;</span>Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token operator\">>></span> <span class=\"token keyword\">get</span> stream <span class=\"token operator\">=</span><span class=\"token operator\">></span> _controller<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _controller<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    _mc <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">messaging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _mc<span class=\"token punctuation\">.</span><span class=\"token function\">usePublicVapidKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FCM_SERVER_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _mc<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      _controller<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Future <span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> _mc<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Future<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>bool force <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>force <span class=\"token operator\">||</span> _token <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">await</span> <span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _mc<span class=\"token punctuation\">.</span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> _token<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Create a button in the app that will be used to request permissions. While it is possible to request for permission when the app launches this is usually bad practice as the user is unlikely to accept and there is no trust built yet. You can request permissions with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">final</span> _messaging <span class=\"token operator\">=</span> FBMessaging<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">;</span><br>_messaging<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _messaging<span class=\"token punctuation\">.</span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Token: $_token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>You can listen to messages with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">final</span> _messaging <span class=\"token operator\">=</span> FBMessaging<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">;</span><br>_messaging<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'New Message: ${event}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"testing\">Testing <a class=\"direct-link\" href=\"#testing\">#</a></h2>\n<p>Now when you run your application and request permissions you will get a token back. With this token you can open the firebase console and sent a test message to the token.</p>\n<img width=\"100%\" src=\"/img/firebase/notification.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>Now you can send push notifications to Flutter apps! You still need to use conditional imports to support the mobile side as well but stay tuned for an example with that. Let me know your questions and any feedback you may have.</p>\n",
      "date_published": "2020-04-30T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/podcast-github-pages/",
      "url": "https://rodydavis.com/posts/podcast-github-pages/",
      "title": "How To Host Your Podcast For Free On Github Pages",
      "content_html": "<p>Do you have a story to tell and want to share it with the world but do not know where to start? Are you a developer looking to start a tech podcast? Are you looking to save money for hosting? Well this article is for you!</p>\n<blockquote>\n<p>TL;DR; You can fork this repo and customize it for your podcast!</p>\n</blockquote>\n<p><a href=\"https://github.com/rodydavis/podcast-player\">Github source</a></p>\n<img src=\"/img/podcast-github/gh-pages.jpeg\" width=\"100%\" />\n<p><a href=\"https://pages.github.com/\">Github Pages</a> allows you to host any website for free on Github. You can host any kind of file or content and will be distributed with Github CDN around the world. You can even setup your Podcast to release new content with <a href=\"https://github.com/features/actions\">Github Actions</a> for each new episode.</p>\n<h2 id=\"create-new-repo\">Create New Repo <a class=\"direct-link\" href=\"#create-new-repo\">#</a></h2>\n<p>If you  already familiar with Github you can skip this step.</p>\n<p><a href=\"https://help.github.com/en/enterprise/2.14/user/articles/creating-a-new-repository\">How to create a new Github repository.</a></p>\n<p>Login or Create a free account for <a href=\"https://github.com/\">Github</a> and follow the instructions for creating the repo.</p>\n<img src=\"/img/gifs/fast-typing.webp\" width=\"100%\">\n<h2 id=\"clone-the-repo\">Clone the Repo <a class=\"direct-link\" href=\"#clone-the-repo\">#</a></h2>\n<p>Now that you have the repo created on Github, download the project using Github Desktop.</p>\n<p><a href=\"https://help.github.com/en/desktop/contributing-to-projects/cloning-a-repository-from-github-to-github-desktop\">How to clone a repository from Github.</a></p>\n<p>After it finishes downloading you can open up the project in your favorite text editor. In this example we will be using VSCode.</p>\n<p><a href=\"https://code.visualstudio.com/\">Download Visual Studio Code</a></p>\n<h2 id=\"create-the-website\">Create the Website <a class=\"direct-link\" href=\"#create-the-website\">#</a></h2>\n<p>You can create the website with whatever tech stack you wish but in this example we will be using Flutter.</p>\n<p>You can skip this step if you do not want an online player.</p>\n<p><a href=\"https://flutter.dev/\">Learn about Flutter.</a></p>\n<p>Open up the project if you haven’t already with VSCode and open the terminal and type the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter create player</code></pre>\n<p>Once the process finishes then you can edit the application UI. Make sure you have Flutter installed.</p>\n<p><a href=\"https://flutter.dev/docs/get-started/install\">How to install Flutter.</a></p>\n<p>Edit the website files to the following:</p>\n<p><a href=\"https://github.com/rodydavis/podcast-player/tree/master/player\">Flutter podcast template.</a></p>\n<h2 id=\"setting-up-github-actions\">Setting up Github Actions <a class=\"direct-link\" href=\"#setting-up-github-actions\">#</a></h2>\n<p>Create a new Github Action that will release the new episode pushed to the master branch. If you chose not to have a podcast player and just want to host the files then you can add the audio files and the rss feed directly to the <code>gh-pages</code> or <code>master</code> branch and the files will be hosted instantly. Regardless make sure you have a file call <code>.nojekyll</code> so the web deployment will be much faster.</p>\n<h2 id=\"custom-domain\">Custom Domain <a class=\"direct-link\" href=\"#custom-domain\">#</a></h2>\n<p>If you want to have your podcast hosted with a custom domain you can easily do this with Github pages. Follow this guide to set up your custom domain:</p>\n<p><a href=\"https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site\">Custom domain on Github Pages.</a></p>\n<h2 id=\"releasing-new-content\">Releasing new Content <a class=\"direct-link\" href=\"#releasing-new-content\">#</a></h2>\n<p>When you have a new episode to release the steps are very simple. Make sure to export your audio file to mono and use mp3 format so it is smaller that 100mb otherwise you will need to set up Git LFS for the repo.</p>\n<p><a href=\"https://git-lfs.github.com/\">Setup Git LFS for Github repository.</a></p>\n<p>Put the new mp3 audio file in the “player/web/audio” folder. Now edit the RSS feed which is located at “player/web/feed.xml” and add the following:</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rss</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>googleplay</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.google.com/schemas/play-podcasts/1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>itunes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.itunes.com/dtds/podcast-1.0.dtd<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>atom</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2005/Atom<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>rawvoice</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.rawvoice.com/rawvoiceRssModule/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://purl.org/rss/1.0/modules/content/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>channel</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Creative Engineering<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">googleplay:</span>author</span><span class=\"token punctuation\">></span></span>Rody Davis, Norbert Kozsir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">googleplay:</span>author</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rawvoice:</span>rating</span><span class=\"token punctuation\">></span></span>TV-G<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rawvoice:</span>rating</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rawvoice:</span>location</span><span class=\"token punctuation\">></span></span>San Francisco, California<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rawvoice:</span>location</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">rawvoice:</span>frequency</span><span class=\"token punctuation\">></span></span>Weekly<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">rawvoice:</span>frequency</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>author</span><span class=\"token punctuation\">></span></span>Rody Davis, Norbert Kozsir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>author</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span>Rody Davis, Norbert Kozsir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>email</span><span class=\"token punctuation\">></span></span>rody.davis.jr@gmail.com<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>email</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>category</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Technology<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://rodydavis.github.io/podcast-player/img/icon.jpg<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Creative Engineering<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span><span class=\"token punctuation\">></span></span>https://rodydavis.github.io/podcast-player/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>link</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>image</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>owner</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>name</span><span class=\"token punctuation\">></span></span>Rody Davis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>name</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>email</span><span class=\"token punctuation\">></span></span>rody.davis.jr@gmail.com<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>email</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>owner</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>keywords</span><span class=\"token punctuation\">></span></span>flutter,dart,github,vr,ar,web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>keywords</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>copyright</span><span class=\"token punctuation\">></span></span>Rody Davis Productions 2020<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>copyright</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>description</span><span class=\"token punctuation\">></span></span>Exploring Flutter, VR, AR, Cross-Platform Projects<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>description</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">googleplay:</span>image</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://rodydavis.github.io/podcast-player/img/icon.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>language</span><span class=\"token punctuation\">></span></span>en-us<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>language</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span>no<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pubDate</span><span class=\"token punctuation\">></span></span>Mon, 13 Apr 2020 13:00:00 PDT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pubDate</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span><span class=\"token punctuation\">></span></span>https://rodydavis.github.io/podcast-player/feed.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>link</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>image</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://rodydavis.github.io/podcast-player/img/icon.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>author</span><span class=\"token punctuation\">></span></span>Rody Davis, Norbert Kozsir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>author</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span>Rody Davis, Norbert Kozsir<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Flutter Desktop/Web and VR<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pubDate</span><span class=\"token punctuation\">></span></span>Mon, 13 Apr 2020 13:00:00 GMT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pubDate</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enclosure</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://rodydavis.github.io/podcast-player/audio/01-create-eng.mp3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio/mpeg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">length</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>34216300<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>duration</span><span class=\"token punctuation\">></span></span>54:08<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>duration</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>guid</span> <span class=\"token attr-name\">isPermaLink</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>cepod01<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>guid</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span>no<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>description</span><span class=\"token punctuation\">></span></span><br>Norbert Kozsir - @norbertkozsir<br><br>https://twitter.com/norbertkozsir<br><br>https://github.com/norbert515<br><br><br>Rody Davis - @rodydavis<br><br>https://twitter.com/rodydavis<br><br>https://github.com/rodydavis<br><br>https://youtube.com/rodydavis<br><br>https://rodydavis.com<br><br>Our podcast player: <br><br>https://rodydavis.github.io/podcast-player/<br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>description</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>channel</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>rss</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>For every episode you just have to add a new item to the feed and change the info for the episode. I would suggest putting the new episodes at the bottom.</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>item</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>author</span><span class=\"token punctuation\">></span></span>COMMA\\_SEPERATED\\_LIST\\_OF\\_AUTHORS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>author</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span>COMMA\\_SEPERATED\\_LIST\\_OF\\_AUTHORS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>author</span><span class=\"token punctuation\">></span></span>      <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>PODCAST\\_EPISODE\\_TITLE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pubDate</span><span class=\"token punctuation\">></span></span>Mon, 13 Apr 2020 13:00:00 GMT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pubDate</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enclosure</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LINK\\_TO\\_AUDIO\\_FILE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio/mpeg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">length</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>34216300<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>duration</span><span class=\"token punctuation\">></span></span>54:08<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>duration</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>guid</span> <span class=\"token attr-name\">isPermaLink</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>cepod01<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>guid</span><span class=\"token punctuation\">></span></span>      <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span>no<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">itunes:</span>explicit</span><span class=\"token punctuation\">></span></span>        <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>description</span><span class=\"token punctuation\">></span></span>  <br>    Show Notes Here!         <br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>description</span><span class=\"token punctuation\">></span></span>      <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>item</span><span class=\"token punctuation\">></span></span></code></pre>\n<img src=\"/img/gifs/yes_yes_yes.gif\" width=\"100%\">\n<h2 id=\"publishing\">Publishing <a class=\"direct-link\" href=\"#publishing\">#</a></h2>\n<p>Once your Github Action is finished building you now have an RSS feed that you can use to submit to Apple Podcasts, Google Podcasts and Spotify for Podcasters.</p>\n<pre><code>https://GITHUB\\_USERNAME.github.io/GITHUB\\_REPO/feed.xml\n</code></pre>\n<p>You can also use this RSS Feed link to support any podcast player!</p>\n<img src=\"/img/gifs/thinking.gif\" width=\"100%\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>Hopefully you can see now how easy it is to host your podcast for free on Github Pages. You can find the final code for this example here:</p>\n<p><a href=\"https://github.com/rodydavis/podcast-player\">Final Project.</a></p>\n<h2 id=\"live-example\">Live Example <a class=\"direct-link\" href=\"#live-example\">#</a></h2>\n<p>My “Creative Engineering” podcast is hosted using this technique:</p>\n<ul>\n<li><a href=\"https://podcasts.apple.com/us/podcast/creative-engineering/id1507852833\">Apple Podcasts</a></li>\n<li><a href=\"https://podcasts.google.com/feed/aHR0cHM6Ly9yb2R5ZGF2aXMuZ2l0aHViLmlvL2NyZWF0aXZlX2VuZ2luZWVyaW5nL2ZlZWQueG1s?ved=2ahUKEwiw5anO0dLqAhU2lZ4KHR3FDtcQ4aUDegQIARAC&amp;hl=en-GB\">Google Podcasts</a></li>\n<li><a href=\"https://open.spotify.com/show/3UTiK34aDOOSHFpGQ0RglN\">Spotify Podcasts</a></li>\n<li><a href=\"https://music.amazon.com/podcasts/8884a5cb-a92a-4ba5-a3ef-906ac334386d/Creative-Engineering?ref=dm_wcp_pp_link_pr_s\">Amazon Music</a></li>\n</ul>\n",
      "date_published": "2020-03-26T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/deep-linking-flutter-web/",
      "url": "https://rodydavis.com/posts/deep-linking-flutter-web/",
      "title": "Deep Linking for Flutter Web",
      "content_html": "<p>In this article I will show you how to have proper URL navigation for your application. Open links to specific pages, protected routes and custom transitions.</p>\n<p>There is a online demo here:</p>\n<p><a href=\"https://rodydavis.github.io/flutter_deep_linking/\">https://rodydavis.github.io/flutter_deep_linking/</a></p>\n<p>Here is the source code:</p>\n<p><a href=\"https://github.com/rodydavis/flutter_deep_linking\">https://github.com/rodydavis/flutter_deep_linking</a></p>\n<h2 id=\"setup\">Setup <a class=\"direct-link\" href=\"#setup\">#</a></h2>\n<ul>\n<li>\n<p>Create a new flutter project called “flutter_deep_linking”</p>\n</li>\n<li>\n<p>Open that folder up in VSCode</p>\n</li>\n<li>\n<p>Update your “pubspec.yaml” with the following:</p>\n</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/0.png\">\n<h2 id=\"step-1\">Step 1 <a class=\"direct-link\" href=\"#step-1\">#</a></h2>\n<ul>\n<li>Create a file at “lib/ui/home/screen.dart” and add the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/1.png\">\n<ul>\n<li>Update your “lib/main.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/2.png\">\n<ul>\n<li>Run your application and you should see the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/3.png\">\n<h2 id=\"step-2\">Step 2 <a class=\"direct-link\" href=\"#step-2\">#</a></h2>\n<p>Now we need to grab the url the user enters into the address bar.</p>\n<ul>\n<li>\n<p>Create a folder at this location “lib/plugins/navigator”</p>\n</li>\n<li>\n<p>Create a file inside named: “web.dart” with the following:</p>\n</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/4.png\">\n<ul>\n<li>Create a file inside named: “unsupported.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/5.png\">\n<ul>\n<li>Create a file inside named: “navigator.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/6.png\">\n<ul>\n<li>Now go back to your “lib/main.dart” file and add the navigator:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/7.png\">\n<blockquote>\n<p>It’s important to import the navigator as shown as this will have the conditional import for web compiling.</p>\n</blockquote>\n<ul>\n<li>If you run the app now nothing should change.</li>\n</ul>\n<h2 id=\"step-3\">Step 3 <a class=\"direct-link\" href=\"#step-3\">#</a></h2>\n<p>Now let’s add the proper routing.</p>\n<ul>\n<li>Create a new file “lib/ui/router.dart” and add the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/8.png\">\n<ul>\n<li>Also update “lib/main.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/9.png\">\n<blockquote>\n<p>Notice how we removed the “home” field for MaterialApp. This is because the router will handle everything. By default we will go home on “/”</p>\n</blockquote>\n<h2 id=\"step-4\">Step 4 <a class=\"direct-link\" href=\"#step-4\">#</a></h2>\n<p>Now let’s add multiple screens to put this to the test! Add the following folders and files.</p>\n<ul>\n<li>Create a file “lib/ui/account/screen.dart” and add the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/10.png\">\n<ul>\n<li>Create a file “lib/ui/settings/screen.dart” and add the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/11.png\">\n<ul>\n<li>Create a file “lib/ui/about/screen.dart” and add the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/12.png\">\n<ul>\n<li>Add the following to “lib/ui/router.dart”:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/13.png\">\n<ul>\n<li>Now when you navigate to /about, /account and /settings you will go to the new pages!</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/14.png\">\n<h2 id=\"step-5\">Step 5 <a class=\"direct-link\" href=\"#step-5\">#</a></h2>\n<p>Now let’s tie into the browser navigation buttons! Update “lib/ui/home/screen.dart” with the following:</p>\n<img width=\"100%\" src=\"/img/deep-linking/15.png\">\n<ul>\n<li>Now when you run the application and click on the settings icon it will launch the new screen as expected. But if you click your browsers back button it will go back to the home screen!</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/16.png\">\n<img width=\"100%\" src=\"/img/deep-linking/17.png\">\n<h2 id=\"step-6\">Step 6 <a class=\"direct-link\" href=\"#step-6\">#</a></h2>\n<p>These urls are great but what if you want to pass data such as an ID that is not known ahead of time? No worries!</p>\n<ul>\n<li>Update “lib/ui/account/screen.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/18.png\">\n<ul>\n<li>Let’s update our “lib/ui/router.dart” with the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/19.png\">\n<ul>\n<li>Now when you run your application and navigate to “/account/40” you will see the following:</li>\n</ul>\n<img width=\"100%\" src=\"/img/deep-linking/20.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>Dynamic routes work great for Flutter web, you just need to know what to tweak! This package uses a forked version of fluro for some fixes I added but once the PRs is merged you can just use the regular package. Let me know what you think below and if there is a better way I am not seeing!</p>\n<p>Here is the final code: <a href=\"https://github.com/rodydavis/flutter_deep_linking\">https://github.com/rodydavis/flutter_deep_linking</a></p>\n",
      "date_published": "2020-03-10T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/display-html-in-flutter/",
      "url": "https://rodydavis.com/posts/display-html-in-flutter/",
      "title": "Displaying HTML in Flutter",
      "content_html": "<p>Sometimes you have content in HTML that needs to be displayed and interacted with in Flutter.</p>\n<p>Online Demo:<a href=\"https://rodydavis.github.io/easy_web_view/#/\">https://rodydavis.github.io/easy_web_view/#/</a></p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/4112/1*4vexucSoyjRip7TBQZhkog.png\">\n<p>For those impatient I created a package for you to get all the following functionally and more here: <a href=\"https://pub.dev/packages/easy_web_view\">https://pub.dev/packages/easy_web_view</a></p>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>Create a new flutter project named whatever you want.</p>\n<blockquote>\n<p>If you plan on showing HTML content on iOS/Android you will need to add the following to your pubspec.yaml</p>\n</blockquote>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">webview_flutter</span><span class=\"token punctuation\">:</span> ^0.3.15+1</code></pre>\n<h2 id=\"web\">Web <a class=\"direct-link\" href=\"#web\">#</a></h2>\n<p>Reference: <a href=\"https://github.com/rodydavis/easy_web_view/blob/master/lib/src/web.dart\">https://github.com/rodydavis/easy_web_view/blob/master/lib/src/web.dart</a></p>\n<p>To show html on Flutter web we need to use an HTMLElementView. This is a platform view that allows us to display native content.</p>\n<p>We first need to register the Element and add all the options we need. Here we are creating an iFrame element and setting the source based on if it is markdown, html or a url.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*NRDDwVIppMFu1MHpPNHYmA.png\">\n<p>To display valid HTML you can set the src field to the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">_src <span class=\"token operator\">=</span> <span class=\"token string\">\"data:text/html;charset=utf-8,\"</span> <span class=\"token operator\">+</span> Uri<span class=\"token punctuation\">.</span><span class=\"token function\">encodeComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTML_CONTENT_HERE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<blockquote>\n<p>For the package you can also pass markdown to the src and it will convert it for you.</p>\n</blockquote>\n<p>After you call the setup method it is now time to display your new platform view:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*4YtrCKZYr6e1bCBZ-aoLZg.png\">\n<p>You need to use the same viewType string as you registered for “registerViewFactory” method earlier.</p>\n<p>Finally you need to wrap it in a container or sized box with an explicit width and height!</p>\n<h2 id=\"mobile\">Mobile <a class=\"direct-link\" href=\"#mobile\">#</a></h2>\n<p>Reference: <a href=\"https://github.com/rodydavis/easy_web_view/blob/master/lib/src/mobile.dart\">https://github.com/rodydavis/easy_web_view/blob/master/lib/src/mobile.dart</a></p>\n<p>Mobile setup should be easier. Let’s add a method for updating the url that we will pass to the web view.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*6xLbxuNL69Xx6XioN56YWA.png\">\n<p>Create the controller:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">WebViewController _controller<span class=\"token punctuation\">;</span></code></pre>\n<p>And when ever the src changes call this method:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">_controller<span class=\"token punctuation\">.</span><span class=\"token function\">loadUrl</span><span class=\"token punctuation\">(</span><span class=\"token function\">_updateUrl</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">:</span> widget<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Finally lets show the html in the widget tree:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*uvsRUE_sReCOZhsXOLiLaQ.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>If you want to see a complete example and advanced use case view the source here: <a href=\"https://github.com/rodydavis/easy_web_view\">https://github.com/rodydavis/easy_web_view</a></p>\n<p>And if you just want to have it all done for you use this package: <a href=\"https://pub.dev/packages/easy_web_view\">https://pub.dev/packages/easy_web_view</a></p>\n<p>Feel free to make PRs if you have anything that could help make it better too (Or if you find bugs).</p>\n<p>When you show HTML this way you will find that you can interact, select text and work with it just like you would it it were a regular web page. If you are using the package you can also just pass embedded content or html elements too without needing a full html valid file (YouTube video for example).</p>\n",
      "date_published": "2020-03-09T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/flutter-cheat-sheet/",
      "url": "https://rodydavis.com/posts/flutter-cheat-sheet/",
      "title": "Flutter Cheat Sheet — Terminal",
      "content_html": "<p>Run Flutter web with SKIA</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter run -d web --release --dart-define<span class=\"token operator\">=</span>FLUTTER_WEB_USE_SKIA<span class=\"token operator\">=</span>true</code></pre>\n<ul>\n<li>Run Flutter web with Canvas Kit</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter run -d chrome --release --dart-define<span class=\"token operator\">=</span>FLUTTER_WEB_USE_EXPERIMENTAL_CANVAS_TEXT<span class=\"token operator\">=</span>true</code></pre>\n<ul>\n<li>Build your Flutter web app to Github Pages to the docs folder</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter build web <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">rm</span> -rf ./docs <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mkdir</span> ./docs <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cp</span> -a ./build/web/. ./docs/</code></pre>\n<ul>\n<li>Clean rebuild CocoaPods</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ios <span class=\"token operator\">&amp;&amp;</span> pod deintegrate <span class=\"token operator\">&amp;&amp;</span> pod cache clean —all <span class=\"token operator\">&amp;&amp;</span> pod <span class=\"token function\">install</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n<blockquote>\n<p>Sometimes with firebase you need to run: <code>pod update Firebase</code></p>\n</blockquote>\n<ul>\n<li>Create Dart package with Example</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter create -t plugin <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&amp;&amp;</span> flutter create -i swift -a kotlin --androidx example</code></pre>\n<ul>\n<li>Watch Build Files</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter packages pub run build_runner <span class=\"token function\">watch</span>  -—delete-conflicting-outputs</code></pre>\n<ul>\n<li>Generate Build Files</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter packages pub run build_runner build  -—delete-conflicting-outputs</code></pre>\n<ul>\n<li>Build Bug Report</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter run —bug-report</code></pre>\n<ul>\n<li>Flutter generate test coverage</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter <span class=\"token builtin class-name\">test</span> --coverage <span class=\"token operator\">&amp;&amp;</span> genhtml -o coverage coverage/lcov.info</code></pre>\n<ul>\n<li>Rebuild Flutter Cache</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">flutter pub pub cache repair</code></pre>\n<ul>\n<li>Conditional Export/Import</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token string\">'unsupported.dart'</span><br><br><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dart.library.html<span class=\"token punctuation\">)</span> <span class=\"token string\">'web.dart'</span><br><br><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dart.library.io<span class=\"token punctuation\">)</span> <span class=\"token string\">'mobile.dart'</span><span class=\"token punctuation\">;</span></code></pre>\n<ul>\n<li>Kill Dart Running</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">killall</span> -9 dart</code></pre>\n",
      "date_published": "2020-03-04T16:00:00-08:00"
    },{
      "id": "https://rodydavis.com/posts/host-flutter-rest-api/",
      "url": "https://rodydavis.com/posts/host-flutter-rest-api/",
      "title": "Host your Flutter Project as a REST API",
      "content_html": "<p>After you build your flutter project you may want to reuse the models and business logic from your lib folder. I will show you how to go about setting up the project to have iOS, Android, Web, Windows, MacOS, Linux and a REST API interface with one project. The REST API can also be deploy to Google Cloud Run for Dart everywhere.</p>\n<img width=\"100%\" src=\"/img/gifs/mind_blown.gif\">\n<blockquote>\n<p>One Codebase for Client and Sever.</p>\n</blockquote>\n<p>This will allow you to expose your Dart models as a REST API and run your business logic from your lib folder while the application runs the models as they are. <a href=\"https://github.com/rodydavis/shared_dart\">Here</a> is the final project.</p>\n<h2 id=\"setting-up\">Setting Up <a class=\"direct-link\" href=\"#setting-up\">#</a></h2>\n<p>As with any Flutter project I am going to assume that you already have <a href=\"https://flutter.dev/\">Flutter</a> installed on your machine and that you can create a project. This is a intermediate level difficulty so read on if you are up to the challenge. You will also need to know the basics of <a href=\"https://www.docker.com/\">Docker</a>.</p>\n<h2 id=\"why-one-project%3F\">Why one project? <a class=\"direct-link\" href=\"#why-one-project%3F\">#</a></h2>\n<p>It may not be obvious but when building complex applications you will at some point have a server and an application that calls that server. <a href=\"https://firebase.google.com/\">Firebase</a> is an excellent option for doing this and I use it in almost all my projects. <a href=\"https://firebase.google.com/products/functions/\">Firebase Functions</a> are really powerful but you are limited by Javascript or Typescript. What if you could use the same packages that you are using in the Flutter project, or better yet what if they both used the same?</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*1xVIzjzgJnmuWTJoaG3kAQ.gif\">\n<p>When you have a server project and a client project that communicate over a rest api or client sdk like Firebase then you will run into the problem that the server has models of objects stored and the client has models of the objects that are stored. This can lead to a serious mismatch when it changed without you knowing. GraphQL helps a lot with this since you define the model that you recieve. This approach allows your business logic to be always up to date for both the client and server.</p>\n<h2 id=\"client-setup\">Client Setup <a class=\"direct-link\" href=\"#client-setup\">#</a></h2>\n<p>The first step is to just build your application. The only difference that we will make is keeping the UI and business logic separate. When starting out with Flutter it can be very easy to throw all the logic into the screen and calling setState when the data changes. Even the application when creating a new Flutter project does this. That's why <a href=\"https://flutter.dev/docs/development/data-and-backend/state-mgmt/options\">choosing a state management solution </a>is so important.</p>\n<iframe src=\"https://medium.com/media/64311732193c2dd39b2cdbc42965b538\" frameborder=0></iframe>\n<p>To make things clean and concise we will make 2 folders in our lib folder.</p>\n<ul>\n<li>\n<p>ui for all Flutter Widgets and Screens</p>\n</li>\n<li>\n<p>src for all business logic, classes, models and utility functions</p>\n</li>\n</ul>\n<p>This will leave us with main.dart being only the entry point into our client application.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'plugins/desktop/desktop.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'ui/home/screen.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">light</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      darkTheme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">HomeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Let’s Start by making a tab bar for the 2 screens. Create a file in the folder ui/home/screen.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../counter/screen.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../todo/screen.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _HomeScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomeScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomeScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomeScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  int _currentIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br><span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">IndexedStack</span><span class=\"token punctuation\">(</span><br>        index<span class=\"token punctuation\">:</span> _currentIndex<span class=\"token punctuation\">,</span><br>        children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>          <span class=\"token function\">CounterScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token function\">TodosScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      bottomNavigationBar<span class=\"token punctuation\">:</span> <span class=\"token function\">BottomNavigationBar</span><span class=\"token punctuation\">(</span><br>        currentIndex<span class=\"token punctuation\">:</span> _currentIndex<span class=\"token punctuation\">,</span><br>        onTap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span><br>            <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              _currentIndex <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>        type<span class=\"token punctuation\">:</span> BottomNavigationBarType<span class=\"token punctuation\">.</span>fixed<span class=\"token punctuation\">,</span><br>        items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><br>          <span class=\"token function\">BottomNavigationBarItem</span><span class=\"token punctuation\">(</span><br>            icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Counter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token function\">BottomNavigationBarItem</span><span class=\"token punctuation\">(</span><br>            icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Todos'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This is just a basic screen and should look very normal.</p>\n<h3 id=\"counter-example\">Counter Example <a class=\"direct-link\" href=\"#counter-example\">#</a></h3>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2336/1*qFZepZBtk0RhEojjGsI85g.png\">\n<p>Now create a file ui/counter/screen.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shared_dart/src/models/counter.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _CounterScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_CounterScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_CounterScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>CounterScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  CounterModel _counterModel <span class=\"token operator\">=</span> <span class=\"token function\">CounterModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">_incrementCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// This call to setState tells the Flutter framework that something has</span><br>      <span class=\"token comment\">// changed in this State, which causes it to rerun the build method below</span><br>      <span class=\"token comment\">// so that the display can reflect the updated values. If we changed</span><br>      <span class=\"token comment\">// _counter without calling setState(), then the build method would not be</span><br>      <span class=\"token comment\">// called again, and so nothing would appear to happen.</span><br>      _counterModel<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// This method is rerun every time setState is called, for instance as done</span><br>    <span class=\"token comment\">// by the _incrementCounter method above.</span><br>    <span class=\"token comment\">//</span><br>    <span class=\"token comment\">// The Flutter framework has been optimized to make rerunning build methods</span><br>    <span class=\"token comment\">// fast, so that you can just rebuild anything that needs updating rather</span><br>    <span class=\"token comment\">// than having to individually change instances of widgets.</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Here we take the value from the MyCounterPage object that was created by</span><br>        <span class=\"token comment\">// the App.build method, and use it to set our appbar title.</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Counter Screen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Center is a layout widget. It takes a single child and positions it</span><br>        <span class=\"token comment\">// in the middle of the parent.</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><br>          <span class=\"token comment\">// Column is also a layout widget. It takes a list of children and</span><br>          <span class=\"token comment\">// arranges them vertically. By default, it sizes itself to fit its</span><br>          <span class=\"token comment\">// children horizontally, and tries to be as tall as its parent.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Invoke \"debug painting\" (press \"p\" in the console, choose the</span><br>          <span class=\"token comment\">// \"Toggle Debug Paint\" action from the Flutter Inspector in Android</span><br>          <span class=\"token comment\">// Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)</span><br>          <span class=\"token comment\">// to see the wireframe for each widget.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Column has various properties to control how it sizes itself and</span><br>          <span class=\"token comment\">// how it positions its children. Here we use mainAxisAlignment to</span><br>          <span class=\"token comment\">// center the children vertically; the main axis here is the vertical</span><br>          <span class=\"token comment\">// axis because Columns are vertical (the cross axis would be</span><br>          <span class=\"token comment\">// horizontal).</span><br>          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'You have pushed the button this many times:'</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'${_counterModel.count}'</span><span class=\"token punctuation\">,</span><br>              style<span class=\"token punctuation\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textTheme<span class=\"token punctuation\">.</span>display1<span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      floatingActionButton<span class=\"token punctuation\">:</span> <span class=\"token function\">FloatingActionButton</span><span class=\"token punctuation\">(</span><br>        onPressed<span class=\"token punctuation\">:</span> _incrementCounter<span class=\"token punctuation\">,</span><br>        tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Increment'</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// This trailing comma makes auto-formatting nicer for build methods.</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This is the default counter app you get when you create a Flutter application but with one change, it uses <code>CounterModel</code> to hold the logic.</p>\n<p>Create the counter model at src/models/counter.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterModel</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">CounterModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  int _count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>  int <span class=\"token keyword\">get</span> count <span class=\"token operator\">=</span><span class=\"token operator\">></span> _count<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>int val<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _count <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>As you can see it is really easy to expose only what we want to while still having complete flexibility. You could use provider here if you choose, or even bloc and/or streams.</p>\n<h3 id=\"todo-example\">Todo Example <a class=\"direct-link\" href=\"#todo-example\">#</a></h3>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2336/1*47x4TDkyWCo8-qMCfYaeng.png\">\n<p>Lets create a file at ui/todos/screen.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/classes/todo.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../src/models/todos.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">TodosScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _TodosScreenState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_TodosScreenState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_TodosScreenState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>TodosScreen<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> _model <span class=\"token operator\">=</span> <span class=\"token function\">TodosModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  List<span class=\"token operator\">&lt;</span>ToDo<span class=\"token operator\">></span> _todos<span class=\"token punctuation\">;</span><br><br><span class=\"token metadata symbol\">@override</span><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    _model<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span><br>        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          _todos <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Todos Screen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Builder</span><span class=\"token punctuation\">(</span><br>        builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_todos <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token keyword\">return</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>              itemCount<span class=\"token punctuation\">:</span> _todos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span><br>              itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>                <span class=\"token keyword\">final</span> _item <span class=\"token operator\">=</span> _todos<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>                <span class=\"token keyword\">return</span> <span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span><br>                  title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  subtitle<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_item<span class=\"token punctuation\">.</span>completed <span class=\"token operator\">?</span> <span class=\"token string\">'Completed'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'Pending'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>          <span class=\"token keyword\">return</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>            child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>You will see that we have the logic in TodosModel and uses the class ToDo for toJson and fromJson.</p>\n<p>Create a file at the location src/classes/todo.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// To parse this JSON data, do</span><br><span class=\"token comment\">//</span><br><span class=\"token comment\">//     final toDo = toDoFromJson(jsonString);</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:convert'</span><span class=\"token punctuation\">;</span><br><br>List<span class=\"token operator\">&lt;</span>ToDo<span class=\"token operator\">></span> <span class=\"token function\">toDoFromJson</span><span class=\"token punctuation\">(</span>String str<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> List<span class=\"token operator\">&lt;</span>ToDo<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> ToDo<span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>String <span class=\"token function\">toDoToJson</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>ToDo<span class=\"token operator\">></span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> json<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span><span class=\"token keyword\">dynamic</span><span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">ToDo</span> <span class=\"token punctuation\">{</span><br>    int userId<span class=\"token punctuation\">;</span><br>    int id<span class=\"token punctuation\">;</span><br>    String title<span class=\"token punctuation\">;</span><br>    bool completed<span class=\"token punctuation\">;</span><br><br><span class=\"token function\">ToDo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">,</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span><br>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>completed<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">factory</span> ToDo<span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token operator\">></span> json<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">ToDo</span><span class=\"token punctuation\">(</span><br>        userId<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">[</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        id<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        title<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">[</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        completed<span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">[</span><span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token operator\">></span> <span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">:</span> userId<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> title<span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">:</span> completed<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>and create the model src/models/todo.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:convert'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:http/http.dart'</span> <span class=\"token operator\">as</span> http<span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shared_dart/src/classes/todo.dart'</span> <span class=\"token operator\">as</span> t<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">TodosModel</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> kTodosUrl <span class=\"token operator\">=</span> <span class=\"token string\">'[https://jsonplaceholder.typicode.com/todos'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>jsonplaceholder<span class=\"token punctuation\">.</span>typicode<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>todos'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>Future<span class=\"token operator\">&lt;</span>List<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">.</span>ToDo<span class=\"token operator\">>></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> _response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>kTodosUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_response <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">final</span> _todos <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">toDoFromJson</span><span class=\"token punctuation\">(</span>_response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_todos <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> _todos<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>Future<span class=\"token operator\">&lt;</span>t<span class=\"token punctuation\">.</span>ToDo<span class=\"token operator\">></span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>int id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> _response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> http<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$kTodosUrl/$id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_response <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">final</span> _todo <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>ToDo<span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>_response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_todo <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> _todo<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Here we just get dummy data from a url that emits json and convert them to our classes. This is an example I want to show with networking. There is only one place that fetches the data.</p>\n<h3 id=\"run-the-project-(web)\">Run the Project (Web) <a class=\"direct-link\" href=\"#run-the-project-(web)\">#</a></h3>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5248/1*et2kG6_skauXJ6rogFy_ZQ.png\">\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5248/1*za20ru3G18DUFob07Cjv2A.png\">\n<p>As you can see when you run your project on chrome you will get the same application that you got on mobile. Even the networking is working in the web. You can call the model and retrieve the list just like you would expect.</p>\n<h2 id=\"server-setup\">Server Setup <a class=\"direct-link\" href=\"#server-setup\">#</a></h2>\n<blockquote>\n<p>Now time for the magic..</p>\n</blockquote>\n<p>In the root of the project folder create a file Dockerfile and add the following:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Use Google's official Dart image.</span><br><span class=\"token comment\"># [https://hub.docker.com/r/google/dart-runtime/](https://hub.docker.com/r/google/dart-runtime/)</span><br>FROM google/dart<span class=\"token punctuation\">-</span>runtime</code></pre>\n<p>Create another file at the root called service.yaml and add the following:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> serving.knative.dev/v1<br>    <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service<br>    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span><br>      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> PROJECT_NAME<br>      <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default<br>    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span><br>      <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span><br>        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span><br>          <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span><br>            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> docker.io/YOUR_DOCKER_NAME/PROJECT_NAME<br>              <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span><br>                <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TARGET<br>                  <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"PROJECT_NAME v1\"</span></code></pre>\n<p>Replace PROJECT_NAME with your project name, mine is shared-dart for this example.</p>\n<p>You will also need to replace YOUR_DOCKER_NAME with your docker username so the container can be deployed correctly.</p>\n<p>Update your pubspec.yaml with the following:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> shared_dart<br><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> A new Flutter project.<br><span class=\"token key atrule\">publish_to</span><span class=\"token punctuation\">:</span> none<br><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 1.0.0+1<br><br><span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\">=2.1.0 &lt;3.0.0\"</span><br><br><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br>  <span class=\"token key atrule\">shelf</span><span class=\"token punctuation\">:</span> ^0.7.3<br>  <span class=\"token key atrule\">cupertino_icons</span><span class=\"token punctuation\">:</span> ^0.1.2<br>  <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> ^0.12.0+2<br><br><span class=\"token key atrule\">dev_dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter_test</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">uses-material-design</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre>\n<p>The important package here is shelf as it allows us to run a http server with dart.</p>\n<p>Create a folder in the root of the project called bin then add a file server.dart and replace it with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:io'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/shelf.dart'</span> <span class=\"token operator\">as</span> shelf<span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/shelf_io.dart'</span> <span class=\"token operator\">as</span> io<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'src/routing.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> handler <span class=\"token operator\">=</span> <span class=\"token keyword\">const</span> shelf<span class=\"token punctuation\">.</span><span class=\"token function\">Pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">addMiddleware</span><span class=\"token punctuation\">(</span>shelf<span class=\"token punctuation\">.</span><span class=\"token function\">logRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>RouteUtils<span class=\"token punctuation\">.</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">final</span> port <span class=\"token operator\">=</span> int<span class=\"token punctuation\">.</span><span class=\"token function\">tryParse</span><span class=\"token punctuation\">(</span>Platform<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">[</span><span class=\"token string\">'PORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">'8080'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> address <span class=\"token operator\">=</span> InternetAddress<span class=\"token punctuation\">.</span>anyIPv4<span class=\"token punctuation\">;</span><br><br>io<span class=\"token punctuation\">.</span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    server<span class=\"token punctuation\">.</span>autoCompress <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Serving at [http://${server.address.host}:${server.port}'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>$<span class=\"token punctuation\">{</span>server<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>server<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">}</span>'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will tell the container what port to listen for and how to handle the requests.</p>\n<p>Create a folder src in the bin folder and add a file routing.dart and replace the contents with the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/shelf.dart'</span> <span class=\"token operator\">as</span> shelf<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'controllers/index.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'result.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">RouteUtils</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">static</span> FutureOr<span class=\"token operator\">&lt;</span>shelf<span class=\"token punctuation\">.</span>Response<span class=\"token operator\">></span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>shelf<span class=\"token punctuation\">.</span>Request request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> component <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>pathSegments<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> handler <span class=\"token operator\">=</span> <span class=\"token function\">_handlers</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>component<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>handler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> shelf<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span><span class=\"token function\">notFound</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> handler<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">static</span> Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> FutureOr<span class=\"token operator\">&lt;</span>shelf<span class=\"token punctuation\">.</span>Response<span class=\"token operator\">>></span> <span class=\"token function\">_handlers</span><span class=\"token punctuation\">(</span><br>      shelf<span class=\"token punctuation\">.</span>Request request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">'info'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">ServerResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Info'</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'v1.0.0'</span><span class=\"token punctuation\">,</span><br>        <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'counter'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">CounterController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">'todos'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">TodoController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>There is still nothing imported from our main project but you will start to see some similarities. Here we specify controllers for todos and counter url paths.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token string\">'counter'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">CounterController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token string\">'todos'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">TodoController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre>\n<p>that means any url with the following:<a href=\"https://mydomain.com/todos\">https://mydomain.com/todos</a> , <a href=\"https://mydomain.com/todos\">https://mydomain.com/todos</a>/1</p>\n<p>will get routed to the TodoController to handle the request.</p>\n<blockquote>\n<p>This is also the first time I found out about FutureOr. It allows you to return a sync or async function.</p>\n</blockquote>\n<p>And important part about build a REST API is having a consistent response body, so here we can create a wrapper that adds fields we always want to return, like the status of the call, a message and the body.</p>\n<p>Create a file at src/result.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:convert'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/shelf.dart'</span> <span class=\"token operator\">as</span> shelf<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">ServerResponse</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">final</span> String message<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> <span class=\"token keyword\">dynamic</span> body<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">final</span> StatusType type<span class=\"token punctuation\">;</span><br><br><span class=\"token function\">ServerResponse</span><span class=\"token punctuation\">(</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> StatusType<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">,</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>Map<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token operator\">></span> <span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'StatusType.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">,</span><br>      <span class=\"token string\">\"body\"</span><span class=\"token punctuation\">:</span> body <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>String <span class=\"token function\">toJsonString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>shelf<span class=\"token punctuation\">.</span>Response <span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> shelf<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><br>      <span class=\"token function\">toJsonString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">enum</span> StatusType <span class=\"token punctuation\">{</span> success<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResponseImpl</span> <span class=\"token punctuation\">{</span><br>  Future<span class=\"token operator\">&lt;</span>shelf<span class=\"token punctuation\">.</span>Response<span class=\"token operator\">></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>shelf<span class=\"token punctuation\">.</span>Request request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will always return json and the fields that we want to show. You could also include your paging meta data here.</p>\n<p>Create a file in at the location src/controllers/counter.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shared_dart/src/models/counter.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/shelf.dart'</span> <span class=\"token operator\">as</span> shelf<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../result.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">CounterController</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ResponseImpl</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token keyword\">const</span> <span class=\"token function\">CounterController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token metadata symbol\">@override</span><br>  Future<span class=\"token operator\">&lt;</span>shelf<span class=\"token punctuation\">.</span>Response<span class=\"token operator\">></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>shelf<span class=\"token punctuation\">.</span>Request request<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> _model <span class=\"token operator\">=</span> <span class=\"token function\">CounterModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> _params <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>queryParameters<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_params <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">final</span> _val <span class=\"token operator\">=</span> int<span class=\"token punctuation\">.</span><span class=\"token function\">tryParse</span><span class=\"token punctuation\">(</span>_params<span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      _model<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      _model<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">ServerResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Info'</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token string\">\"counter\"</span><span class=\"token punctuation\">:</span> _model<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>You will see the import to the lib folder of the root project. Since it shares the pubspec.yaml all the packages can be shared. You can import the CounterModel that we created earlier.</p>\n<p>Create a file in at the location src/controllers/todos.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shared_dart/src/models/todos.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/src/request.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:shelf/src/response.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../result.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoController</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ResponseImpl</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Future<span class=\"token operator\">&lt;</span>Response<span class=\"token operator\">></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>Request request<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> _model <span class=\"token operator\">=</span> <span class=\"token function\">TodosModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>pathSegments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">final</span> _id <span class=\"token operator\">=</span> int<span class=\"token punctuation\">.</span><span class=\"token function\">tryParse</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>pathSegments<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">final</span> _todo <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _model<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">ServerResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Todo Item'</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> _todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">final</span> _todos <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _model<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">ServerResponse</span><span class=\"token punctuation\">(</span><br>      <span class=\"token string\">'List Todos'</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> _todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Just like before we are importing the TodosModel model from the lib folder.</p>\n<p>For convenience add a file at the location src/controllers/index.dart and add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">export</span> <span class=\"token string\">'counter.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">export</span> <span class=\"token string\">'todo.dart'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>This will make it easier to import all the controllers.</p>\n<h2 id=\"run-the-project-(server)\">Run the Project (Server) <a class=\"direct-link\" href=\"#run-the-project-(server)\">#</a></h2>\n<p>If you are using <a href=\"https://code.visualstudio.com/\">VSCode</a> then you will need to update your launch.json with the following:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Use IntelliSense to learn about possible attributes.</span><br>    <span class=\"token comment\">// Hover to view descriptions of existing attributes.</span><br>    <span class=\"token comment\">// For more information, visit: [https://go.microsoft.com/fwlink/?linkid=830387](https://go.microsoft.com/fwlink/?linkid=830387)</span><br>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><br>        <span class=\"token punctuation\">{</span><br>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Client\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dart\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lib/main.dart\"</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <br>          <span class=\"token punctuation\">{</span><br>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Server\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dart\"</span><span class=\"token punctuation\">,</span><br>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bin/server.dart\"</span><br>        <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">]</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Now when you hit run with Server selected you will see the output:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*akfcrkLuxit4vZdtHJty_Q.png\">\n<p>You can navigate to this in a browser but you can also work with this in <a href=\"https://www.getpostman.com/\">Postman</a>.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/4796/1*zJR2ZNZfCmvLg3y5wByLNA.png\">\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/4788/1*Z2vnHjHEfYe8yWajGWVLOw.png\">\n<p>Just by adding to the url todos and todos/1 it will return different responses.</p>\n<p>For the counter model we can use query parameters too!</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/4768/1*YMwQEOoaCjngYpidKBbADg.png\">\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/4760/1*vPYs9780bcVrlIPBMjF4eQ.png\">\n<p>Just by adding ?count=22 it will update the model with the input.</p>\n<blockquote>\n<p>Keep in mind this is running your Dart code from you lib folder in your Flutter project without needing the Flutter widgets!</p>\n</blockquote>\n<p>As a side benefit we can also run this project on Desktop. Check out the final project for the desktop folders needed from <a href=\"https://github.com/google/flutter-desktop-embedding\">Flutter Desktop Embedding</a>.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/3648/1*Mk_6Rlq2qMbpk79OPo_QBw.png\">\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/3648/1*hWirIWGRQjN8hVvUZsB2Nw.png\">\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>Now if you wanted to deploy the container to Cloud Run you could with the following command:</p>\n<p>gcloud builds submit — tag <a href=\"http://gcr.io/YOUR_GOOGLE_PROJECT_ID/PROJECT_NAME\">gcr.io/YOUR_GOOGLE_PROJECT_ID/PROJECT_NAME</a> .</p>\n<p>Replace PROJECT_NAME with your project name, mine is shared-dart for this example.</p>\n<p>You will also need to replace YOUR_GOOGLE_PROJECT_ID with your Google Cloud Project ID. You can create one <a href=\"https://cloud.google.com/cloud-build/docs/quickstart-docker\">here</a>.</p>\n<p>Again the final project source code is <a href=\"https://github.com/rodydavis/shared_dart\">here</a>. Let me know your thoughts!</p>\n",
      "date_published": "2019-10-17T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/fastlane-and-flutter/",
      "url": "https://rodydavis.com/posts/fastlane-and-flutter/",
      "title": "Using Fastlane in Flutter and CI",
      "content_html": "<p>Prerequisites:</p>\n<ul>\n<li>\n<p>Understand what <a href=\"https://fastlane.tools/\">Fastlane</a> is and how it works</p>\n</li>\n<li>\n<p>Project builds correctly following these <a href=\"https://flutter.dev/docs/deployment/cd\">docs</a></p>\n</li>\n<li>\n<p>Android app setup in <a href=\"https://developer.android.com/distribute/console\">Google Play Console</a></p>\n</li>\n<li>\n<p>iOS app setup in <a href=\"https://appstoreconnect.apple.com/\">AppStore Connect</a></p>\n</li>\n<li>\n<p><a href=\"https://flutter.dev/docs/get-started/install\">Flutter is installed</a> and your project is created</p>\n</li>\n</ul>\n<ol>\n<li>\n<p>Open your Flutter project</p>\n</li>\n<li>\n<p>Run: cd ios</p>\n</li>\n<li>\n<p>Run: fastlane init and follow the prompts</p>\n</li>\n<li>\n<p>Replace the Fastfile contents with this:</p>\n</li>\n</ol>\n<iframe src=\"https://medium.com/media/fbfeb5ff49f489283bb93b88172e4a44\" frameborder=0></iframe>\n<ol start=\"5\">\n<li>\n<p>Run: cd .. &amp;&amp; cd android</p>\n</li>\n<li>\n<p>Run: fastlane init and follow the prompts</p>\n</li>\n<li>\n<p>Replace the Fastfile contents with this:</p>\n</li>\n</ol>\n<iframe src=\"https://medium.com/media/ef171e4a2ba0d48a77bcb266754d2886\" frameborder=0></iframe>\n<ol start=\"8\">\n<li>\n<p>Run: fastlane add_plugin versioning_android and enter your password if needed</p>\n</li>\n<li>\n<p>Run: cd ..</p>\n</li>\n</ol>\n<p>Now you are ready to launch your app to beta!</p>\n<p>For ios run: cd ios &amp;&amp; fastlane beta</p>\n<p>For android run: cd android &amp;&amp; fastlane beta</p>\n<p>Stay tuned for an article soon where we use these fastlane sub folders for automating the releases on <a href=\"https://github.com/features/actions\">Github Actions</a> CI</p>\n",
      "date_published": "2019-10-15T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/native-cross-platform-flutter/",
      "url": "https://rodydavis.com/posts/native-cross-platform-flutter/",
      "title": "How to build a native cross platform project with Flutter",
      "content_html": "<p>Import dart:html and dart:io in the same project!</p>\n<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/flutter_x/tree/finish\">here</a>.</p>\n<iframe class=\"demo\" src=\"https://dartpad.dev/embed-flutter.html?id=09b230b972b9b5575a63345006fd1833&split=80&theme=dark&null_safety=false&split=50&ga_id=flutter-multi-touch-canvas&run=true\"></iframe>\n<p>Up to now you have been able to create projects with Flutter that run on iOS/Android, Web and Desktop but only sharing pure dart plugins. Flutter launched Flutter for web at Google I/O and was a temporary fork that required you to change imports from import 'package:flutter/material.dart'; to import 'package:flutter_web/material.dart';. As you can image this was really difficult for a code base as you had to create a fork and change the imports. This also meant that you could not import any package that needed on a path or depended on flutter. The time as come and the merge is complete. Now you no longer need to change the imports!</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*epSHkw0msNuaisyHy9yYAA.gif\">\n<p>You can use any plugin now, have a debugger, create new flutter projects with the web folder added, web plugins, and so much more..</p>\n<h2 id=\"disclaimer\">Disclaimer <a class=\"direct-link\" href=\"#disclaimer\">#</a></h2>\n<p>You will need to be on the latest flutter for this to work.</p>\n<p><a href=\"https://flutter.io/get-started/install/\">Download Flutter</a></p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*1PVcOkDgx2p_G3Bou3IFsg.jpeg\">\n<p>If you are pretty new to Flutter you can check out <a href=\"https://flutter.io/get-started/codelab/\">this useful guide</a> on how to create a new project step by step.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*d6qN8hoGMwldMtIsQYIqrg.jpeg\">\n<p>Create a new project named flutter_x and it should look like this:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2628/1*xe6ubLj5psVH4JQd-VqSAQ.png\">\n<p>You can also down the starter project <a href=\"https://github.com/rodydavis/flutter_x/tree/starter\">here</a>.</p>\n<p>Your code should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// This widget is the root of your application.</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// This is the theme of your application.</span><br>        <span class=\"token comment\">//</span><br>        <span class=\"token comment\">// Try running your application with \"flutter run\". You'll see the</span><br>        <span class=\"token comment\">// application has a blue toolbar. Then, without quitting the app, try</span><br>        <span class=\"token comment\">// changing the primarySwatch below to Colors.green and then invoke</span><br>        <span class=\"token comment\">// \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",</span><br>        <span class=\"token comment\">// or simply save your changes to \"hot reload\" in a Flutter IDE).</span><br>        <span class=\"token comment\">// Notice that the counter didn't reset back to zero; the application</span><br>        <span class=\"token comment\">// is not restarted.</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo Home Page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// This widget is the home page of your application. It is stateful, meaning</span><br>  <span class=\"token comment\">// that it has a State object (defined below) that contains fields that affect</span><br>  <span class=\"token comment\">// how it looks.</span><br><br>  <span class=\"token comment\">// This class is the configuration for the state. It holds the values (in this</span><br>  <span class=\"token comment\">// case the title) provided by the parent (in this case the App widget) and</span><br>  <span class=\"token comment\">// used by the build method of the State. Fields in a Widget subclass are</span><br>  <span class=\"token comment\">// always marked \"final\".</span><br><br>  <span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  int _counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_incrementCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// This call to setState tells the Flutter framework that something has</span><br>      <span class=\"token comment\">// changed in this State, which causes it to rerun the build method below</span><br>      <span class=\"token comment\">// so that the display can reflect the updated values. If we changed</span><br>      <span class=\"token comment\">// _counter without calling setState(), then the build method would not be</span><br>      <span class=\"token comment\">// called again, and so nothing would appear to happen.</span><br>      _counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// This method is rerun every time setState is called, for instance as done</span><br>    <span class=\"token comment\">// by the _incrementCounter method above.</span><br>    <span class=\"token comment\">//</span><br>    <span class=\"token comment\">// The Flutter framework has been optimized to make rerunning build methods</span><br>    <span class=\"token comment\">// fast, so that you can just rebuild anything that needs updating rather</span><br>    <span class=\"token comment\">// than having to individually change instances of widgets.</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Here we take the value from the MyHomePage object that was created by</span><br>        <span class=\"token comment\">// the App.build method, and use it to set our appbar title.</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Center is a layout widget. It takes a single child and positions it</span><br>        <span class=\"token comment\">// in the middle of the parent.</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><br>          <span class=\"token comment\">// Column is also a layout widget. It takes a list of children and</span><br>          <span class=\"token comment\">// arranges them vertically. By default, it sizes itself to fit its</span><br>          <span class=\"token comment\">// children horizontally, and tries to be as tall as its parent.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Invoke \"debug painting\" (press \"p\" in the console, choose the</span><br>          <span class=\"token comment\">// \"Toggle Debug Paint\" action from the Flutter Inspector in Android</span><br>          <span class=\"token comment\">// Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)</span><br>          <span class=\"token comment\">// to see the wireframe for each widget.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Column has various properties to control how it sizes itself and</span><br>          <span class=\"token comment\">// how it positions its children. Here we use mainAxisAlignment to</span><br>          <span class=\"token comment\">// center the children vertically; the main axis here is the vertical</span><br>          <span class=\"token comment\">// axis because Columns are vertical (the cross axis would be</span><br>          <span class=\"token comment\">// horizontal).</span><br>          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'You have pushed the button this many times:'</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'$_counter'</span><span class=\"token punctuation\">,</span><br>              style<span class=\"token punctuation\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textTheme<span class=\"token punctuation\">.</span>display1<span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      floatingActionButton<span class=\"token punctuation\">:</span> <span class=\"token function\">FloatingActionButton</span><span class=\"token punctuation\">(</span><br>        onPressed<span class=\"token punctuation\">:</span> _incrementCounter<span class=\"token punctuation\">,</span><br>        tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Increment'</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// This trailing comma makes auto-formatting nicer for build methods.</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Just to make sure everything is working go ahead and run the project on iOS/Android.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5464/1*teDs_OqHkRdhwyuzyb2rVA.png\">\n<p>You should have the counter application running and working correctly. Now quit and run on Chrome. It should be listed as a device. You can also run from the command line flutter run -d chrome.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5248/1*CzZ28crDYxBEMaNVq9CtvQ.png\">\n> *You do not get hot reload yet on web so be aware of that.*\n> *This is optional but I use this structure in all my apps*\n<iframe src=\"https://medium.com/media/139a52e7b9117765d41bf34d5813f57c\" frameborder=0></iframe>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*zr22DdSlEXlluwcki-ahEQ.png\">\n<p>Your project should now look like this.</p>\n<p>Open your pubspec.yaml and import the following packages.</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">universal_html</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">url_launcher</span><span class=\"token punctuation\">:</span></code></pre>\n<blockquote>\n<p><em>You can also remove the comments generated in the pubspec.yaml</em></p>\n</blockquote>\n<p>Your pubspec.yaml will now read like this:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> flutter_x<br><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> A new Flutter project.<br><br><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 1.0.0+1<br><br><span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\">=2.1.0 &lt;3.0.0\"</span><br><br><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><span class=\"token key atrule\">cupertino_icons</span><span class=\"token punctuation\">:</span> ^0.1.2<br>  <span class=\"token key atrule\">universal_html</span><span class=\"token punctuation\">:</span> ^1.1.0<br>  <span class=\"token key atrule\">url_launcher</span><span class=\"token punctuation\">:</span> ^5.1.2<br><br><span class=\"token key atrule\">dev_dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter_test</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br><br><span class=\"token key atrule\">uses-material-design</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre>\n<p>By default if you were to check if the device was mobile or web you will get an error at compile time when trying to import a plugin that is not meant for the platform. To get around this we will use dynamic imports.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*YCLt5ItFmyOmrd-CKgOQFQ.png\">\n<p>Create a url_launcher folder and file url_launcher.dart, mobile.dart, web.dart, unsupported.dart inside the plugins folder.</p>\n<p>In the file url_launcher.dart add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">export</span> <span class=\"token string\">'unsupported.dart'</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dart<span class=\"token punctuation\">.</span><span class=\"token keyword\">library</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">)</span> <span class=\"token string\">'web.dart'</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dart<span class=\"token punctuation\">.</span><span class=\"token keyword\">library</span><span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">)</span> <span class=\"token string\">'mobile.dart'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>This will pick the correct file at runtime and give a fallback if it is not supported.</p>\n<p>To protect against edge cases you will need to set up a fallback for the import. In unsupported.dart add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlUtils</span> <span class=\"token punctuation\">{</span><br>  UrlUtils<span class=\"token punctuation\">.</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>String url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>String name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">throw</span> <span class=\"token string\">'Platform Not Supported'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>The class UrlUtils and the public methods have to match all three files for this to work correctly. Always set up the unsupported first then copy the file into mobile.dart and web.dart to ensure no typos.</p>\n<p>You should now have 3 files with the above code in each class.</p>\n<p>In mobile.dart add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:url_launcher/url_launcher.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlUtils</span> <span class=\"token punctuation\">{</span><br>  UrlUtils<span class=\"token punctuation\">.</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>String url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>String name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">canLaunch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">await</span> <span class=\"token function\">launch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will open the link in safari view controller or android’s default browser respectively.</p>\n<p>In web.dart add the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:universal_html/prefer_universal/html.dart'</span> <span class=\"token operator\">as</span> html<span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlUtils</span> <span class=\"token punctuation\">{</span><br>  UrlUtils<span class=\"token punctuation\">.</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>String url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>String name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    html<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>This will open up a new window in the browser with the specified link.</p>\n<p>Add a button to the center of the screen. The ui/home/screen.dart should read the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br><span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>          child<span class=\"token punctuation\">:</span> <span class=\"token function\">RaisedButton</span><span class=\"token punctuation\">(</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Open Flutter.dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Update the onPressed to the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span><br>        UrlUtils<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[https://flutter.dev'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>flutter<span class=\"token punctuation\">.</span>dev'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error -> $e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n<p>Now when you go to import the UrlUtils it is important to import the correct URI.</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2140/1*7OyxZG6557DYE1XiBscCtA.png\">\n<p>Make sure to import import 'package:flutter_x/plugins/url_launcher/url_launcher.dart'; only.</p>\n<blockquote>\n<p><em>You can use the relative import if you wish.</em></p>\n</blockquote>\n<p>You UI code will now read the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'../../plugins/url_launcher/url_launcher.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br><span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>          child<span class=\"token punctuation\">:</span> <span class=\"token function\">RaisedButton</span><span class=\"token punctuation\">(</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Open Flutter.dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span><br>            UrlUtils<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[https://flutter.dev'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>flutter<span class=\"token punctuation\">.</span>dev'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error -> $e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          <span class=\"token punctuation\">}</span><br>        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>Your app on the web should look like this:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5248/1*6ni24NpLIULqi_Cd5NHh3Q.png\">\n<p>And when you tap the button..</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5248/1*tgcfnrgu9O4joiPeKFmqKw.png\">\n<p>And when you run it on iOS/Android it should look like this:</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5036/1*QEFw3xDevKMsjke4Dd06VA.png\">\n<p>And when you tap the button..</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/5036/1*lCvTvAvu0nI_dhgUUFHkWA.png\">\n<p>Congratulations! You made it :)</p>\n<img width=\"100%\" src=\"https://cdn-images-1.medium.com/max/2000/1*KowWujusMfDjlkjeeOFEBg.gif\">\n<p>Here is the final project located <a href=\"https://github.com/rodydavis/flutter_x/tree/finish\">here</a>.</p>\n<p>Please reach out if you have any questions!</p>\n",
      "date_published": "2019-09-05T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/first-flutter-project/",
      "url": "https://rodydavis.com/posts/first-flutter-project/",
      "title": "Creating Your First Flutter Project",
      "content_html": "<p>Flutter is a UI Toolkit from Google allowing you to create expressive and unique experiences unmatched on any platform. You can write your UI once and run it everywhere. Yes everywhere! Web, iOS, Android, Windows, Linux, MacOS, Raspberry PI and much more…</p>\n<img src=\"/img/gifs/check-it-out.webp\" width=\"100%\" >\n<p>If you prefer a video you can follow the YouTube series I am doing called “Flutter Take 5” where I explore topics that you encounter when building a Flutter application. I will also give you tips and tricks as I go through the series.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/rtBkU4pvHcw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<h2 id=\"what-is-flutter\">What is Flutter <a class=\"direct-link\" href=\"#what-is-flutter\">#</a></h2>\n<p>Flutter recently crossed React Native on Github and now has more than 2 million developers using Flutter to create applications. There are more than 50,000 apps on Google Play alone published with Flutter.</p>\n<p><a href=\"https://flutter.dev/\">Learn about Flutter.</a></p>\n<h2 id=\"getting-started\">Getting Started <a class=\"direct-link\" href=\"#getting-started\">#</a></h2>\n<p>Getting started is very easy once you get the SDK installed. After it is installed creating new applications, plugins and packages is lighting fast. Follow this guide to install Flutter:</p>\n<p><a href=\"https://flutter.dev/docs/get-started/install\">How to install Flutter.</a></p>\n<p>One nice thing about Flutter is that it is developed in the open as an open source project that anyone can contribute to. If there is something missing you can easily fork the repo and make a PR for the missing functionality.</p>\n<img src=\"/img/gifs/very-interesting.gif\" width=\"100%\">\n<h2 id=\"create-the-project\">Create the Project <a class=\"direct-link\" href=\"#create-the-project\">#</a></h2>\n<p>Now that you have Flutter installed it is time to create your first (Of Many 😉) Flutter project! Open up your terminal and navigate to wherever you want the application folder to be created. Once you “cd” into the directory you can type the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ flutter create my_awesome_project</code></pre>\n<p>You can replace “my_awesome_project” with whatever you want the project to be called. It is important to use snake_case as it is the valid syntax for project names in dart.</p>\n<img src=\"/img/gifs/super-excited.gif\" width=\"100%\">\n<p>Congratulations you just created your first project!</p>\n<h2 id=\"open-the-project\">Open the Project <a class=\"direct-link\" href=\"#open-the-project\">#</a></h2>\n<p>So you may be wondering what we just created so let us dive in to the details. You can open up you project in VSCode if you have it installed by typing the following into terminal:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> my_awesome_project <span class=\"token operator\">&amp;&amp;</span> code <span class=\"token builtin class-name\">.</span></code></pre>\n<p>You can open up the folder in your favorite IDE if you prefer. Two important files to notice are the pubspec.yaml and lib/main.dart</p>\n<p>Your UI and Logic is located at “lib/main.dart” and you should see the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token comment\">// This widget is the root of your application.</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// This is the theme of your application.</span><br>        <span class=\"token comment\">//</span><br>        <span class=\"token comment\">// Try running your application with \"flutter run\". You'll see the</span><br>        <span class=\"token comment\">// application has a blue toolbar. Then, without quitting the app, try</span><br>        <span class=\"token comment\">// changing the primarySwatch below to Colors.green and then invoke</span><br>        <span class=\"token comment\">// \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",</span><br>        <span class=\"token comment\">// or simply save your changes to \"hot reload\" in a Flutter IDE).</span><br>        <span class=\"token comment\">// Notice that the counter didn't reset back to zero; the application</span><br>        <span class=\"token comment\">// is not restarted.</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>        <span class=\"token comment\">// This makes the visual density adapt to the platform that you run</span><br>        <span class=\"token comment\">// the app on. For desktop platforms, the controls will be smaller and</span><br>        <span class=\"token comment\">// closer together (more dense) than on mobile platforms.</span><br>        visualDensity<span class=\"token punctuation\">:</span> VisualDensity<span class=\"token punctuation\">.</span>adaptivePlatformDensity<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo Home Page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// This widget is the home page of your application. It is stateful, meaning</span><br>  <span class=\"token comment\">// that it has a State object (defined below) that contains fields that affect</span><br>  <span class=\"token comment\">// how it looks.</span><br><br>  <span class=\"token comment\">// This class is the configuration for the state. It holds the values (in this</span><br>  <span class=\"token comment\">// case the title) provided by the parent (in this case the App widget) and</span><br>  <span class=\"token comment\">// used by the build method of the State. Fields in a Widget subclass are</span><br>  <span class=\"token comment\">// always marked \"final\".</span><br><br>  <span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  int _counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_incrementCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// This call to setState tells the Flutter framework that something has</span><br>      <span class=\"token comment\">// changed in this State, which causes it to rerun the build method below</span><br>      <span class=\"token comment\">// so that the display can reflect the updated values. If we changed</span><br>      <span class=\"token comment\">// _counter without calling setState(), then the build method would not be</span><br>      <span class=\"token comment\">// called again, and so nothing would appear to happen.</span><br>      _counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// This method is rerun every time setState is called, for instance as done</span><br>    <span class=\"token comment\">// by the _incrementCounter method above.</span><br>    <span class=\"token comment\">//</span><br>    <span class=\"token comment\">// The Flutter framework has been optimized to make rerunning build methods</span><br>    <span class=\"token comment\">// fast, so that you can just rebuild anything that needs updating rather</span><br>    <span class=\"token comment\">// than having to individually change instances of widgets.</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Here we take the value from the MyHomePage object that was created by</span><br>        <span class=\"token comment\">// the App.build method, and use it to set our appbar title.</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>        <span class=\"token comment\">// Center is a layout widget. It takes a single child and positions it</span><br>        <span class=\"token comment\">// in the middle of the parent.</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><br>          <span class=\"token comment\">// Column is also a layout widget. It takes a list of children and</span><br>          <span class=\"token comment\">// arranges them vertically. By default, it sizes itself to fit its</span><br>          <span class=\"token comment\">// children horizontally, and tries to be as tall as its parent.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Invoke \"debug painting\" (press \"p\" in the console, choose the</span><br>          <span class=\"token comment\">// \"Toggle Debug Paint\" action from the Flutter Inspector in Android</span><br>          <span class=\"token comment\">// Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)</span><br>          <span class=\"token comment\">// to see the wireframe for each widget.</span><br>          <span class=\"token comment\">//</span><br>          <span class=\"token comment\">// Column has various properties to control how it sizes itself and</span><br>          <span class=\"token comment\">// how it positions its children. Here we use mainAxisAlignment to</span><br>          <span class=\"token comment\">// center the children vertically; the main axis here is the vertical</span><br>          <span class=\"token comment\">// axis because Columns are vertical (the cross axis would be</span><br>          <span class=\"token comment\">// horizontal).</span><br>          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'You have pushed the button this many times:'</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'$_counter'</span><span class=\"token punctuation\">,</span><br>              style<span class=\"token punctuation\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textTheme<span class=\"token punctuation\">.</span>headline4<span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      floatingActionButton<span class=\"token punctuation\">:</span> <span class=\"token function\">FloatingActionButton</span><span class=\"token punctuation\">(</span><br>        onPressed<span class=\"token punctuation\">:</span> _incrementCounter<span class=\"token punctuation\">,</span><br>        tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Increment'</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// This trailing comma makes auto-formatting nicer for build methods.</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>You can define any dependencies and plugins needed for the application at “pubspec.yaml” and you should see the following:</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example<br><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> A new Flutter project.<br><br><span class=\"token comment\"># The following line prevents the package from being accidentally published to</span><br><span class=\"token comment\"># pub.dev using `pub publish`. This is preferred for private packages.</span><br><span class=\"token key atrule\">publish_to</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span> <span class=\"token comment\"># Remove this line if you wish to publish to pub.dev</span><br><br><span class=\"token comment\"># The following defines the version and build number for your application.</span><br><span class=\"token comment\"># A version number is three numbers separated by dots, like 1.2.43</span><br><span class=\"token comment\"># followed by an optional build number separated by a +.</span><br><span class=\"token comment\"># Both the version and the builder number may be overridden in flutter</span><br><span class=\"token comment\"># build by specifying --build-name and --build-number, respectively.</span><br><span class=\"token comment\"># In Android, build-name is used as versionName while build-number used as versionCode.</span><br><span class=\"token comment\"># Read more about Android versioning at https://developer.android.com/studio/publish/versioning</span><br><span class=\"token comment\"># In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.</span><br><span class=\"token comment\"># Read more about iOS versioning at</span><br><span class=\"token comment\"># https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html</span><br><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> 1.0.0+1<br><br><span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\">=2.7.0 &lt;3.0.0\"</span><br><br><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><br>  <span class=\"token comment\"># The following adds the Cupertino Icons font to your application.</span><br>  <span class=\"token comment\"># Use with the CupertinoIcons class for iOS style icons.</span><br>  <span class=\"token key atrule\">cupertino_icons</span><span class=\"token punctuation\">:</span> ^0.1.3<br><br><span class=\"token key atrule\">dev_dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter_test</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br><br><span class=\"token comment\"># For information on the generic Dart part of this file, see the</span><br><span class=\"token comment\"># following page: https://dart.dev/tools/pub/pubspec</span><br><br><span class=\"token comment\"># The following section is specific to Flutter.</span><br><span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br><br>  <span class=\"token comment\"># The following line ensures that the Material Icons font is</span><br>  <span class=\"token comment\"># included with your application, so that you can use the icons in</span><br>  <span class=\"token comment\"># the material Icons class.</span><br>  <span class=\"token key atrule\">uses-material-design</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br><br>  <span class=\"token comment\"># To add assets to your application, add an assets section, like this:</span><br>  <span class=\"token comment\"># assets:</span><br>  <span class=\"token comment\">#   - images/a_dot_burr.jpeg</span><br>  <span class=\"token comment\">#   - images/a_dot_ham.jpeg</span><br><br>  <span class=\"token comment\"># An image asset can refer to one or more resolution-specific \"variants\", see</span><br>  <span class=\"token comment\"># https://flutter.dev/assets-and-images/#resolution-aware.</span><br><br>  <span class=\"token comment\"># For details regarding adding assets from package dependencies, see</span><br>  <span class=\"token comment\"># https://flutter.dev/assets-and-images/#from-packages</span><br><br>  <span class=\"token comment\"># To add custom fonts to your application, add a fonts section here,</span><br>  <span class=\"token comment\"># in this \"flutter\" section. Each entry in this list should have a</span><br>  <span class=\"token comment\"># \"family\" key with the font family name, and a \"fonts\" key with a</span><br>  <span class=\"token comment\"># list giving the asset and other descriptors for the font. For</span><br>  <span class=\"token comment\"># example:</span><br>  <span class=\"token comment\"># fonts:</span><br>  <span class=\"token comment\">#   - family: Schyler</span><br>  <span class=\"token comment\">#     fonts:</span><br>  <span class=\"token comment\">#       - asset: fonts/Schyler-Regular.ttf</span><br>  <span class=\"token comment\">#       - asset: fonts/Schyler-Italic.ttf</span><br>  <span class=\"token comment\">#         style: italic</span><br>  <span class=\"token comment\">#   - family: Trajan Pro</span><br>  <span class=\"token comment\">#     fonts:</span><br>  <span class=\"token comment\">#       - asset: fonts/TrajanPro.ttf</span><br>  <span class=\"token comment\">#       - asset: fonts/TrajanPro_Bold.ttf</span><br>  <span class=\"token comment\">#         weight: 700</span><br>  <span class=\"token comment\">#</span><br>  <span class=\"token comment\"># For details regarding fonts from package dependencies,</span><br>  <span class=\"token comment\"># see https://flutter.dev/custom-fonts/#from-packages</span></code></pre>\n<h2 id=\"running-the-project\">Running the Project <a class=\"direct-link\" href=\"#running-the-project\">#</a></h2>\n<p>Running the application is very easy too. While there are buttons in all the IDEs you can also run your project from the command line for quick testing. You can also configure <a href=\"https://flutter.dev/desktop\">Flutter for Desktop</a> and no need to wait for an emulator to warm up. Open your project and enter the following into terminal:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ flutter run -d macos</code></pre>\n<p>Notice the “-d macos” as you can customize what device you want to run on. You should see the following in terminal:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">Building macOS application<span class=\"token punctuation\">..</span>.                                           <br>Syncing files to device macOS<span class=\"token punctuation\">..</span>.                                   141ms<br><br>Flutter run key commands.<br>r Hot reload. 🔥🔥🔥<br>R Hot restart.<br>h Repeat this <span class=\"token builtin class-name\">help</span> message.<br>d Detach <span class=\"token punctuation\">(</span>terminate <span class=\"token string\">\"flutter run\"</span> but leave application running<span class=\"token punctuation\">)</span>.<br>c Clear the <span class=\"token function\">screen</span><br>q Quit <span class=\"token punctuation\">(</span>terminate the application on the device<span class=\"token punctuation\">)</span>.<br>An Observatory debugger and profiler on macOS is available at: <span class=\"token punctuation\">[</span>http://127.0.0.1:58932/f1Mspofty_k<span class=\"token operator\">=</span>/<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>http://127.0.0.1:58932/f1Mspofty_k<span class=\"token operator\">=</span>/<span class=\"token punctuation\">)</span><br>Application finished.</code></pre>\n<p>You can also run multiple devices at the same time. You can find more info on the <a href=\"https://github.com/flutter/flutter/wiki/Multi-device-debugging-in-VS-Code\">Flutter Octopus here</a>. If everything went well you should see the following application launch:</p>\n<img width=\"100%\" src=\"/img/flutter/first.png\">\n<p>It is a pretty basic application at this point but it is important to show how easy it is to change the state in the application. You can rebuild the UI just by calling “setState()”.</p>\n<h2 id=\"testing-the-project\">Testing the Project <a class=\"direct-link\" href=\"#testing-the-project\">#</a></h2>\n<p>Testing is one of the reasons I love Flutter so much and it is dead simple to run and write tests for the project. If you look at the file “test/widget_test.dart” you should see the following:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// This is a basic Flutter widget test.</span><br><span class=\"token comment\">//</span><br><span class=\"token comment\">// To perform an interaction with a widget in your test, use the WidgetTester</span><br><span class=\"token comment\">// utility that Flutter provides. For example, you can send tap and scroll</span><br><span class=\"token comment\">// gestures. You can also use WidgetTester to find child widgets in the widget</span><br><span class=\"token comment\">// tree, read text, and verify that the values of widget properties are correct.</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_test/flutter_test.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:example/main.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">testWidgets</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Counter increments smoke test'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>WidgetTester tester<span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Build our app and trigger a frame.</span><br>    <span class=\"token keyword\">await</span> tester<span class=\"token punctuation\">.</span><span class=\"token function\">pumpWidget</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Verify that our counter starts at 0.</span><br>    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> findsOneWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> findsNothing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Tap the '+' icon and trigger a frame.</span><br>    <span class=\"token keyword\">await</span> tester<span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">.</span><span class=\"token function\">byIcon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">await</span> tester<span class=\"token punctuation\">.</span><span class=\"token function\">pump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Verify that our counter has incremented.</span><br>    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> findsNothing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> findsOneWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span></code></pre>\n<p>You can run these tests very easily. Open your project and type the following into the terminal:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ flutter <span class=\"token builtin class-name\">test</span><br>00:07 +1: All tests passed<span class=\"token operator\">!</span></code></pre>\n<p>Just like that all your tests will run and you can catch any bugs you missed.</p>\n<img src=\"/img/gifs/broken-door.gif\" width=\"100%\">\n<p>You can also generate code coverage for your applications easily by typing the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">$ flutter <span class=\"token builtin class-name\">test</span> --coverage</code></pre>\n<p>This will generate a new file at “coverage/lcov.info” and will read the following:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">SF:lib/main.dart<br>DA:3,0<br>DA:4,0<br>DA:9,1<br>DA:11,1<br>DA:13,1<br>DA:27,1<br>DA:29,1<br>DA:35,2<br>DA:48,1<br>DA:49,1<br>DA:55,1<br>DA:56,2<br>DA:62,2<br>DA:66,1<br>DA:74,1<br>DA:75,1<br>DA:78,3<br>DA:80,1<br>DA:83,1<br>DA:99,1<br>DA:100,1<br>DA:103,1<br>DA:104,2<br>DA:105,3<br>DA:110,1<br>DA:111,1<br>DA:113,1<br>LF:27<br>LH:25<br>end_of_record</code></pre>\n<p>You can now easily create badges and graphs with the LCOV data. Here is a package that will make that easier:</p>\n<p><a href=\"https://pub.dev/packages/test_coverage\">test_coverage | Dart Package</a></p>\n<h2 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h2>\n<p>Flutter makes it possible to build applications very quickly that do not depend on web or mobile technologies. It can familiar to writing a game as you have to design all your own UI. You can find the final source code here:</p>\n<p><a href=\"https://github.com/rodydavis/flutter_take_5/tree/master/01_your_first_project\">Final source code.</a></p>\n<p>You can also find the Flutter source code here:</p>\n<p><a href=\"https://github.com/flutter/flutter\">Flutter source code.</a></p>\n",
      "date_published": "2019-04-27T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/automate-flutter-apps/",
      "url": "https://rodydavis.com/posts/automate-flutter-apps/",
      "title": "Automate Flutter App Releases",
      "content_html": "<p><strong>TLDR</strong> You can find the script <a href=\"https://gist.github.com/rodydavis/774b36e32d7efa882cca8dd16da6e74c\">here</a>.</p>\n<script src=\"https://gist.github.com/rodydavis/774b36e32d7efa882cca8dd16da6e74c.js\"></script>\n<p>Make your life easier and automate your builds to beta and production!</p>\n<h2 id=\"what-you-need\">What you need <a class=\"direct-link\" href=\"#what-you-need\">#</a></h2>\n<ul>\n<li><a href=\"https://fastlane.tools/\">Fastlane</a> setup in each directory</li>\n<li><a href=\"https://pub.dartlang.org/packages/build_runner\">build_runner</a> as a dependency</li>\n<li>Git Project in VCS</li>\n</ul>\n<h2 id=\"initial-setup\">Initial Setup <a class=\"direct-link\" href=\"#initial-setup\">#</a></h2>\n<ul>\n<li>Download <a href=\"https://gist.github.com/rodydavis/774b36e32d7efa882cca8dd16da6e74c\">this file</a></li>\n<li>Put it at the root level of your flutter project</li>\n<li>Open the terminal and navigate to your project location</li>\n<li>Enter this command: chmod +x <a href=\"http://release.sh\">release.sh</a></li>\n</ul>\n<h2 id=\"usage\">Usage <a class=\"direct-link\" href=\"#usage\">#</a></h2>\n<p>Now you can call this script!</p>\n<ul>\n<li>For beta: <code>./release.sh beta</code></li>\n<li>For production: <code>./release.sh release</code></li>\n</ul>\n<h2 id=\"overview\">Overview <a class=\"direct-link\" href=\"#overview\">#</a></h2>\n<ul>\n<li>Bump the version numbers if you are using the version in the pubspec.yaml</li>\n<li>Release the apps with Fastlane</li>\n<li>Format all Dart Files</li>\n<li>Clean Project</li>\n<li>Rebuild classes</li>\n<li>Add commit messages</li>\n<li>Updates Cocoa Pods</li>\n</ul>\n",
      "date_published": "2019-03-14T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/making-a-piano/",
      "url": "https://rodydavis.com/posts/making-a-piano/",
      "title": "Building A Piano with Flutter",
      "content_html": "<p><strong>TLDR</strong> The final source <a href=\"https://github.com/rodydavis/flutter_piano/tree/5k\">here</a> and an online <a href=\"https://pocketpiano.app\">demo</a>.</p>\n<iframe class=\"app\" src=\"https://pocketpiano.app\"></iframe>\n<p>This piano uses only <code>5032</code> bytes of Dart Code!</p>\n<p>Winner of the <a href=\"https://flutter.dev/create\">Flutter Create Contest</a> and you can see the certificate <a href=\"https://www.credential.net/exbvca0q?key=8be94f32ad2f56882045e013e960fa888afa4edd52edb963c48df351c7d1e443\">here</a>!</p>\n<h2 id=\"what-you-will-learn\">What you will learn <a class=\"direct-link\" href=\"#what-you-will-learn\">#</a></h2>\n<ul>\n<li>Working with Dark Mode</li>\n<li>Forcing app to be in landscape</li>\n<li>Working with custom files bundled with the app</li>\n<li>Working with midi and sounds in flutter</li>\n<li>Working with <code>StatefulWidget</code></li>\n<li>Using <code>SafeArea</code> and <code>Semantics</code></li>\n<li>Building an app with minimal code</li>\n</ul>\n<h2 id=\"what-you-need\">What you need <a class=\"direct-link\" href=\"#what-you-need\">#</a></h2>\n<ul>\n<li><a href=\"https://flutter.dev/docs/get-started/install\">Flutter SDK</a> Installed (<a href=\"https://flutter.dev/docs/get-started/codelab\">More Info</a>)</li>\n<li>A <code>.sf2</code> SoundFont File like <a href=\"https://github.com/rodydavis/flutter_piano/blob/5k/assets/sounds/Piano.sf2\">this one</a></li>\n<li>Physical iOS device (iOS Simulator does not work with this plugin for playing the sounds) or Android Emulator/Device</li>\n</ul>\n<h2 id=\"setting-up\">Setting Up <a class=\"direct-link\" href=\"#setting-up\">#</a></h2>\n<p>You can either create a new project with Android Studio or VSCode using the GUI or navigate to the location you want your project and using this command in the terminal: <code>lutter create -i swift -a kotlin flutter_piano</code>. Make sure to include Swift and Kotlin Support!</p>\n<p>Now that you have your project created it should look like this.</p>\n<p><img src=\"/img/flutter_piano/starter.png\" alt=\"app-icon\"></p>\n<p>Let's start by adding some dependencies to our `pubspec.yaml'</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">dependencies</span><span class=\"token punctuation\">:</span><br>  <span class=\"token key atrule\">flutter</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">sdk</span><span class=\"token punctuation\">:</span> flutter<br>  <span class=\"token key atrule\">tonic</span><span class=\"token punctuation\">:</span> ^0.2.3<br>  <span class=\"token key atrule\">flutter_midi</span><span class=\"token punctuation\">:</span> ^0.1.1+3<br>  <span class=\"token key atrule\">cupertino_icons</span><span class=\"token punctuation\">:</span> ^0.1.2</code></pre>\n<p>and add the .sf2 file</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token key atrule\">assets</span><span class=\"token punctuation\">:</span><br>   <span class=\"token punctuation\">-</span> assets/sounds/Piano.sf2</code></pre>\n<p>If you haven't already create a new folder at the top of your project call <code>assets</code> and a subfolder called <code>sounds</code> and place the .sf2 file there and make sure it is named <code>Piano.sf2</code></p>\n<p>Because our app will only work in landscape we need to update those settings as well.</p>\n<p>navigate to the <code>/android/app/src/main/AndroidManifest.xml</code> and add this line inside <code>&lt;activity</code> in the <code>&lt;application</code>:</p>\n<pre><code>android:screenOrientation=&quot;landscape&quot;\n</code></pre>\n<p>Example:</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>manifest</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span><br>    <span class=\"token attr-name\">package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.rodydavis.flutter_piano<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>    <span class=\"token comment\">&lt;!-- io.flutter.app.FlutterApplication is an android.app.Application that<br>         calls FlutterMain.startInitialization(this); in its onCreate method.<br>         In most cases you can leave this as-is, but you if you want to provide<br>         additional functionality it is fine to subclass or reimplement<br>         FlutterApplication and put your custom class here. --></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>application</span><br>        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.flutter.app.FlutterApplication<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flutter_piano<span class=\"token punctuation\">\"</span></span><br>        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>icon</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@mipmap/ic_launcher<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activity</span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.MainActivity<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>launchMode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>singleTop<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>theme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@style/LaunchTheme<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>configChanges</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>hardwareAccelerated</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>screenOrientation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>landscape<span class=\"token punctuation\">\"</span></span><br>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>windowSoftInputMode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adjustResize<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>            <span class=\"token comment\">&lt;!-- This keeps the window background of the activity showing<br>                 until Flutter renders its first frame. It can be removed if<br>                 there is no splash screen (such as the default splash screen<br>                 defined in @style/LaunchTheme). --></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta-data</span><br>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>io.flutter.app.android.SplashScreenUntilFirstFrame<span class=\"token punctuation\">\"</span></span><br>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>intent-filter</span><span class=\"token punctuation\">></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>action</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.action.MAIN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><br>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>category</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.category.LAUNCHER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><br>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>intent-filter</span><span class=\"token punctuation\">></span></span><br>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activity</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>application</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>manifest</span><span class=\"token punctuation\">></span></span><br></code></pre>\n<p>navigate to <code>/ios/Runner/info.plist</code> and change:</p>\n<pre><code>&lt;key&gt;UISupportedInterfaceOrientations&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;UIInterfaceOrientationLandscapeLeft&lt;/string&gt;\n    &lt;string&gt;UIInterfaceOrientationLandscapeRight&lt;/string&gt;\n&lt;/array&gt;\n</code></pre>\n<p>Now we can start with the UI! When you run the application now it should start in landscape!</p>\n<p><img src=\"/img/flutter_piano/landscape.png\" alt=\"landscape\"></p>\n<h2 id=\"step-1\">Step 1 <a class=\"direct-link\" href=\"#step-1\">#</a></h2>\n<p>To make it eaiser to read lets remove the comments. Use &quot;find and replace&quot; and search for <code>\\/\\/.*</code></p>\n<p><img src=\"/img/flutter_piano/comments.png\" alt=\"comments\"></p>\n<p>choose the &quot;select all occurrances&quot; button and hit <code>backspace</code> to delete.</p>\n<p><img src=\"/img/flutter_piano/selectall.png\" alt=\"select all\"></p>\n<p>Hit save and you should see the code format for you.</p>\n<p>The 'main.dart' file should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo Home Page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyHomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyHomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyHomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyHomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  int _counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">void</span> <span class=\"token function\">_incrementCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      _counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span><br>        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><br>          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'You have pushed the button this many times:'</span><span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><br>              <span class=\"token string\">'$_counter'</span><span class=\"token punctuation\">,</span><br>              style<span class=\"token punctuation\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textTheme<span class=\"token punctuation\">.</span>display1<span class=\"token punctuation\">,</span><br>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      floatingActionButton<span class=\"token punctuation\">:</span> <span class=\"token function\">FloatingActionButton</span><span class=\"token punctuation\">(</span><br>        onPressed<span class=\"token punctuation\">:</span> _incrementCounter<span class=\"token punctuation\">,</span><br>        tooltip<span class=\"token punctuation\">:</span> <span class=\"token string\">'Increment'</span><span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"step-2\">Step 2 <a class=\"direct-link\" href=\"#step-2\">#</a></h2>\n<p>Delete the <code>MyHomePage</code> widget so you are left with this.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">MyHomePage</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo Home Page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>You should get an error and thats ok, we will fix that next.</p>\n<p>Replace <code>MyHomePage(title: 'Flutter Demo Home Page')</code> with a <code>Scaffold()</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"step-3\">Step 3 <a class=\"direct-link\" href=\"#step-3\">#</a></h2>\n<p>Change <code>MyApp</code> to a <code>StatefulWidget</code>. You can do this quickly by selecting <code>MyApp</code> and choose &quot;Convert to StatefulWidget&quot; with the helper.</p>\n<p><img src=\"/img/flutter_piano/convert.png\" alt=\"convert\"></p>\n<p>It should look like this now:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h1 id=\"step-4\">Step 4 <a class=\"direct-link\" href=\"#step-4\">#</a></h1>\n<p>Change the theme to dark. You can do this by setting the <code>ThemeData</code> in <code>MaterialApp</code></p>\n<p>change:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span><br>        primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre>\n<p>to this</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre>\n<p>Add and <code>AppBar</code> to the <code>Scaffold</code></p>\n<p><code>appBar: AppBar(title: Text(&quot;Flutter Piano&quot;)),</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>        appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<p>Now build and run your app, it should look like this.</p>\n<p><img src=\"/img/flutter_piano/darkmode.png\" alt=\"dark-mode\"></p>\n<h2 id=\"step-5\">Step 5 <a class=\"direct-link\" href=\"#step-5\">#</a></h2>\n<p>We need to add some imports to the top:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>If you get an error make sure they are added in the <code>pubspec.yaml</code> from earlier, then restart the app. Be sure to run <code>flutter packages get</code> everytime you add a dependency.</p>\n<p>Now we can add out <code>initState()</code> to our app.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> <span class=\"token metadata symbol\">@override</span><br> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>   FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>     FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span><br></code></pre>\n<p>Run the app and make sure you do not get any errors. If you are running this on the iOS Simulator you will get the following error:</p>\n<p><code>Could Not Load Midi on this Device. (Cannot run on simulator), have you included the sound font?</code></p>\n<p>It is ok for developing the UI but once we start with the midi you will need to plug in a real device.</p>\n<p>Your code so far should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>        appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"step-6\">Step 6 <a class=\"direct-link\" href=\"#step-6\">#</a></h2>\n<p>To make Flutter development faster we start with containers and colors so we can make sure everything is the right size.</p>\n<p>Lets start by adding a <code>Drawer</code> with a <code>ListView</code> to our <code>Scaffold</code>.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>        appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        drawer<span class=\"token punctuation\">:</span> <span class=\"token function\">Drawer</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre>\n<p>You should now get a menu icon that when you press looks like this.</p>\n<p><img src=\"/img/flutter_piano/menu.png\" alt=\"menu\"></p>\n<p>Now lets add a ListView that scrolls Horizontially to the body of the <code>Scaffold</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> body<span class=\"token punctuation\">:</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>            itemCount<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><br>            scrollDirection<span class=\"token punctuation\">:</span> Axis<span class=\"token punctuation\">.</span>horizontal<span class=\"token punctuation\">,</span><br>            itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> int index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span></code></pre>\n<p>We need 7 <code>itemCount</code> for 7 octaves on the Piano.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>          appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          drawer<span class=\"token punctuation\">:</span><br>              <span class=\"token function\">Drawer</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          body<span class=\"token punctuation\">:</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>            itemCount<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><br>            scrollDirection<span class=\"token punctuation\">:</span> Axis<span class=\"token punctuation\">.</span>horizontal<span class=\"token punctuation\">,</span><br>            itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> int index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"step-7\">Step 7 <a class=\"direct-link\" href=\"#step-7\">#</a></h2>\n<p>Now we need to build the octave section that will be repeated. Since every octave is identical we can repeat the octaves with minor adjustments.</p>\n<p>Lets add some parameters for use to define for our UI. Add these underneath the initState function.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\">double <span class=\"token keyword\">get</span> keyWidth <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span> <span class=\"token operator\">*</span> _widthRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>double _widthRatio <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span><br>bool _showLabels <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></code></pre>\n<p>We will use these to dynamily update the keys.</p>\n<p>Under the <code>itemBuilder</code> lets define which octave we are working with by adding:<br>\n<code>final int i = index * 12;</code></p>\n<p>Our code should look like this now:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <br>  double <span class=\"token keyword\">get</span> keyWidth <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span> <span class=\"token operator\">*</span> _widthRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  double _widthRatio <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span><br>  bool _showLabels <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>          appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          drawer<span class=\"token punctuation\">:</span><br>              <span class=\"token function\">Drawer</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          body<span class=\"token punctuation\">:</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>            itemCount<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><br>            scrollDirection<span class=\"token punctuation\">:</span> Axis<span class=\"token punctuation\">.</span>horizontal<span class=\"token punctuation\">,</span><br>            itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> int index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">final</span> int i <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span><br>              <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br></code></pre>\n<h2 id=\"step-8\">Step 8 <a class=\"direct-link\" href=\"#step-8\">#</a></h2>\n<p>Now we need to add a <code>Stack</code> for our octave:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> <span class=\"token keyword\">return</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span><br>               child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                 <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span>mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                   <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                 <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                     left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                     right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                     bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>                     top<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                     child<span class=\"token punctuation\">:</span> <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span><br>                         mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>spaceBetween<span class=\"token punctuation\">,</span><br>                         mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span><br>                         children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                           <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                           <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>               <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>             <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Here we have defined which midi notes are played for each octave.</p>\n<p>Now add the function <code>_buildKey</code> underneath our <code>build</code> function.</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> Widget <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span>int midi<span class=\"token punctuation\">,</span> bool accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>          width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>          color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span><br>          margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          padding<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>            elevation<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span><br>            borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>            shadowColor<span class=\"token punctuation\">:</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x802196F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>        width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>        color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>        margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span></code></pre>\n<p>Also add <code>borderRadius</code> to the bottom of <code>main.dart</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> BorderRadiusGeometry borderRadius <span class=\"token operator\">=</span> BorderRadius<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span><br>    bottomLeft<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bottomRight<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<p>Your app should look like this:</p>\n<p><img src=\"/img/flutter_piano/keys.png\" alt=\"keys\"></p>\n<p>Your code should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  double <span class=\"token keyword\">get</span> keyWidth <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span> <span class=\"token operator\">*</span> _widthRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  double _widthRatio <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span><br>  bool _showLabels <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>          appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          drawer<span class=\"token punctuation\">:</span><br>              <span class=\"token function\">Drawer</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          body<span class=\"token punctuation\">:</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>            itemCount<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><br>            scrollDirection<span class=\"token punctuation\">:</span> Axis<span class=\"token punctuation\">.</span>horizontal<span class=\"token punctuation\">,</span><br>            itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> int index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">final</span> int i <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span><br>              <span class=\"token keyword\">return</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span><br>                child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                  <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span>mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                      left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>                      top<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      child<span class=\"token punctuation\">:</span> <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span><br>                          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>spaceBetween<span class=\"token punctuation\">,</span><br>                          mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span><br>                          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Widget <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span>int midi<span class=\"token punctuation\">,</span> bool accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>          width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>          color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">,</span><br>          margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          padding<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>            elevation<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span><br>            borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>            shadowColor<span class=\"token punctuation\">:</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x802196F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>        width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>        color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>        margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> BorderRadiusGeometry borderRadius <span class=\"token operator\">=</span> BorderRadius<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span><br>    bottomLeft<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bottomRight<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h2 id=\"step-9\">Step 9 <a class=\"direct-link\" href=\"#step-9\">#</a></h2>\n<p>Time to add midi by adding the following import to the top of the file:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:tonic/tonic.dart'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>In the <code>-buildKey</code> function you can add this line:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> <span class=\"token keyword\">final</span> pitchName <span class=\"token operator\">=</span> Pitch<span class=\"token punctuation\">.</span><span class=\"token function\">fromMidiNumber</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>We can also create the piano key itself underneath it:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> <span class=\"token keyword\">final</span> pianoKey <span class=\"token operator\">=</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>     children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>       <span class=\"token function\">Semantics</span><span class=\"token punctuation\">(</span><br>           button<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>           hint<span class=\"token punctuation\">:</span> pitchName<span class=\"token punctuation\">,</span><br>           child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>               borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>               color<span class=\"token punctuation\">:</span> accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>               child<span class=\"token punctuation\">:</span> <span class=\"token function\">InkWell</span><span class=\"token punctuation\">(</span><br>                 borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>                 highlightColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>grey<span class=\"token punctuation\">,</span><br>                 onTap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>                 onTapDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">playMidiNote</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">:</span> midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>       <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>           left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>           right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>           bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span><br>           child<span class=\"token punctuation\">:</span> _showLabels<br>               <span class=\"token operator\">?</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>pitchName<span class=\"token punctuation\">,</span><br>                   textAlign<span class=\"token punctuation\">:</span> TextAlign<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>                   style<span class=\"token punctuation\">:</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span><br>                       color<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>               <span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Remove the color from the container and replace it with <code>child: pianoKey,</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>     <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>         width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>         margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>         padding<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>         child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>             elevation<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span><br>             borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>             shadowColor<span class=\"token punctuation\">:</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x802196F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>             child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token punctuation\">}</span><br>   <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>       width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>       child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">,</span><br>       margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The complete function should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"> Widget <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span>int midi<span class=\"token punctuation\">,</span> bool accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>   <span class=\"token keyword\">final</span> pitchName <span class=\"token operator\">=</span> Pitch<span class=\"token punctuation\">.</span><span class=\"token function\">fromMidiNumber</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token keyword\">final</span> pianoKey <span class=\"token operator\">=</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>     children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>       <span class=\"token function\">Semantics</span><span class=\"token punctuation\">(</span><br>           button<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>           hint<span class=\"token punctuation\">:</span> pitchName<span class=\"token punctuation\">,</span><br>           child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>               borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>               color<span class=\"token punctuation\">:</span> accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>               child<span class=\"token punctuation\">:</span> <span class=\"token function\">InkWell</span><span class=\"token punctuation\">(</span><br>                 borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>                 highlightColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>grey<span class=\"token punctuation\">,</span><br>                 onTap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>                 onTapDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">playMidiNote</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">:</span> midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>       <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>           left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>           right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>           bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span><br>           child<span class=\"token punctuation\">:</span> _showLabels<br>               <span class=\"token operator\">?</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>pitchName<span class=\"token punctuation\">,</span><br>                   textAlign<span class=\"token punctuation\">:</span> TextAlign<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>                   style<span class=\"token punctuation\">:</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span><br>                       color<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>               <span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>     <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>         width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>         margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>         padding<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>         child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>             elevation<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span><br>             borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>             shadowColor<span class=\"token punctuation\">:</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x802196F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>             child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>   <span class=\"token punctuation\">}</span><br>   <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>       width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>       child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">,</span><br>       margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <span class=\"token punctuation\">}</span></code></pre>\n<p>Now when you run the app it should look like this:</p>\n<p><img src=\"/img/flutter_piano/labels.png\" alt=\"labels\"></p>\n<p>Almost there! Now let's give our user some control.</p>\n<h2 id=\"step-10\">Step 10 <a class=\"direct-link\" href=\"#step-10\">#</a></h2>\n<p>Add these settings to the <code>Drawer</code></p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">:</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Change Width\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token function\">Slider</span><span class=\"token punctuation\">(</span><br>    activeColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>redAccent<span class=\"token punctuation\">,</span><br>    inactiveColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>    min<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>    max<span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><br>    value<span class=\"token punctuation\">:</span> _widthRatio<span class=\"token punctuation\">,</span><br>    onChanged<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>double value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span><br>        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _widthRatio <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token function\">Divider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span><br>    title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Show Labels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    trailing<span class=\"token punctuation\">:</span> <span class=\"token function\">Switch</span><span class=\"token punctuation\">(</span><br>    value<span class=\"token punctuation\">:</span> _showLabels<span class=\"token punctuation\">,</span><br>    onChanged<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>bool value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span><br>        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _showLabels <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br><span class=\"token function\">Divider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre>\n<p>Now you should see this:</p>\n<p><img src=\"/img/flutter_piano/settings.png\" alt=\"settings\"></p>\n<h2 id=\"step-11\">Step 11 <a class=\"direct-link\" href=\"#step-11\">#</a></h2>\n<p>To start with <code>Middle C</code> lets add an inital scroll offset to the <code>ListView</code></p>\n<p><code>controller: ScrollController(initialScrollOffset: 1500.0),</code></p>\n<p>Now when we start the app it should co to C4.</p>\n<p>The final App should look like this:</p>\n<p><img src=\"/img/flutter_piano/final.png\" alt=\"final\"></p>\n<p>The final code should look like this:</p>\n<pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/services.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_midi/flutter_midi.dart'</span><span class=\"token punctuation\">;</span><br><span class=\"token keyword\">import</span> <span class=\"token string\">'package:tonic/tonic.dart'</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  _MyAppState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_MyAppState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">class</span> <span class=\"token class-name\">_MyAppState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>MyApp<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><br>  <span class=\"token metadata symbol\">@override</span><br>  <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">unmute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    rootBundle<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"assets/sounds/Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>sf2<span class=\"token punctuation\">:</span> sf2<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Piano.sf2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  double <span class=\"token keyword\">get</span> keyWidth <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span> <span class=\"token operator\">*</span> _widthRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  double _widthRatio <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span><br>  bool _showLabels <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token metadata symbol\">@override</span><br>  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span><br>      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Demo'</span><span class=\"token punctuation\">,</span><br>      theme<span class=\"token punctuation\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      home<span class=\"token punctuation\">:</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span><br>          appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flutter Piano\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          drawer<span class=\"token punctuation\">:</span> <span class=\"token function\">Drawer</span><span class=\"token punctuation\">(</span><br>              child<span class=\"token punctuation\">:</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span><br>                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">:</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Change Width\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Slider</span><span class=\"token punctuation\">(</span><br>                activeColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>redAccent<span class=\"token punctuation\">,</span><br>                inactiveColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>                min<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                max<span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><br>                value<span class=\"token punctuation\">:</span> _widthRatio<span class=\"token punctuation\">,</span><br>                onChanged<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>double value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span><br>                    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _widthRatio <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Divider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span><br>                title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Show Labels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                trailing<span class=\"token punctuation\">:</span> <span class=\"token function\">Switch</span><span class=\"token punctuation\">(</span><br>                    value<span class=\"token punctuation\">:</span> _showLabels<span class=\"token punctuation\">,</span><br>                    onChanged<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>bool value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span><br>                        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> _showLabels <span class=\"token operator\">=</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            <span class=\"token function\">Divider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          body<span class=\"token punctuation\">:</span> ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><br>            itemCount<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><br>            scrollDirection<span class=\"token punctuation\">:</span> Axis<span class=\"token punctuation\">.</span>horizontal<span class=\"token punctuation\">,</span><br>            controller<span class=\"token punctuation\">:</span> <span class=\"token function\">ScrollController</span><span class=\"token punctuation\">(</span>initialScrollOffset<span class=\"token punctuation\">:</span> <span class=\"token number\">1500.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>            itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">,</span> int index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>              <span class=\"token keyword\">final</span> int i <span class=\"token operator\">=</span> index <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span><br>              <span class=\"token keyword\">return</span> <span class=\"token function\">SafeArea</span><span class=\"token punctuation\">(</span><br>                child<span class=\"token punctuation\">:</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                  <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span>mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">29</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                    <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                  <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>                      left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><br>                      top<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>                      child<span class=\"token punctuation\">:</span> <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span><br>                          mainAxisAlignment<span class=\"token punctuation\">:</span> MainAxisAlignment<span class=\"token punctuation\">.</span>spaceBetween<span class=\"token punctuation\">,</span><br>                          mainAxisSize<span class=\"token punctuation\">:</span> MainAxisSize<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">,</span><br>                          children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                            <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  Widget <span class=\"token function\">_buildKey</span><span class=\"token punctuation\">(</span>int midi<span class=\"token punctuation\">,</span> bool accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">final</span> pitchName <span class=\"token operator\">=</span> Pitch<span class=\"token punctuation\">.</span><span class=\"token function\">fromMidiNumber</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">final</span> pianoKey <span class=\"token operator\">=</span> <span class=\"token function\">Stack</span><span class=\"token punctuation\">(</span><br>      children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><br>        <span class=\"token function\">Semantics</span><span class=\"token punctuation\">(</span><br>            button<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>            hint<span class=\"token punctuation\">:</span> pitchName<span class=\"token punctuation\">,</span><br>            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>                borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>                color<span class=\"token punctuation\">:</span> accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span><br>                child<span class=\"token punctuation\">:</span> <span class=\"token function\">InkWell</span><span class=\"token punctuation\">(</span><br>                  borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>                  highlightColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>grey<span class=\"token punctuation\">,</span><br>                  onTap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>                  onTapDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> FlutterMidi<span class=\"token punctuation\">.</span><span class=\"token function\">playMidiNote</span><span class=\"token punctuation\">(</span>midi<span class=\"token punctuation\">:</span> midi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>        <span class=\"token function\">Positioned</span><span class=\"token punctuation\">(</span><br>            left<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>            right<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><br>            bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">,</span><br>            child<span class=\"token punctuation\">:</span> _showLabels<br>                <span class=\"token operator\">?</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>pitchName<span class=\"token punctuation\">,</span><br>                    textAlign<span class=\"token punctuation\">:</span> TextAlign<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span><br>                    style<span class=\"token punctuation\">:</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span><br>                        color<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>accidental <span class=\"token operator\">?</span> Colors<span class=\"token punctuation\">.</span>black <span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>                <span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accidental<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>          width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>          margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          padding<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> keyWidth <span class=\"token operator\">*</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Material</span><span class=\"token punctuation\">(</span><br>              elevation<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span><br>              borderRadius<span class=\"token punctuation\">:</span> borderRadius<span class=\"token punctuation\">,</span><br>              shadowColor<span class=\"token punctuation\">:</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x802196F3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br>              child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><br>        width<span class=\"token punctuation\">:</span> keyWidth<span class=\"token punctuation\">,</span><br>        child<span class=\"token punctuation\">:</span> pianoKey<span class=\"token punctuation\">,</span><br>        margin<span class=\"token punctuation\">:</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>horizontal<span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">}</span><br><br><span class=\"token keyword\">const</span> BorderRadiusGeometry borderRadius <span class=\"token operator\">=</span> BorderRadius<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span><br>    bottomLeft<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bottomRight<span class=\"token punctuation\">:</span> Radius<span class=\"token punctuation\">.</span><span class=\"token function\">circular</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></code></pre>\n<h1 id=\"conclusion\">Conclusion <a class=\"direct-link\" href=\"#conclusion\">#</a></h1>\n<p>If you delete <code>tests/</code> and run <code>find . -name &quot;*.dart&quot; | xargs cat | wc -c</code> you will see that the dart code only uses <code>5032</code> bytes of space!</p>\n<p>Now we have a fully functional piano that you can play with and enjoy on iOS and Android.</p>\n<p>I was really inspired when creating this for the <a href=\"https://flutter.dev/create\">Flutter Create</a> contest.</p>\n<p>Hope you learned something, if you have any questions you can always read out to me. This is an open source piano and would love PRs on the main project <a href=\"https://github.com/rodydavis/flutter_piano\">here</a>!</p>\n",
      "date_published": "2019-03-11T17:00:00-07:00"
    },{
      "id": "https://rodydavis.com/posts/flutter-one-click-release/",
      "url": "https://rodydavis.com/posts/flutter-one-click-release/",
      "title": "Flutter + Fastlane (One Click Beta)",
      "content_html": "<h2 id=\"1.-install-flutter\">1. Install Flutter <a class=\"direct-link\" href=\"#1.-install-flutter\">#</a></h2>\n<p><a href=\"https://flutter.io/get-started/install/\">Download Flutter</a></p>\n<p><img src=\"/img/flutter/logo.jpg\" alt=\"flutter\"></p>\n<h2 id=\"2.-create-new-flutter-project\">2. Create new Flutter Project <a class=\"direct-link\" href=\"#2.-create-new-flutter-project\">#</a></h2>\n<p>If you are pretty new to Flutter you can check out <a href=\"https://flutter.io/get-started/codelab/\">this useful guide</a> on how to create a new project step by step.</p>\n<p><img src=\"/img/flutter/cross-platform.jpg\" alt=\"cross-platform\"></p>\n<h2 id=\"3.-create-app-in-itunes-connect\">3. Create App in iTunes Connect <a class=\"direct-link\" href=\"#3.-create-app-in-itunes-connect\">#</a></h2>\n<p>If you are not familiar with iTunes Connect, check out <a href=\"https://clearbridgemobile.com/how-to-submit-an-app-to-the-app-store/\">this article</a> for getting started and setting up your first app for the App Store.</p>\n<h2 id=\"4.-create-app-in-google-play\">4. Create App in Google Play <a class=\"direct-link\" href=\"#4.-create-app-in-google-play\">#</a></h2>\n<p>Setting up an app in the Google Play Console can be tricky, make sure to check out the <a href=\"https://support.google.com/googleplay/android-developer/answer/113469?hl=en-GB\">official reference</a> and <a href=\"https://medium.com/mindorks/upload-your-first-android-app-on-play-store-step-by-step-ee0de9123ac0\">this guide</a> if you are having trouble.</p>\n<p><img src=\"/img/flutter/fastlane.jpg\" alt=\"fastlane\"></p>\n<h2 id=\"5.-navigate-to-project-%3E-ios-and-setup-fastlane\">5. Navigate to Project &gt; ios and Setup Fastlane <a class=\"direct-link\" href=\"#5.-navigate-to-project-%3E-ios-and-setup-fastlane\">#</a></h2>\n<p><a href=\"https://docs.fastlane.tools/getting-started/ios/setup/\">Reference</a></p>\n<h2 id=\"6.-navigate-to-project-%3E-android-and-setup-fastlane\">6. Navigate to Project &gt; android and Setup Fastlane <a class=\"direct-link\" href=\"#6.-navigate-to-project-%3E-android-and-setup-fastlane\">#</a></h2>\n<p><a href=\"https://docs.fastlane.tools/getting-started/android/setup/\">Reference</a></p>\n<h2 id=\"7.-update-fastlane-fastfiles-for-ios-and-android-and-change-accordingly-for-each-platform\">7. Update Fastlane Fastfiles for iOS and Android and Change accordingly for each platform <a class=\"direct-link\" href=\"#7.-update-fastlane-fastfiles-for-ios-and-android-and-change-accordingly-for-each-platform\">#</a></h2>\n<ul>\n<li>\n<p>Make sure to change <YOUR PROJECT PATH> to the path to your project in Finder.</p>\n</li>\n<li>\n<p>Only copy the correct platform code for each Fastfile. For example, <code>default_platform(:ios)</code> for iOS and `default_platform(:android)1st for Android.</p>\n</li>\n</ul>\n<pre class=\"language-ruby\"><code class=\"language-ruby\">update_fastlane<br><br>default_platform<span class=\"token punctuation\">(</span><span class=\"token symbol\">:ios</span><span class=\"token punctuation\">)</span><br><br>platform <span class=\"token symbol\">:ios</span> <span class=\"token keyword\">do</span><br>  desc <span class=\"token string\">\"Push a new beta build to TestFlight\"</span><br>  lane <span class=\"token symbol\">:beta</span> <span class=\"token keyword\">do</span><br>    increment_build_number<span class=\"token punctuation\">(</span>xcodeproj<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner.xcodeproj\"</span><span class=\"token punctuation\">)</span><br>    build_app<span class=\"token punctuation\">(</span>workspace<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner.xcworkspace\"</span><span class=\"token punctuation\">,</span> scheme<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner\"</span><span class=\"token punctuation\">)</span><br>    upload_to_testflight<span class=\"token punctuation\">(</span>skip_waiting_for_build_processing<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">end</span><br>  desc <span class=\"token string\">\"Push a new release build to the App Store\"</span><br>  lane <span class=\"token symbol\">:release</span> <span class=\"token keyword\">do</span>  <br>    increment_build_number<span class=\"token punctuation\">(</span>xcodeproj<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner.xcodeproj\"</span><span class=\"token punctuation\">)</span><br>    build_app<span class=\"token punctuation\">(</span>workspace<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner.xcworkspace\"</span><span class=\"token punctuation\">,</span> scheme<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Runner\"</span><span class=\"token punctuation\">)</span><br>    upload_to_app_store<span class=\"token punctuation\">(</span>submit_for_review<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                            automatic_release<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                            skip_screenshots<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                            force<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>                            skip_waiting_for_build_processing<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">end</span><br><span class=\"token keyword\">end</span><br><br><br>  <br><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">YOUR</span> <span class=\"token constant\">PROJECT</span> <span class=\"token constant\">PATH</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> android <span class=\"token operator\">></span> fastlane <span class=\"token operator\">></span> <span class=\"token constant\">Fastfile</span><br>default_platform<span class=\"token punctuation\">(</span><span class=\"token symbol\">:android</span><span class=\"token punctuation\">)</span><br><br>platform <span class=\"token symbol\">:android</span> <span class=\"token keyword\">do</span><br>  desc <span class=\"token string\">\"Runs all the tests\"</span><br>  lane <span class=\"token symbol\">:test</span> <span class=\"token keyword\">do</span><br>    gradle<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">end</span><br><br>  desc <span class=\"token string\">\"Submit a new Build to Beta\"</span><br>  lane <span class=\"token symbol\">:beta</span> <span class=\"token keyword\">do</span><br>    gradle<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">:</span> <span class=\"token string\">'clean'</span><span class=\"token punctuation\">)</span><br>    increment_version_code<br>    sh <span class=\"token string\">\"cd &lt;YOUR PROJECT PATH> &amp;&amp; flutter build apk\"</span><br>    upload_to_play_store<span class=\"token punctuation\">(</span><br>      track<span class=\"token punctuation\">:</span> <span class=\"token string\">'beta'</span><span class=\"token punctuation\">,</span><br>      apk<span class=\"token punctuation\">:</span> <span class=\"token string\">'../build/app/outputs/apk/release/app-release.apk'</span><span class=\"token punctuation\">,</span><br>      skip_upload_screenshots<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>      skip_upload_images<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">)</span><br>    <span class=\"token comment\"># crashlytics</span><br>  <span class=\"token keyword\">end</span><br><br>  desc <span class=\"token string\">\"Deploy a new version to the Google Play\"</span><br>  lane <span class=\"token symbol\">:deploy</span> <span class=\"token keyword\">do</span><br>    gradle<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">:</span> <span class=\"token string\">'clean'</span><span class=\"token punctuation\">)</span><br>    increment_version_code<br>    sh <span class=\"token string\">\"cd &lt;YOUR PROJECT PATH> &amp;&amp; flutter build apk\"</span><br>    upload_to_play_store<span class=\"token punctuation\">(</span><br>      track<span class=\"token punctuation\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span><br>      apk<span class=\"token punctuation\">:</span> <span class=\"token string\">'../build/app/outputs/apk/release/app-release.apk'</span><span class=\"token punctuation\">,</span><br>      skip_upload_screenshots<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><br>      skip_upload_images<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">)</span><br>  <span class=\"token keyword\">end</span><br><span class=\"token keyword\">end</span></code></pre>\n<ul>\n<li>For Android <code>increment_version_code</code> install here.</li>\n</ul>\n<p>Sometimes it will fail and you will need to run:</p>\n<p><code>bundle exec fastlane add_plugin increment_version_code</code></p>\n<ul>\n<li>For iOS <code>increment_build_number</code> set up Generic Versioning by enabling the agvtool.</li>\n</ul>\n<p><img src=\"/img/flutter/version-bump.gif\" alt=\"version-bump\"><br>\n<a href=\"https://medium.com/xcblog/agvtool-automating-ios-build-and-version-numbers-454cab6f1bbe\">Source</a></p>\n<h2 id=\"8.-metadata-(optional)\">8. Metadata (Optional) <a class=\"direct-link\" href=\"#8.-metadata-(optional)\">#</a></h2>\n<ul>\n<li>For iOS you can have Fastlane download all your apps existing metadata including screenshots from iTunes Connect. In terminal navigate to the project and run.</li>\n</ul>\n<p><code>fastlane deliver download_metadata &amp;&amp; fastlane deliver download_screenshots</code></p>\n<ul>\n<li>For Android you can use <a href=\"https://docs.fastlane.tools/actions/supply/\">Fastlane Supply</a>.</li>\n</ul>\n<h2 id=\"9.-open-automator\">9. Open Automator <a class=\"direct-link\" href=\"#9.-open-automator\">#</a></h2>\n<p>Right now everything is working just by the command line. If you navigate to your project in terminal by adding &quot;cd &quot; and dragging in the project folder and hitting Enter, you can type &quot;cd ios &amp;&amp; fastlane beta&quot; or &quot;cd android &amp;&amp; fastlane beta&quot; and both will run fastlane.</p>\n<p><img src=\"/img/flutter/terminal-drag.gif\" alt=\"terminal\"></p>\n<p>If you want to be able to submit your app to Google Play and the App Store with one click we will be using <a href=\"http://www.applegazette.com/os-x/getting-started-automator-workflows-mac/\">Automator</a>. Create a new Automator Application. And Search for &quot;Ask for Confirmation&quot; and &quot;Run AppleScript&quot; and drag in.</p>\n<p><img src=\"/img/flutter/automator.jpg\" alt=\"fastlane\"></p>\n<p>Here is the Script for beta and release. You will need to create a Automator Application for both Beta and Release for each app you want automated. Save it where ever you want and create an Alias to be but on the Desktop.</p>\n<ul>\n<li>Make sure to change <YOUR PROJECT PATH> to the path to your project in Finder</li>\n</ul>\n<p>Hint: I have my automator application save in the Github Repo of my project for versioning and easy access for different projects.</p>\n<pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token constant\">Beta</span><br>on run <span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">}</span><br>\ttell application <span class=\"token string\">\"Terminal\"</span><br>\t\tactivate<br>\t\t<span class=\"token keyword\">do</span> script <span class=\"token string\">\"cd &lt;YOUR PROJECT PATH>/android &amp;&amp; fastlane beta &amp;&amp; cd &lt;YOUR PROJECT PATH>/ios &amp;&amp; fastlane beta\"</span><br>\t<span class=\"token keyword\">end</span> tell<br>\ttell application <span class=\"token string\">\"System Events\"</span><br>\t\ttry<br>\t\t\tset visible of application process <span class=\"token string\">\"Terminal\"</span> to <span class=\"token boolean\">false</span><br>\t\t<span class=\"token keyword\">end</span> try<br>\t<span class=\"token keyword\">end</span> tell<br><span class=\"token keyword\">end</span> run<br><br><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token constant\">Release</span><br>on run <span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">}</span><br>\ttell application <span class=\"token string\">\"Terminal\"</span><br>\t\tactivate<br>\t\t<span class=\"token keyword\">do</span> script <span class=\"token string\">\"cd &lt;YOUR PROJECT PATH>/android &amp;&amp; fastlane deploy &amp;&amp; cd &lt;YOUR PROJECT PATH>/ios &amp;&amp; fastlane release\"</span><br>\t<span class=\"token keyword\">end</span> tell<br>\ttell application <span class=\"token string\">\"System Events\"</span><br>\t\ttry<br>\t\t\tset visible of application process <span class=\"token string\">\"Terminal\"</span> to <span class=\"token boolean\">false</span><br>\t\t<span class=\"token keyword\">end</span> try<br>\t<span class=\"token keyword\">end</span> tell<br><span class=\"token keyword\">end</span> run</code></pre>\n<h2 id=\"10.-try-it-out!\">10. Try It Out! <a class=\"direct-link\" href=\"#10.-try-it-out!\">#</a></h2>\n<p>Everything should be working now. If you double click on the automator application you should get a confirmation pop up to release the app. The Script will run terminal in the background and you can stay focused on developing awesome flutter applications. If you want to see the progress on fastlane uploading your apps you can click on the terminal icon and the terminal window will reappear. Thanks for reading and please reach out for any questions you have!</p>\n",
      "date_published": "2019-03-10T17:00:00-07:00"
    }
  ]
}
